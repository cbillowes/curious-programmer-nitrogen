[{"slug":"/blog/example/","title":"Example","tags":["Personal Brands"],"html":"YML notes:  photo: filename of image under /posts credit: name of photographer, website etc creditLink: link to the image or author page creditSource: personal | unsplash | internet  Code blocks sudo npm install -g gatsby-cli # Update the `npm` CLI client (defn print-something[](let [somethings '(\"do\" \"not\" \"panic!\")](println (apply str (interpose \" \" somethings))))) nginx.conf # This is our Solr instance # We will access it through SSL instead of using the port directly location /solr {proxy_set_header Host $host;proxy_set_header X-Real-IP $remote_addr;proxy_pass \"http://localhost:8983\"; }  error_page 404 /404.html;location = /40x.html { }  error_page 500 502 503 504 /50x.html;location = /50x.html { } from scrapy.item import Item, Field  class BlogItem(Item):title = Field()url = Field()text = Field()  Heading level one Heading level two Heading level three Heading level four Heading level five Heading level six Add a still gif All gifs in the project outside of the /images/gifs directory are copied to /static/gifs/ on build.  üé® Typography Blockquotes  Blockquote: A great resource üí° for finding emojis and using them as is, is emojipedia. Possible remark codes are in this cheat sheet.  ....  This link has not been visited. This link has been visit.  ....   To understand recursion you must understand recursion.   Paragraphs, styling and emojis I love deadlines. üòá I like the whooshing sound they make as they fly by. In the beginning the Universe was created. This has made a lot of people very angry and been widely regarded as a bad move. 'This must be Thursday,' üòÑ said Arthur to himself, sinking low over his beer. 'I never could get the hang of Thursdays. I may not have gone where I intended to go, but I think I have ended up where I needed to be. Time is an illusion. Lunchtime doubly so. Flying is learning how to throw yourself at the ground and miss. A common mistake üíö that people make when trying to design something completely foolproof is to underestimate the ingenuity of complete fools. Isn't it enough to see that a garden is beautiful without having to believe that there are fairies at the bottom of it too? Anyone who is capable of getting themselves made President should on no account be allowed to do the job. The ships hung in the sky in much the same way that bricks don't. üíÄ posted on Monday, 1 April 2019 by Douglas Adams (Est. 42 minute read) Lists Ordered  I love deadlines. üòá I like the whooshing sound they make as they fly by. In the beginning the Universe was created. This has made a lot of people very angry and been widely regarded as a bad move. I needed to be. Time is an illusion. Lunchtime doubly so. Anyone who is capable of getting themselves made President should on no account be allowed to do the job.  Unordered  I love deadlines. üòá I like the whooshing sound they make as they fly by. In the beginning the Universe was created. This has made a lot of people very angry and been widely regarded as a bad move. I needed to be. Time is an illusion. Lunchtime doubly so. Anyone who is capable of getting themselves made President should on no account be allowed to do the job.  üéâ Remark plugins gist#!/bin/bash#print usage if [ -z $1 ];thenecho &quot;Usage :$(basename $0) parent-directory&quot;exit 1fifor name in $1/.*; doif [ $(dirname &quot;${name}&quot;) != &quot;.&quot; ]; then new_name=&quot;$(dirname ${name})/$(basename &quot;${name}&quot; | cut -c 2-)&quot;echo &quot;Renaming&quot; $(dirname ${name})/$(basename &quot;${name}&quot;) &quot;to&quot; ${new_name}mv &quot;${name}&quot; &quot;${new_name}&quot;fi      doneexit 0# inspired by https://www.tecmint.com/rename-all-files-and-directory-names-to-lowercase-in-linux/view rawunhide.shhosted with &#10084; by GitHub  youtube  tweet &quot;Cool Chrome DevTools tips and tricks you wish you knew already&quot; by @flaviocopeshttps://t.co/G2ReQ7xrvw&mdash; Chrome DevTools (@ChromeDevTools) July 18, 2018 gifsNyanyanyanyanyanyanya Gif does not exist üëá"},{"slug":"/blog/welcome-to-my-blog/","title":"Welcome to my blog","tags":["Personal Brands"],"html":"My name is Clarice Bouwer. I have been a professional software developer since 2006 and I still feel like I have absolutely no idea what I am doing. Regardless, I learn some pretty cool stuff that I want to remember so I jot it down here and have the opportunity to share it with you. If you are keen to get to know me, want to share something that you have learned that can make my life easier (and that of others) or want to thank me for my blog (which would be nice) then give me a shout out on Twitter at @cbillowes, connect with me on LinkedIn or email me at clarice@bouwer.dev. Be curious, Clarice."},{"slug":"/blog/you-dont-have-to-be-a-number/","title":"You don't have to be a number","tags":["Personal Brand","Relationships","Comfort Zone"],"html":" Do you feel like a number? Making a name for yourself in the software development community helps build street cred in the corporate world.  When you join the corporate world, you become a number. At least, that is what I heard - and believed. The game involves a lot of players and you need to play or quit while you are ahead. What does it mean to be a number anyway? Is it someone who's opinions go unheard? Is it someone who completes boring tasks to get a paycheck at the end of the month? I don't know the answer to this. I have opinions and ideas that I like sharing with others and skills that I can contribute to different areas in the software development life cycle. I don't want to settle. I want to contribute. When I joined a corporate I found it overwhelming. There's a lot of people, technologies, integration points, business rules, data and processes. I found it daunting. How can you avoid to be a number in this corporate ocean? Create your identity Let me throw names out there: Jeff Atwood, Scott Hanselman, John Sonmez, Jon Skeet, Kent Beck, Iris Classon, Lea Verou and Robert MacLean. These people are a small fraction in the global software development community and are sometimes seen as celebrities. They take the time to share their findings with others consistently. They blog, tweet, speak at events, write books and get involved in the development community. They have created an online identity - or brand - for themselves. Imagine if you were a software celebrity starting at a corporate. You would already be well known in the community so your identity would be rock solid. I tried blogging in my career. I had five separate blogs with a mixture of content that never gain traction. I probably posted under 10 posts in total. I wasn't consistent or focused. I failed dismally but have learned from my mistakes.  At the time of writing, John Sonmez at simpleprogrammer.com is giving a free 3 week e-mail course to boost your software development career. The insights and tips provided here are a sure way to create your own identity.  Build relationships You are going to be working with a lot of different types of people. Roles seem to play a big part in the corporate game although I still find these lines blurry. Dependencies can be like a large spider web and not everyone is aware of the bigger picture. It often feels like trying to find a gold needle in a tower of silver needles - painful and almost impossible. It's important to start speaking to the right people. With time and some personal investment you can start building relationships in all parts of the organization. Figure out what people do and why they are doing it. If you are friendly and helpful, people treat you the same way. This is not some way of social engineering people to do what you need them to do. This is about working with people and learning from them. Sketch the bigger picture If you stay confined to your immediate environment you have little exposure. As you start building your relationships and understand what and why it's getting done, you get exposure to the bigger picture. When something goes wrong with a dependency our team uses, I go to that team, show them the problem and work with them to help solve it. This gets easier the more I learn about the company and its people who make it a success. My final thoughts If you consider joining a corporate and think you will be a number, remember that you have control. If you want to be a number, you will be. If you don't, get out of your comfort zone and start talking. Build your identity and relationships. You learn so much by talking to other people and corporate tend to have a lot of them."},{"slug":"/blog/the-perfect-illusion/","title":"The ‚ÄúPerfect‚Äù Illusion","tags":["Mindset"],"html":" Are you chasing after unicorns - perfect things that may not exist? Perfection is a subjective perspective. I dive into this \"illusion\" and how it has affected me.  Media often creates a perception of everything being \"perfect\". Billboards, magazines, company websites, social media and television are all flooded with images of perfection. The scary part is it applies to everything: the perfect body; the perception of natural beauty; the ideal places to live; the best vacation; the most awesome places to work; the desired brands; and the list goes on. The art that media paints in our minds are picturesque. Who doesn't want to be exposed to such beauty to \"enhance\" our daily lives? I am not sucker punching the media whether it be linear, digital or physical; I just want to use it to illustrate the illusion of perfection that is created. Searching for a unicorn I was disappointed when I started working at a corporate. It sounded amazing in theory but it didn't meet my expectations. What were my expectations? Who knows! I was brainwashed by the working culture advertised by exciting start-ups and big-kids like Google, Facebook and Netflix. I don't think that these companies lie about their environments but I do think that people over the fence aren't exposed to the gnarly parts. I was emotionally attached to a unicorn - that I couldn't find. Every company - big and small - has its ups and downs. When I realized the unicorn may in fact not exist, it brought me back down to earth and my perspective changed. This makes for a more welcoming work environment and a happier state of mind. Everyone is better than me I started browsing the web before it exploded into a global obsession. The intimate web I used to know was filled with Times New Roman, Comic Sans and pages with solar flares among other horrors. It wasn't filled with perfection. This new world is filled with achievement and perfect people. I'm really hard on myself when I see young billionaires; and read articles, author biographies and code from others online. \"You should work harder so that you can get somewhere,\" I tell myself. When I joined a corporate, this nightmare hit harder as it was no longer just in the online world. Perhaps everyone is just better than me? Well, maybe - but also maybe not I started observing the people I admire. When I started listening carefully I picked up that these people - no matter how famous or experienced - all have fears like I do. Many feel like imposters or that they are not good enough. Some people just stick their necks out and give stuff a try. That's what I started doing.  I took a blogging course from John Sonmez at simpleprogrammer.com and got amazing feedback directly from him. I submitted an article to A List Apart and it got accepted. I was asked if I want to give an Ignite talk at an event just because I got involved in our local software development community.  These are big wins for me which my former self would never have achieved because my fear crippled me. Hell, I am still scared but I just do it anyway. The perfect code When you start programming, the coolest thing is to see your instructions materialize on a device of some sort. It doesn't matter how spaghetti it is. If you can interact with it and it does what you want it to do, you have a \"drumroll... hit cymbals\" moment. As the years go by your taste of pasta code diminishes and you strive for the perfect solution. This can be debilitating at times. Working on your craft is important and you should always try to write the best code you can in the moment but it shouldn't cripple you. Writing code is fun and when we get blinded by perfection, we lose some of that fun. Programming in the real world When you work for a company, you are paid to produce code. The business doesn't often care about how it gets done as long as it does get done. When you write code that becomes hard to maintain, it takes longer for you and the team to make adjustments. This is where you need to find that sweet spot between getting stuff done and making stuff perfect. The corporate world exposes you to a lot of people with a lot of opinions. If you struggle with perfectionism and also try to follow what everyone says you must do, you won't deliver a thing. Take what you can from others but allow yourself to make mistakes. When you do, you need to learn from them. Redefining happiness Steve Handel wrote that the problem with perfectionism is that it destroys happiness. He mentions that it can \"negatively influence your work\" as it can lead to procrastination and \"workaholism\". These are two spectrums but I've experienced them both. I'd work really hard at work but procrastinate on personal projects. You can't just turn of your perfection switch. That's like telling someone who is angry to calm down. It just amplifies the situation because there is more focus on it. What I propose to do is to redefine what happiness means to me so that I know what I want to work towards. Steve has some nice tips and exercises in his article for you follow. My final thoughts Perfection is sometimes a crippling illusion whether it be what you see, where you are, your experiences or what people tell you. Stop chasing unicorns, believing that you are worthless, and stressing yourself out because your code sucks. Realize that even the perfect picture has its flaws in the background and that what you are experiencing in life can actually be as close to perfect as it is. Once the \"illusion\" is shattered, you may feel yourself being happier."},{"slug":"/blog/manage-expectations/","title":"Manage expectations","tags":["Relationships","Communication"],"html":" Do you keep business informed? Business won't know when things are not working out unless you tell them. It is surprising how much support we can get when we open honest channels of communication.  Let's say you've settled into a corporate. You start working on a story but you horribly misjudged its complexity. The deadline is looming but you just can't figure it out. Everything you try has more obstacles or - even worse - results in dead ends. You pull out every trick from your developer toolbox but you're stuck. In the heat of the moment, your product owner pops by for a quick update. This wasn't your first interruption: you had to help a developer with a bug in the system; a stakeholder popped by to ask you what you thought of an idea that sprung to mind; a designer needed some CSS assistance; your manager scheduled a one-on-one with you; a friend called you to ask for some advice; and you had a lot of network related issues. This latest intrusion leaves you at breaking point. \"Perhaps if people quit harassing me, I'd probably be done by now,\" you badly want to shout out so that everyone can hear you and leave you alone. Instead you reserve yourself as best you can and provide a report. Deep down inside you realize something profound: What you allow will continue People can't read minds. At least not in my experience. If they can, they hide it well. Regardless, if you allow intrusions, it will continue. People don't wake up each morning thinking of ways to get you worked up. At least I hope not! They generally have reasons for interrupting you - whether they are important or not is often debatable. I strongly recommend you communicate your expectations with those around you. It could be as simple as setting up a working agreement with your team and business. You could find ways to deal with pesky distractions and learn techniques to manage your time. I want to focus on one distraction in particular: business stakeholders interrupting you for a progress update. Keep business informed If you don't want to have product owners intruding, you need to keep them informed. They have to report to a bunch of other business people and if they are in the dark, they will hunt you down.  It's simple: have open and honest communication between your team and business.  Let's delve into some situations: Communicate interruptions Interruptions don't disappear once you put steps into place. You need to \"untrain\" what you have allowed in the past. You need to be strict with yourself and those around you.  Lean heavily on your scrum master for guidance and assistance. Be mindful of emergencies and act accordingly. If you are interrupted, communicate your expectations with that person. If the team is at fault and you can't deal with it immediately, bring it up directly after the next standup. If it really gets out of hand, let your product owner know so that business expectations can be managed and you can get more guidance.   Be aware that if you whine about interruptions without taking action, it could look like you are making excuses.  Underestimated complexity The moment you realize you have underestimated something, seek guidance from your team. If you can't resolve it, immediately inform your product owner - in person if you can (draft up an email afterwards if you need an audit trail). Explain the situation in non-technical terms. Use a whiteboard or draw pictures. Business values this because they can manage expectations upward much quicker. If you bring it up for the first time at a deadline - well, you're skrewed. Catastrophic failure When someone tells you that something is broken in production, immediately inform your product owner. Your product owner needs to provide guidance. Not everything that breaks in production is catastrophic. Yes, I just said that. We see production as the holy land where everything must be perfect. You may end up chasing a white rabbit bumping into Alice along the way if you go down this hole - and it's not going to be an adventure. Understanding business value Trying to fix everything in production (especially if you are new to a product), could waste valuable time and increase stress. You need to understand the business value attached to it. Say you start fixing it only to find out that:  The product or feature is obsolete. You should be working on something that has a bigger impact on customers or business. There are more pressing issues that need immediate attention. Another team is already working on it.  You definitely need guidance from business. Understanding human-beings You are surrounded by a lot of people at corporates. Everyone has their own ideas of how things should work - and they will tell you. This is terribly overwhelming if you are new to this world. Don't take value out of every word that is said to you. If you are told that something is broken in production, seek guidance. The longer you stay in your environment, the more you discover what real catastrophic failure is. Real catastrophic failure Okay, so you are a product pro and you know that this is a real disaster. You still need to bring it to your product owner's attention. If you understand the impact, you may offer guidance. At corporates you may find a list of teams that need to be informed. Figure out who and let them know. Never forget to include the operations team that manages escalations from call centers. By proactively creating awareness, you eliminate everyone coming directly to you to tell you that something is broken in production. If you have a change control framework, this is when you follow the emergency change protocols. You made a mistake When you make a mistake, don't go pointing fingers. You are human. Allow yourself to be one. You will make mistakes. It's fine - as long as you learn from them and nobody dies. Let the product owner know and be honest about it. If you hide it, expectations cannot be managed and someone will get into trouble. If the team makes a mistake, you are part of it. You are one unit - that should be solid. Make time to reflect on these mistakes (retrospectives) and find ways to improve (inspect and adapt) both personally and as a team. My final thoughts Distractions are a glorious pain in the backside. One of the worst distractions is consistently being asked for status updates. This is alleviated when we - say it with me - manage expectations. I was terrible at this. When I eventually took action, I gained a lot of trust from business. In turn, they gained my trust. Our interests are now aligned. I don't get asked for updates because I keep business informed. We guide and help each other out. We have a healthy, strong and blissful relationship."},{"slug":"/blog/bonding-with-testers/","title":"Bonding with Testers","tags":["Relationships","Communication","Productivity"],"html":" Do you form relationships with testers? Teaming up with testers from the beginning of a feature can positively impact the quality of the feature being developed.  At work we often get trapped in our roles. We develop the software so we should only contribute to the development of whatever we're building. Once complete, someone - hopefully not the user - should test it. We suck at testing anyway don't we? Perhaps. I guess it depends. I don't particularly have \"parental feelings\" towards my code. I love coding but I make mistakes. I can't think of all possible scenarios. I am aware of this. Today I write code and think it's the most beautiful code I've ever written. Some time in the future I am guaranteed to pull my hair out. I've made peace with it.  I've worked on codebases alone for most of my career. I know the sense of autonomy it presents but I am also well aware of the problems it can cause. Now that I am part of a team, I can produce better quality code because I have more validation from others through brainstorms, discussions, code reviews, CI and testing. I have more input.  The factory line of progressing a feature from UX to design to development to QA to DevOps into production feels very \"pushy\" to me. Sure it is the natural line of progression but we shouldn't just dump it onto the next stage. A deeper understanding of the purpose of the feature is definitely desirable. Reaching the testing stage Let's focus on development to QA. Quality assurance is something that shouldn't be an after-thought therefore I'm going to refer to this stage as testing instead of QA. (This is a more favorable term I've picked up through many craftsman in our industry) Understanding the feature Imagine a feature submitted for testing where the tester doesn't understand the feature entirely. The feature is tested subjectively, goes to production and its a disaster. Or it goes back to development because it failed. Perhaps the tester wasn't aware of something critical to the feature. Does this make them bad testers? I don't think so. I think it's just an error in communication. It could be that the preferred method of communication is through email or digital boards. I feel that text is great for audit trails and refreshing your memory of something but it is subjective. When I read something I build a picture in my mind. That picture may look completely different to someone else. In practice, talking to one another can help iron out those kinks in understanding. If the testers are in the same vicinity as you, what stops you from having a conversation with them? If you are working remotely, you could have VoIP call. Not always very technical Most people won't say out of the blue, \"hey, I am not a technical person\" so the level of technical skills shouldn't be assumed. Technical issues - network connectivity, proxy-related, authentication problems, environment configuration misalignment, etc. - could cause terrible impediments for testers. If you are technical, why not step in an lend a helping hand? Encourage your team to raise issues before stand-ups the next day. You don't have to take on everything yourself but you could be a gateway to roping in the right people for the job. Show your tester how you are resolving it so that he/she can learn and upskill in that space. User-focused Testers try to understand how users interact with systems. Depending on the audience, this could be completely different to how a developer interacts with a system. If you are very technical and logical, what you create may make sense to you. That doesn't mean that your users will understand it. You could learn a lot about testing and how users interact with what you build when you partner up with your tester. Use-cases As testers are user-focused, they think up different use cases to test features against. If a feature fails any of these cases, it needs to be fixed before it can progress. This is valuable knowledge that we should consider upfront. This could help us understand what will be tested so that we can ensure we cater for such cases. It's less expensive as stories have a lower chance of hopping back and forth within a sprint. Automated tests Testers these days rely on testing our systems by executing automated regression and functional test suites. This involves code. Perhaps we can help out here. This could provide a great platform to learn new tools and share knowledge and ideas. There is nothing wrong with pair programming with a tester. My final thoughts The team is responsible for quality and delivery of software - not you alone. You may not have control over the entire eco-system but you do have control over the quality of the code going into the repository. How much do you value quality? You can't do everything alone. You need to work cohesively as a team.  Oz Chihwayi and Janco Wolmarans presented together at DeveloperUG (a local meetup) one night. Their talk was titled \"The story of a Tester and a Developer\". This story really resonated with me as it touched on a lot of concepts I had to figure out the hard way. "},{"slug":"/blog/context-driven-queries/","title":"Context-driven queries","tags":["Communication"],"html":" Do people look confused when you talk to them? Only you can truly know what is going on inside your mind. Communicating with context and intent helps alleviate confusing discussions.  Our minds are beautiful. It processes, sorts and catalogs data from each experience and outputs a perspective. From this we create an understanding of something which allows us to draw conclusions. The perspectives we have aren't rigid; they evolve over time. We don't all experience things the same so we could conclude that our perspectives are subjective to our understanding of experiences. Knowing this, we need to be mindful of how we initiate our conversations. Looking at queries in particular, it's often a struggle to get people on the same page as you. The nature of queries When we have a query, we need help or guidance from someone else. Much like T-SQL it needs to be declarative to get results. If we omit an important part of the T-SQL statement, our results are skewed. Declaring context People are complicated and there are many obstacles when it comes to conversing. In code we aim to communicate intent. Let's try apply that to the structure of our queries:  Introduction - Who are you? The nature of the query - What the query is about? The actual query - Why are you asking for help? Conclusion  Introduction Introductions are important. The let people know who you are and help build relationships. It's a good start to introduce yourself. By building relationships with others, both parties are able to get assistance faster in the future. Give your name If you don't know someone, provide your name. You can do this until a relationship is formed. Tell the person where you are from Some people are exposed to queries from many different spaces. By providing information like your company, division and team, people know where you are coming from which gives a better understanding to the nature of your query. What you provide depends on who you talk to and where that person is from:  Source of image: Clarice Bouwer Note: If you are a consultant from a different company, keep it simple by omitting your company's name unless it is related to your query. Tell the person what you do By providing your role, people have a better understanding of the nature of your query (provided it is related). They also have a better understanding of what role you play within your team and the organization. If people already know what you do, you don't have to keep repeating this unless your role changes.  Example:Hi, my name is Clarice, a software developer from the DStv Now website team.  You don't have to add fancy titles like senior or junior. The point is not to classify the level in your role but rather to categorize what you do. Developers don't always have the same types of queries as designers for instance. If you don't feel like your role will be adding value or if you are asking on behalf of someone in a different role. You could omit it and move the introduction to add context for the other role.  Example:Hi, my name is Clarice from the DStv Now website team. I'm coming to you on behalf of Alexa, a designer in our team.  The nature of the query Tell the person what your query is about. Try to be specific so that the person can decide if he/she can actually help you. If someone referred you to this person, mention this. This gives people the opportunity to determine if they can help you. If they can't, they may refer you to someone they think has more expertise. Communicate to the person that they can stop you at any time to ask for more context. This could plant a seed that causes awareness for over-whelming parts of the query.  Example: I need technical assistance with Jenkins. Sarah thinks you can help me so she referred me to you. Please stop me at any time if you need more context.  The actual query This is the meat of your query. Get down to the specifics of what you need help with. You can also give points of what you have already tried, who you have spoken to and why you are coming to this person for guidance.  Example: I am configuring Jenkins and would like to understand how I can give developers outside of our team access to view our pipelines. IT is concurrently investigating internet problems I'm having so to save time, I came to you. Do you think you could help me?  Conclusion Decide if the query is resolved. If it isn't and the person can't offer additional assistance, ask if you can be referred to someone else. If not, ask around - continuously providing context - until you hit the jackpot. Remember that this person has taken time out of their schedule to help you. Be grateful.  Example: Thanks. You've helped a great deal. I really appreciate it.  My final thoughts This sounds so simple when laid out but in practice we take our own perspectives, circumstances and environments for granted. We can't assume that people always know what we know. We need to give context: in our teams, across teams, across divisions and across companies. Context is something that we can easily overlook. Pay attention to the person's body language. This may indicate that you are overwhelming them. To get better results for your queries, provide the necessary context."},{"slug":"/blog/days-that-rush-away/","title":"Days that rush away","tags":["Productivity"],"html":" Are you busy but don't feel productive? I feel this way sometimes. It is exhausting. How can we find ways to feel fulfilled and accomplished at the end of the day?  Rushed days leave me feeling exhausted. Today was one of those days. Events were back-to-back. Emails and instant messages were streaming in. There was little time to breathe. Have I fallen victim to \"rush hour syndrome\"? When days get filled to the brim with noise and tasks that cannot be completed, how can we not feel exhausted and unaccomplished? Surely this can't be healthy.  It's affected my memory: And not in a good way. My memory gets worse when I'm doing too many things at once. Stand-ups are challenging as I struggle to recall the mixture of interlaced tasks that I juggled the day before. Quality suffers: If I can't focus on something and do that well, the quality will take a knock. Constant context-switching and multi-tasking are a real threat. Expectations aren't met: If I am too busy I struggle to get round to managing expectations. If business is expecting something but there is something else keeping me busy, they need to be aware of it. TODOs spiraling out of control: Production bugs, changes, queries, issues, improvements, suggestions... the list just grows. It feels like a mountain growing on my back.  What went wrong? Some days I am very good at tackling things. Today I felt like an imposter. I felt like I had no idea of what I was doing and all my improvements went out the window. Everything felt like a mammoth task that couldn't easily be completed. How did I get here? Taking on too much I am overburdened this month - both in my personal and professional capacity. I've committed to too much. Much like a sprint, I need to cut down my commitments to manageable chunks which alleviates pressure. Challenging myself is good but spreading myself thinly causes exhaustion. Less time for myself By taking on too much I have little time to breathe. I need to make time to meditate again. This helped align my mental being with the physical world. I do Pilates and Yoga twice a week and am in a better state of mind afterwards. Playing other roles I have eight years of experience being a one person team. If something needs to be done I am naturally able to complete it, regardless of the role required. This doesn't go down well in a corporate as I can't possibly do everything on my own. Sometimes I forget this. If I have an impediment, I usually sort it out myself. This eats into the time for the work that I have committed to completing. Depending on the nature of the impediment, sometimes I need a friendly reminder from a Scrum Master to say, \"Hey you, I am here. Let me help you.\" I stopped documenting \"task creep\" I had a great conversation with my Product Owner one day about how I was struggling to keep track of all sorts of tasks that crept into a sprint. She suggested keeping a journal. It helped with remembering what kept me busy during the day. I could also raise flags that could improve our process and escalation procedures. When I'm overwhelmed, writing things down feels like it's adding to the things I need to do, so I slipped out of it. This was a mistake. Not asking for help I had a list of things I needed to do but wasn't finding time in the sprint to do them. I raised this with the team. They gladly offered to pick up a task and help out where they could as it affected our team and product. Being hard on myself These are all bad habits that I am trying to improve on. Like any habit it is hard to unlearn overnight. When I feel overwhelmed, the habits are triggered and I am back to square one. Instead of feeling like an imposter, I should just acknowledge that I am having an off day and get assistance where I can. My final thoughts By being aware of my flaws I am able to actively improve on them. It may not go as well as expected each day but that's okay. Being hard on myself isn't going to help me. Trusting in a team and working in an environment where you are granted the opportunity to continuously learn and improve is something I can leverage on. For now some days may be rushing by but who knows what the future will hold if I keep on improving?  If you have experienced this or have found ways to improve your day, please share in the comments below. It is a great way to learn through the experience of others. "},{"slug":"/blog/time-is-precious/","title":"Time is precious","tags":["Productivity","Time Management"],"html":" When last did you just stop to smell a flower? Or take a peaceful walk without having to rush for something?  Today I sat in standstill traffic. It took me an hour to get home. It's usually between 15 and 20 minutes. My time is precious to me so I was frustrated. I'm in this \"get up and go\" mindset where every second counts. I frantically waited for Waze and my network provider to cooperate. I needed a route recalculation and I needed it fast. We were standing still for long. Not to mention the fact that I left work without going to the loo. Lucky for me, the app calculated a route and got me home within the hour. Who knows how long I would have been stuck in that dreadful traffic? Before I rerouted, many drivers became reckless. The rules of the road were discarded. I guess this is due to frustration and desperation. Other drivers became annoyed and vocal. There was no more room for courtesy as people were pushing in one after the other. A metaphor hit me like a pan galactic gargle blaster. We experience chaos like this in software development teams. When pressure builds some people throw process out of the window. Others get mad about that. People act out of frustration and desperation. Organized chaos A bunch of people with different types of skills, perspectives, personalities and traits are thrown into a team and are expected to produce quality output upon request. This is sometimes done in a confined space like a war room. People experience pressure differently. Some run-away, some get frustrated, some panic while some are completely chilled. I want to dive into time-related factors that add pressure to teams. While teams produce results, quality can suffer as a result of such factors. This leads to an array of different emotions within a team. Ramp-up time When someone joins the team for the first time, there is a ramp-up period. Ramp-ups take time and can create a burden on the rest of the team especially if it is a pressure cooker environment. Onboarding process When a person joins a company, they need to learn everything from the ground up: business, products, teams, network, unfamiliar technologies, debugging the solution, endpoints, processes, policies and people. It can take months to settle in especially if a person is coming from a small to medium company. If this person isn't properly mentored or receives proper and ongoing orientation, what becomes of them? I guess it depends on the nature of the team. If the team is always pressed for time, how are they going to properly ramp that person up? This poor person is going to be overwhelmed and pick up some bad habits. Resignations When someone resigns, all the knowledge that person has acquired leaves with them. Although everyone is replaceable and policies can be in place to alleviate pain, it still has a social impact on the team. Not to mention a replacement is required to alleviate pressure from the rest of the team. Relocations I like the idea of being able to move to different teams. This exposes you to other parts of the business. However, there is a trade-off on both teams. As the person is already accustomed to the company, the ramp-up time should just be for the solution and process within the team. Depending on the complexity, this can take some time. What happens when there isn't a replacement in the other team? People need time to gel It takes some time for a team to start gelling well and learn that they can depend on one another. Trust isn't something that happens implicitly - especially if one has experienced problems in the past. This can slow things down and frustrate people who want to get things done. Disruptions, like relocations and resignations, can affect the team dynamics especially if the team finds out last minute or has no say regarding the relocation. Not seeing the bigger picture Let's say business indicates a sense of urgency on a feature. The team starts working on it. Then business decides that the priority has changed. The feature is discarded or put on ice. Who likes working on features that don't go into production? This can be super frustrating and cause complexity in the repository when put on ice. Business needs to communicate the importance of the decision. Don't settle for the \"because my boss said so\" answer - there must be a real reason. When I find myself in this situation, I find myself less frustrated after I have found out why. Lucky for us we have a Product Owner that communicates intent with us. If you don't have someone like that, perhaps you could aspire to being nosy and finding out for yourself. Don't hold onto that knowledge - share it with your team. Pop-up meetings eat into productivity I work in an Agile team with a two week sprint. We have ceremonies that leave us with about 8 ¬Ω days of actual work time. Meetings that pop up during the sprint that don't necessarily relate to the current sprint work make me very anxious. Don't attend everything I used to feel obligated to attend every meeting I was invited to. I have come to realize that in most cases, people are just trying to get people into a room to talk about a finding a solution to a problem. I try to find out more about the meeting to see if I can add value. If I can't I simply decline - and say why. If there is someone more knowledgeable I suggest they get in touch with that person. Meetings need direction If there is no direction then what is the point of the meeting? Politely excuse yourself.  I recently attended a meeting directed by our Product Owner. It was the best meeting ever. She managed to get people of all divisions to communicate how one thing was being handled. She took charge of the meeting, got the right people to talk to each other and we got to understand the entire end-to-end process in the allocated time. I wish all meetings were like that.  Time-boxing I've evolved from the archaic developer mindset into a people-driven realm. People fascinate me. Unfortunately I now lose track of time in meetings and office conversations which paradoxically means I waste precious productivity time - which is precious to me. Time-boxing is essential to keep on track with commitments. When a meeting is running over its allocated time and you are no longer obligated to be there, is there any harm in excusing yourself? My final thoughts   The \"get up and go\" mindset is exhausting and is something I want to move away from. Rushing about to stay on top of things really impacts quality of work. It also makes me feel conflicted during idle-time. No wonder my days are rushing by me. When last did I just stop to smell a flower? Or take a peaceful walk without having to rush for something?  If I feel pressure I can talk to my manager and business to find ways to alleviate the pressure. If I keep it to myself, people think that everything is okay in my world. The corporate world is tricky. There are many ups and downs. Many things are out of my control. One thing I can control is how I spend my time. "},{"slug":"/blog/adjusting-the-corporate-mindset/","title":"Adjusting the corporate mindset","tags":["Productivity"],"html":" Just because it's always been done that way, doesn't mean it can't be changed.  Personally there is nothing I can do about the way corporate work. There are a lot of people involved and possibly a plethora of reasons for why they do things the way they do - that I can't see right now. It doesn't mean that I have to always agree with every decision that is made. Just because it's always been done that way, doesn't mean it can't be changed. Right? I know people working at corporate are doing the best that they can and that things can get pretty messy when a lot of people are involved. Some things end up cumbersome and bloated or go completely overlooked. Here's what I would focus on to make a happier space for developers. Solid onboarding process When a developer starts at a corporate, they are going to be overwhelmed. This is guaranteed. It doesn't matter how many years experience they have, they need to learn everything about the business, products and the people from the ground up. This takes a lot of time. We shouldn't just throw people into the deep end with everything. \"Bend a tree while it is still growing.\"  Give them a solid welcome pack with important HR and company familiarity documents. It should act like a map with a \"you are here\" in this business. Access cards, user accounts and all technical requirements need to be available on the start date. Someone joining a company is eager and excited. Idle time is going to be frustrating. Orientation needs to be ongoing for a few months. One day is too overwhelming in large companies and not everyone is going to retain all that knowledge that is crammed into their minds. Assign a mentor for the next year so they have a dedicated person to guide and help them along. Don't assign them to a team straight away. Sure you may desperately need professionals in some teams but this is only going to slow down the delivery and cause unnecessary frustrations within a team. Instead let them join a team of their choice and pair on bite-sized chunks of work. Perhaps they could be rotated every sprint up to about four sprints. This should be less invasive and give them more exposure to teams, products, people and technology. By pairing, they don't have the pressures of setting up their environments fully but as they have their machines they can start exploring codebases and read up where they can. After the rotation period is up, let the person choose from a list of priority teams - teams who need developers. Let the team have an informal interview with the candidate to identify a possible fit. Forced placements don't encourage a sense of autonomy within the team and if the person doesn't fit well in the team, everyone is left discouraged.  Focus on staff retention The customer is very important but without your staff there will be no customer. I would get my managers to focus on keeping their staff happy while the staff can focus on keeping the customers happy. If someone is frustrated in a team and it cannot be resolved, perhaps they are not suited for the team. If the person needs to be relocated, I'd have a conversation with the team to find out who they think will be better suited for their team. Adjust the pay scale Market-related salaries pay the person what other companies are willing to pay. What is the person worth to the company? If creative minds are constantly worried about money, quality will suffer and the person will eventually leave the company. I don't think slapping everyone with fat salaries is the answer but people need to be happy with what they are earning so that they don't look for opportunities elsewhere. Adjust KPIs If the pay scale is right money is not an issue. Bonuses are great but if they are driving poor decisions or cannot be met then why do we offer a reward? Value is more important and how it is measured is up to the division and role I guess. Isn't it better to receive a bonus based on the value you add to the company within your role? Money aside, people want to grow in their craft. Perhaps offering a reward to go to popular conferences local and abroad to upskill and network could be an incentive. Arranging a workshop with \"developer celebrities\" could be another. Encourage autonomy Not only should it be encouraged but allow it to be practiced. Managers can provide guidance and business direction but the product teams as a whole should be able to make decisions. They need to talk to the right people and teams so that everything aligns to the bigger picture. By have autonomous teams, management can focus on managing and alleviates decision making bottlenecks that can be faced. My final thoughts Maybe this will all result in failure. Who knows? I've only been at a corporate for two years now and perhaps I am being ambitious or over-looking something. I do feel that there is a mindset from very high up in the corporate chain that needs to be aligned with the advances in the technology space. Whatever that adjustment is, I can still speculate."},{"slug":"/blog/problems-with-microservices/","title":"Problems with microservices","tags":["Technical"],"html":" After an interesting debate, I decided to explore some of the problems that teams may face with microservices architecture.  Trying to decipher a monolithic app is a real pain. Changing it is scary. I don't always trust the test suites attached to codebases because with time and neglect, code and tests can rot. I do rely on them though. The alternative to the monolith - microservices. It's become a buzz word. Have services that do one thing and do it well. A separation of concerns when it comes to the architecture of applications. Yes! I am in, but wait... are we fully equipped to go down this path? Analysis paralysis What if you could break your existing service down into 50 services. Another person on your team only identifies 5 services. The dev lead sees 10. I don't know if this exact scenario often happens but:  How do you go about splitting them? Will you be able to communicate the benefits of splitting them to business? How does splitting your current services impact your consumers?  Time constraints It takes time to set up each service:  Create the code base Configure version control Configure dependencies Set up scaffolding Write the logic Add useful logging Configure environments Setup continuous integration and deployment pipelines Create an automated test suite Documentation  If you need to quickly produce a prototype or minimum viable product, you will most likely skip this. Unfortunately the reality is that many prototypes and MVPs end up in production - for life. I suppose this is how an app becomes a monolith. If time is allocated to refactor and rework the architecture iteratively it could be saved. Monolithic architecture We are trading off a monolithic application for monolithic architecture. If there isn't an overview (diagram or documentation) it can be hard to find the source code and endpoints for each service - especially if the naming convention is that of Marvel superheroes (I've not personally seen this but developers can be quite creative). Luckily the services need to be configured to talk to other services so endpoints can be discovered once you have the source. Unpredictable environments There can be a number of environments that need to be configured like Localhost, Development, QA, Staging and Production. One would assume that environments would be aligned for each dependency. If I point to the QA Billing service, it would point to the QA Accounts service. This is not always the case. Each team has its own constraints and reasons for pointing to different environments - especially if their dependencies are external. Oh boy, how much pain this can cause Bloated configurations Configurations become bloated with endpoints and each environment needs to be configured accordingly. This isn't too bad unless you are the consumer using a lot of dependencies. Identifying bugs Bugs are hard to pin-point if there are no tests validating different integration points. Unstable data Data can become unpredictable the lower the level of the environment especially across different teams. Strange and unpredictable behavior can cause skewed results during testing. Developers end up spending valuable time chasing down where things went wrong. Poor logging It is \"fairly easy\" to debug monolithic applications (provided you can get it running) because you can step into the code. When it comes to microservices, the proof is in the logging. Sadly, logging is sometimes an after thought. This makes it hard to identify problems in the stack. Events need to be chained. If you trigger an event, you need to be able to track that event right through the stack in some form of visible logging solution like GrayLog. Getting buy-in Not everyone believes that microservices are the solution. Every solution has trade-offs. When designing the architecture it is important to consider the advantages and disadvantages. The debates should be knowledgeable. I think it's a terrible idea to consider implementing something just because everyone else is doing it. That's resume-driven development - avoid it. The team needs to support the application so they are responsible for the decisions they make. It is important to consider what negative impact a decision can have. Perhaps that could be the driving factor to deciding? My final thoughts I am not opposed to microservices. What I am opposed to is struggling to get features tested due to unpredictable data and unstable environments. Often tremendous pain is felt in the front-end consumer teams. Valuable time is wasted trying to sift through a plethora of services and meaningless logs to try pin-point exactly where stuff broke. If the company and teams don't have the right mindset or environment, microservices aren't necessarily the answer. What I've discussed highlights symptoms of different problems within teams and organizations that would have an impact on a microservices architecture. If this approach is taken, I believe that teams need:  Efficient and reliable continuous delivery pipelines (Docker) Visibility to monitoring of services Overview diagrams and/or documentation of the architecture Useful integration tests Stable and predictable environments Visible, useful and chained logs   Please share your experiences in the comments below.   Want to find out more about microservices?  How Enterprises Benefit From Microservices Architectures Microservice Trade-Offs Pattern: Microservices Architecture Microservices architecture: advantages and drawbacks The Benefits Of Microservices "},{"slug":"/blog/how-this-blog-improved-my-productivity/","title":"How this blog improved my productivity","tags":["Productivity"],"html":" Having a pet project has some powerful benefits. Do you have one? What benefits have you observed?  I started this blog as a course. I decided to meticulously create the site from scratch keeping in mind page speed and user experience. It took a lot more time and dedication from me. I had to create features from scratch instead of using a CMS and existing design template. As a back-end developer with a love for front-end, this approach was way more exciting for me. I could dive deep into a feature, understand its benefits and decide if it was really worth adding it. Personal benefits I have direction I like writing code in my spare time. I often find myself writing code that goes nowhere. I tend to over think and over complicate it. This is usually because I don't have a clear direction to focus on. By creating something with direction, I have a goal and it is fulfilling to see the \"product\" materialize. Exposure to iterative development By having to create all the features from scratch, I need to take an iterative approach. It's like running my own little Agile project. This is very exciting as I need to put different types of hats on during development. I have to switch between a user, product owner, designer and developer. I release iteratively at my own schedule. This exposes me to the problems business may face if an important feature is introduced. It's a fun exercise. Autonomy feels good By having full autonomy on my pet project I can do as I please. This is exciting as you are working on your own product and make your own decisions. It boosts creativity, allows you to experiment and helps find solutions to problems that you can apply at work. Productivity benefits at work Knowledge can be applied It may not help my role directly but it can have a positive impact on the team. I can liaise with front-end developers, help with grunt tasks &#x26; SASS, improve page speed and work closer with designers. Confidence is boosted I started telling people about the site at work. This is something that is outside my comfort zone. I like making things, then keeping it to myself or chucking it because I am scared of the feedback. All that went out of the window when I launched {{ site.title }}. I just started telling everyone I could. I linked it to my online profiles. I share my articles. This may freak me out but it has boosted my confidence a lot. Dabble in different tech As a corporate developer you tend to get \"boxed\" into a role within a team. It's not always easy to be cross-functional even if it comes naturally to you. You need to build trust and what better way than create your own work of art that you can share and be proud of. I started my journey with grunt and Jekyll. I was so ecstatic when the designers at work said the design was beautiful! I was also able to get my hands dirty with node, ruby, analytics, optimization and different types of automation in the front-end space.  Check out the credits page that lists what went into making this site.  My final thoughts Having a pet project can be beneficial to upskill, boost confidence and think outside your role. It also provides an opportunity for you to create something that you can be proud of which can showcase your skills. By letting your creative juices flow outside of your work environment, you can positively influence your productivity at work - provided you don't let it burn you out."},{"slug":"/blog/the-importance-of-git-history/","title":"The importance of Git history","tags":["Technical"],"html":" Version control is like time travel for source code. If commits are monolithic and the messages suck... what exactly are you going back to?  I use Git at work and in my personal playground. It gives me the confidence I need to explore options and experiment without fear of losing changes. With such a powerful tool comes responsibility. If commits are monolithic, have useless messages and contributors are not mindful of how the history evolves over time; you end up with a dirty history that can't help you much when you need to go back in time. If you work in a team or are contributing code remotely, you need to be aware of a few habits that could help you in the future: Reformatting files It's okay to reformat badly or incorrectly formatted files. It is not okay to commit it along with your change. Try it out and check the diff. Can you spot your change easily? Show it to someone else to see if they can spot it. Source of image: Screenshot of Git Diff When you reformat a file automatically, you need to make sure that your reformatting settings are consistent with the rest of the source code. You don't want to introduce tabs when spaces are being used nor do you want to change the number of spaces from x to y. This introduces inconsistency. Keeping files in the correct format is important. Mixing formatting and code/content changes pollutes that commit. If you need to go back in time to find a specific change, it is going to be considerately harder to do so. Be wary of what you commit Version control remembers everything you have done. If you commit a large file it stays in version control even after you delete it. It will take a while for your repo to be cloned if people are contributing from countries where bandwidth is slow and often limited. Corporate repositories should be no different. Often people work remotely on support or from a different region and can also end up suffering. Also be mindful of committing sensitive data such as passwords and SSH keys. Tip: There is a way to remove data using the BFG Repo-Cleaner. This will permanently remove files from your repository's history. Atomic commits Avoid monolithic commits - a large set of changes that affect a lot of files. This makes reverting difficult. You have to revert the entire commit thus losing other changes you may want to keep. Complete a bite-size chunk of work and commit it. Do this regularly. Each commit should be a piece of code that can exist independently in production. If you need to explore options or experiment you could branch out and go crazy. When you're finished you could simply rebase everything on top of the central branch your team is developing on. If you screw up on a collection of commits on your local branch, you can rewrite the history using an interactive rebase. This allows you to squash commits and alter commit messages.  Sean Patterson has some great insights on atomic commits.  Don't push work in progress If you are not finished with a piece of work you could stash your changes. If you are concerned about losing hours of work then you need to start practicing branching and atomic commits. Verify the diff If you have made changes, carefully check each line that you are committing in the diff. GUIs like Source Tree and Git Extensions allow you to easily stage or discard lines.  IDEs can make unnecessary changes to files You may want to discard an experimental line The line no longer makes sense to introduce  Note: When you discard changes, always build the source code before completing the commit. If you forget this and there is a compilation or runtime error you can always fix it by doing a git commit --amend to amend your last commit. If you are wary of losing important changes by discarding then stash your changes. Apply them and discard your lines. You could always apply the stash again later. When you are done, delete your stash. Useful messages The importance of this cannot be stressed enough. This is what you see in your git log and remote repository. Messages need to be informative. I am not going to make up my own rules because I agree with the ones that already exist. Instead I am going to reference a very informative post written by Chris Beams.  Separate subject from body with a blank line Limit the subject line to 50 characters Capitalize the subject line Do not end the subject line with a period Use the imperative mood in the subject line Wrap the body at 72 characters Use the body to explain what and why vs. *how  Tip: Are you using Jira and BitBucket? Atlassian integrates the two. Add the story number to your commit message so that Jira displays it automatically in the story. Source of image: Screenshot of JIRA Merge conflicts You will get these when you aren't the only person contributing to a file. Git won't guess which changes should be the chosen ones. You really need to be awake when resolving a conflict so that you don't accidently discard other changes. If possible sit with the other person who committed the change to resolve it. Be wary of automatic pushing Some developers prefer to push directly after a commit. Some GUIs even have this feature built in. This must be used with caution. Once you have pushed you can't easily fix that commit by amending or rebasing. It can also break your build if you have discarded lines without the chance to verify the build. Learn from your mistakes You are bound to do something that is going to come back to bite you. When this happens it is an opportunity for you to learn how to improve. Share what you have learned with your team so that others don't have to make the same mistakes in the future. My final thoughts  Source control is a developer‚Äôs best friend. The ability to share code with multiple developers, track changes, and easily roll back when problems arise is indispensable in this distributed world. ~ Sean Patterson  Version control is not just there to backup code. It can get you out of a pickle fast. You need to think about how your commits could affect you and your team in the future. Guide team members who are new to version control - or to this mindset - so that they understand its true importance and can start practicing better version control etiquette.  Want to find out more about Git?  Getting Git right by Atlassian Learn Version Control with Git a step-by-step course for the complete beginner "},{"slug":"/blog/people-oriented-software/","title":"People oriented software","tags":["Mindset","Relationships"],"html":" The art of making software for people with people.  Today the words \"people oriented software\" materialized in my mind. It's not a new (I Googled it) but it is new to me. As a software developer I naturally felt obligated to write about code and technical implementations. I didn't follow through on that. To me, writing code is a small subset of software development. We write software for a reason. What that reason is depends on the people who will be using that software. I have a lot of fun writing code but I have more fun making software with people for people. There are interesting challenges that materialize when people start working together. Especially so when there is a lot of unnecessary complicatedness in an organizational structure. We all want different things for different reasons with our own ideas, past experiences and understandings. Tackling these challenges to make for better software, delivery and happier teams &#x26; users is what I love thinking about. This is the crux of what I want to write about. The people we make software with are the: User We can argue about the best technologies and implementations to use then write code everyday until we turn into code writing zombies. What is the point if people don't like it or even worse, don't want to use it? To me, truly understanding the significance of the problem being solved and exactly who it is for is a fundamental part of creating software. I want to relate on a social level and almost \"feel\" the impact it will have on the users. UX &#x26; Design This step is often abstracted away from developers but lucky for me, we all sit in the same room. I like to know why decisions are made so that I can paint the bigger picture in my mind. This communication is a two-way street of insight into the user, the strategy, consistency throughout products and the technology. Developers Writing code for a computer to understand is easy. Writing code for humans is a challenge. Many software craftsman save the day with insights to write clean, testable and maintainable code. I don't advocate \"Fear-Driven Development\" but this tweet is both funny and true on some level: &quot;Write code as if the next maintainer is a vicious psychopath who knows where you live.&quot;&mdash; Jack Franklin (@Jack_Franklin) December 4, 2012  Regardless of the process, patterns and practices that we choose, we should not forget what is important: writing code that can be understood and changed to have a continuous delivery stream that produces value. How we do it is up to us but we need to take responsibility and think ahead. When you make a mistake, keep this in mind:  Blame is not for failure, it is for failing to help or ask for help. ~ Jorgen Vig Knudstorp, The CEO of the Lego Group  Testers Testers take your work and rip it apart. They look for flaws, loopholes and issues that may arise while a user is interacting with your software. This is a good thing. For 8 years I didn't have a safety net. I know that I am human and make mistakes. And I did. I believe communicating with testers is essential to understanding how something is tested and what could cause a feature to fail in this verification step. Business Business can be the entity, stakeholders, clients, customers and even our users. Understanding the financial and strategic impact the software has on business is important to me. It helps with the bigger picture. Behind the term business are people we can talk to and engage with. My final thoughts It's easy to get strung up in complicatedness that we fail to remember why we started writing code in the first place. By understanding what other people do and the decisions they make I have a better understanding of the code I need to write and the impact it has on our users. I never want to lose sight of my goal: making software for people with people and having fun while doing so. To me, this is what people oriented software is about. Side note: Sometimes it's not easy to communicate and engage throughout the SDLC due to certain organizational structures. Structures and rules that govern such environments make for unnecessary complications, clunky processes, bottlenecks, back-and-forth and disengaged employees. This is a different challenge but if you want to see Yves Morieux talk about simplifying this, check out his brilliant TED talk titled \"As work gets more complex, 6 rules to simplify.\"   Some technical resources for software craftsmanship:  Code Complete: A Practical Handbook of Software Construction, Second Edition 2nd Edition The Robert C. Martin Clean Code Collection Clean Code Collection Clean Coder - A blog by Robert C. Martin (Uncle Bob) "},{"slug":"/blog/dealing-with-change-in-teams/","title":"Dealing with change in teams","tags":["Mindset","Relationships","Productivity"],"html":" It's sad when people leave because bonds are formed but we can't stay in the same environment and position forever.  I had a bad experience. I once joined a team that had pressure from all angles. Fixed deadlines, unexpected and sometimes last minute scope changes, responsible for numerous front-end websites integrating into a highly sensitive service that we had to maintain and was audited regularly. Mistakes in the entire flow could cost production companies millions and people their jobs. The biggest problem with this team was the high staff turnover. Within a few months of joining, developers started leaving; one month after the other. When new people joined the team, they were completely new to the company which made ramp up time a nightmare. It wasn't just the developers who left. People from all roles either left or were rotated to other teams. Everyone was looking to me for answers to questions I couldn't give. I struggled to keep up with all the changes as well as ramping up. This was hell for me. I thought I caused people to leave. It turned out that the team always had a bad reputation for change but knowing that didn't help. I needed a survival guide. Social change is inevitable People come and go. Opportunities present themselves and people want to grow. This could be to upskill in a different team or company. Unfortunately many developers migrate within the first two years at a company to explore different types of domains. Learn what you can through team members and wish them the best when they move along. Don't create the perception that you are the problem. You're not responsible for everything Don't take on the responsibility of everyone who leaves. You will only stress yourself out and end up with insomnia. You could share the responsibility with the team for a short time while someone is ramping up. Know that you should push back more. Get business and line managers to figure things out together. Expectations need to be managed As people leave the team you need to start managing expectations with your line manager and the Product Owner. Offer trade-offs or alternatives. Explain in non-technical terms why you can't achieve this now. Relationships are essential If you are consuming data or features from other teams, or dependent on their rendered services then it is essential to find out who they are and what they do. Start talking to them. Building strong relationships with people help you solve problems quicker and exposes your to different parts of the business. Ask when you need help If you don't know what is cooking, put up your hand and say \"Yo! I am clueless here. Who can we talk to?\". (Maybe drop the \"Yo!\" if you want to be more professional.) Get the right people together and talk. Figure out problems together. You might not always get the right people together but it gets better the more you familiarize yourself with the people, products and business. This also makes life easier when you rotate to a different team as those relationships are already built. Communicate suggestions If you find flaws or processes that hinder productivity in your team, and you have suitable suggestions to improve, communicate it to the appropriate channels - your team, line-manager, HR or head of division. This could be as simple as how people are ramped up. My final thoughts Change in a team will happen. Hopefully never as drastic as what I experienced. It's sad when people leave because bonds are formed but we can't stay in the same environment and position forever. We want new challenges and new experiences. Dealing with too much change at any given time is exhausting. Productivity will be affected. Push back and manage expectations. Remember to breathe and don't be afraid to ask for help. Side-note That team has now been split into two. One for the front-ends and one for the service. They have a separation of concerns and have split the workload and level of responsibility. Both teams are more stable than before."},{"slug":"/blog/escaping-the-social-comfort-zone/","title":"Escaping the social comfort zone","tags":["Comfort Zone","Personal Brand","Mindset"],"html":" \"I think that we grow when we are outside our comfort zone. If it's not breaking you down, it's not building you up.\" quoted by Scott Hanselman  The comfort zone. What a wonderful place. It's so safe to be in. You're familiar with the surroundings, it has few surprises and everything just makes sense. I love it but I am never in it long enough to sit back and put my feet up with a bowl of popcorn. I keep pushing my limits both personally and professionally. At times I may strongly dislike what I am doing but after the fact I think to myself \"WOW, I just did that!\" It's very rewarding. As a developer I can relate to how awkward networking and socializing can be. This is even harder when you lack self-confidence. Here are the top three things I've done that have helped me build some social confidence. Start conversations When I experienced issues with whatever technology or process, I'd strike up a conversation with someone higher up than me. I'd ask questions and try brainstorm with them. In the beginning I was so freaked out by simply talking to them that I'd instantly blush. So hard in fact that I'd feel my face burn. I ended up being so self-conscious that I couldn't hear what they had to say. It was worse when I didn't know the person at all. Blogging and tweeting was scary for me too but it also helps start conversations. You put an idea out there and if you're lucky, people start engaging which can either validate your idea or expose you to a new mindset. By persisting through the fear, I've built some confidence and learned a lot of cool insights from others. I've also been able to engage with some influential software developers - something the old me would never have done. The more you do it, the less scary it becomes. Attend events with friends I feel more comfortable to sit back and absorb information without engaging with strangers at an event. I'm shy and self-conscious. But now, I act a bit differently. I must admit that it's easier for me to strike up a conversation with someone I don't know when I'm with someone I do know. The more the merrier. I'd go to meetups or events with my husband (also a developer) or other dev buddies and somehow feel stronger. This makes it easier for me to initiate conversations with the speaker or other developers at the event. Tip: The more you attend community events, the more familiar the people around you become. Talk to strangers Start a conversation with a stranger. Elevators and queues are the easiest place to start. Smiling makes you approachable and immediately uplifts a person's spirits (not always, but most times). Giving a true compliment is a great conversation starter and also has a positive impact on the other person. When in doubt, bring weather into the conversation. This helps build confidence when talking to people you don't know which helps when you want to start networking at events or other social gatherings. My final thoughts I don't know how many software developers are self-conscious or lack self-confidence but I know many who are socially awkward. Randomly talking to people may not be something you want to do but why not give it a try? Engaging with people exposes you to different mindsets and thought patterns. This accelerates learning especially if you're new to something or just starting out. It also helps you network and grow your professional reputation. With that comes a lot of career opportunity.  \"I think that we grow when we are outside our comfort zone. If it's not breaking you down, it's not building you up.\" ~ Scott Hanselman "},{"slug":"/blog/reignite-the-passion/","title":"Reignite the passion","tags":["Comfort Zone","Productivity","Mindset"],"html":" Do you remember how excited you were when you wrote your first program? It's easy to forget when you've been in the real-world for a long time. Sometimes we just need to reignite that passion that we once felt and spread the feeling throughout our teams.  Office politics and company drama is exhausting. We get frustrated when it feels like mountains need to be moved to make even the smallest change. Eventually people become disengaged by complicatedness and lose their passion they once felt for software development. In 2006, Rob Walling shared nine things developers want more than money. I completely agree with this ten years later:  Being set up to succeed Having excellent management Learning new things Exercising creativity and solving the right kind of problems Having a voice Being recognized for hard work Building something that matters Building software without an act of congress Having few legacy constraints  Don't get me wrong. I don't want to work for free. I just value the quality of a working environment and what I am working on more than the salary. On the other spectrum, I hear of many people who put up with bad working conditions simply because of the money. Unfortunately the reality is that there will always be some form of pain or trade-off that we need to deal with. Prove to me that there is a company to work for without any problems. Problems are different to each individual. We all have our own perspectives. That means we are surrounded by people with different states or emotions whether it be happy, comfortable, frustrated or completely disengaged. Sadly it only takes one person with a sour mindset to bring an entire team to its knees. To top it off, there are so many different ways of achieving the same thing. Everything has risk attached to it. When people become driven by fear, the need for change stagnates. It's also overwhelming when so many technologies emerge and we constantly feel like we have fallen behind. When we find ourselves in such predicaments, what can we do to avoid spiraling down the same rabbit hole? Remember the day you wrote your first applications! That excitement you felt when you got your code to run even if it was just spaghetti. Bring that feeling back to the now and read on. Here are three things I've done to help spread that feeling. Think like an entrepreneur I'm not an entrepreneur. I've been too scared to go down that path but I'd like to someday. If I were one, I would need to make the best decisions to give me the biggest return of investment in a short amount of time. I'd have the user's best interests at heart. I'd also know that the people working with me will make this a reality. I try to be cross-functional; do my best to help out where I can within my team and across teams. I'm not advocating working long hours, missing out on life and doing the work of others. Rather working together, being passionate, understanding the business side of things and having the ability to make appropriate trade-offs to deliver quality software to the market. Share the passion If we radiate a positive energy and share the passion we have for making quality software and guide - not force - others to do the same it can become contagious. Let's say someone is new to TDD and is told to write tests first. They probably won't. It's more code; more effort. There are deadlines. If someone is coached to see the benefits and understand how easy it can be, with time the mindset changes and confidence is built. In other words, people are used to doing things the way they feel comfortable with. It's never a good idea to impose new ways of doing things on people. We can gradually show how a technique can better productivity and reap more benefits. Grab opportunities to pair program with someone who is passionate and patient. If two people are just bickering about the smallest things pairing won't achieve much. Empathy to a person's background and circumstances is important. Talk to the right people Many developers are introverts. They won't always get up and speak to the right people when something is getting in their way. They will keep trying to fix it on their own. Building strong relationships is essential to solving problems quicker especially when there are dependencies that are outside of your control. I encourage people to talk to the right people. This is a great way to acquire new knowledge about the people in the company, domain, infrastructure and technologies. If they don't know how, I do it with them. This builds confidence and exposes us to other people. We get introduced to other passionate professionals that we can learn from. My final thoughts Passion is the basic building block of my career. I never want to lose it - but I did. The transition from smaller companies to larger companies was tough on me. I got so caught up in my craft that I lost my confidence and the fun of actually writing code. I was also overwhelmed by everyone's opinions which often contradicted each other. When we work at corporates we are exposed to all sorts of people from all walks of life. We aren't aware of their past experiences. People will lose their passion and find it again. I managed to pull through and reignite my passion thanks to many awesome people I work with and some highly influential developers like Iris Classon and John Sonmez. By sharing my passion, I can see how it rubs off on others. Now, open your favorite editor or IDE and go write something that kicks ass. Don't forget to share your passion and what you learn with those around you!"},{"slug":"/blog/people-do-stupid-sh-t/","title":"People do stupid sh*t","tags":["Mindset"],"html":" \"If you don‚Äôt fail it‚Äôs because you did not risk enough, and if you didn‚Äôt risk enough it‚Äôs because you didn‚Äôt put your whole self out there.\" by Carlos Barrabes  People do stupid things. It's guaranteed and there's no way to control it. That's what makes epic fail videos so popular. While we aren't failing on such epic proportions in our professional capacity, we are still surrounded by a lot of stupid things that collectively make up our days. Like it or not, everyone contributes. I keep saying that we are all human, we all make mistakes and we all have subjective perspectives. I know this. But it doesn't mean that it doesn't get frustrating. Yet I constantly find myself doing stupid things even if I don't know it at the time. Lower expectations Unfortunately I have exceptionally high expectations; a disadvantage of being a millennial or Generation Y. It makes it hard for me to deal with what I perceive to be inconsiderate behavior and bad work etiquette. It gets exhausting to try be patient and stay understanding. I need to lower my expectations. Bring it closer to reality without negatively impacting me. I don't know how to do this entirely but I know that I need to stop chasing unicorns.  Check out this cool infographic showing the data behind why Generation Y yuppies are unhappy.  Accept the reality I kept trying to find ways to completely eliminate pain in our team. Then someone told me that although pain can be minimized it can never be eliminated. This shift in mindset took boulders off my shoulders. My goal would never be reached so I need to aim lower. The reality of our existence is that there will always be stupid shit happening around us. We are married to it until death do us part. We need to accept it and find better ways to deal with it. Highlight frustrations I let frustrations build up. This in itself is stupid. All it takes is a conversation with the person in question. Often uncomfortable but such to be had. If conversation doesn't work, escalate. This is simple right? Not for me. I didn't even think about it until it was brought to my attention. Get the right people talking I was getting worked up because people weren't talking to each other. Maybe they were but they weren't all on the same page. Then someone told me if everyone talks to each other all the time, no one would be able to do any work. We need the right people to talk to the right people. Hmmm. I accept that, especially in large organizations. So who are the right people? I don't know but we can start where we have control and try branch out to find the right people to give us the answers we need.  What information does the team need in order to maintain their product and create new features? What information does the team need to make sure all aspects of their product is working (monitoring and health checks)? What would a new person need to get started in the team? What keeps impeding work from getting done?  Highlight team dysfunction Another stupid thing I find myself doing is fulfilling roles when there is a gap. I'm naturally cross-functional and can slot in anywhere: Process ‚Üí UX ‚Üí Design ‚Üí Frontend ‚Üí Backend ‚Üí DevOps ‚Üí Technical Support. I don't see anything wrong with being able to do this but a big red flag needs to be raised when it causes extra overhead which impedes my duties and causes unnecessary stress. The business needs to be aware of the underlying problems.  Do we have a shortage of professionals in the team? Do we have professionals with the right skills in the team? Are the professionals in the team actually doing their work? Are the professionals in the team being asked to do work elsewhere? Are the professionals a cultural fit for the team? Is there an underlying problem causing a spike in staff turnover?   Notice how I did not once use the term resource. Spread the word.  Find a mentor Being a human being is complicated. We are tangled with all sorts of psychological behaviors making us all different. It's interesting to see how we are shaped by our experiences as we age. But we don't have to figure out this life-business on our own. Find people who can offer you food-for-thought. This is usually someone that doesn't agree with your current mindset. Use these opportunities to extract valuable insights from conversations to help you cope better with frustrations. My final thoughts Liz Ryan wrote that \"sometimes we do things that seem really stupid at the time but that turn out to be smart moves in the long run.\" So maybe something appears stupid now but actually has great benefits later. Who knows?! As we are all part of the problem I guess we just need to find better ways of dealing with it. It's also a good idea to use it to our advantage so that we can continuously improve. Be the change we want to see even if we make a blunder of it. Hopefully it's not as costly as what happened to these companies:  If you don‚Äôt fail it‚Äôs because you did not risk enough, and if you didn‚Äôt risk enough it‚Äôs because you didn‚Äôt put your whole self out there. ~ Carlos Barrabes   A big thanks to Thane Thomson for sharing his insights with me to help me cope better with my frustrations and bring me closer to reality."},{"slug":"/blog/5-soft-skills-every-developer-should-know-about/","title":"5 Soft skills every developer should know about","tags":["Mindset"],"html":" \"We only grow when we are doing things that makes us uncomfortable.\" by John Sonmez  I have been following John Sonmez for a while now. He has personally guided and motivated me during the conception of my blog. I never really focused on my people skills until I was exposed to a lot of people when I joined a corporate in 2014. I was intrigued. Integrating with technologies and writing software for me is relatively easy but getting people to work cohesively together is more challenging. On 24 May 2016, John Sonmez gave a talk at Xamarin Evolve 2016 called \"5 Soft Skills Every Software Developer Should Know\" which I'd like to share today. He wrote that it's about mindset and overcoming your fears. I absolutely love his talk because I can relate so much to it.  We only grow when we are doing things that makes us uncomfortable. ~ John Sonmez   "},{"slug":"/blog/coping-with-fears-of-public-speaking/","title":"Coping with fears of public speaking","tags":["Comfort Zone"],"html":" Fears sabotage our success and impede improvements we can make. It's terribly difficult to overcome them but all we can do is try. Take it one step at a time.  At some time in your career, you may be asked to present or speak at an event. If you are brave enough, you may opt-in on your own. Chances are, if you are software developer, it's not something you will want to do. I know. For many years I have avoided it. It's terrifying.  I lose my entire vocabulary when I look at a crowd of people I stumble and mess up the words I remember I say nonsensical things that make me cringe afterward I lose control over my voice I forget what I am saying I freeze and panic  Just put yourself out there To hell with it. I've let so many opportunities pass me by because I was scared. At the end of April, I got a tweet asking if I'd be interested in giving an Ignite talk at Jozi-JUG‚Äîa local Java User Group. My initial response was \"hell no\" but I responded by saying I'll check it out and decided to submit a talk titled \"Branding Your Identity.\"@riggaroo@cbillowesinterested in giving a 20 slide 5 minute talk?https://t.co/TIyjkXOHH8&mdash; Dean Gerber (@dean_gerber)April 29, 2016  Giving a 5 minute talk can't be that bad, can it? *facepalm* I struggled to prepare because of the fear that had built up within me not to mention my debilitating inner perfectionist that impeded me from progressing. Don't be afraid to ask for help Closer to the deadline, I started freaking out. This is when I decided to reach out to the community (at work and on Twitter)‚Äîwhich I should've done earlier.What do you do to calm your nerves before you give a talk/presentation?&mdash; Clarice Bouwer (@cbillowes)May 31, 2016  Thanks to so many amazing people I have been given pearls of wisdom to help me deal with my fears which I'd like to share with you. Take tips from the Pros LifeHack shared some great content about public speaking tips from world-class TED presenters.  Show up to give, not take Focus on your breath to stay focused Leave the slides for the boardroom Use plain English Leverage the power of the pause Embrace the art of the unexpected Get the audience involvedThanks to Justin Reddy for sharing.   Robin Sharma, a self-help writer and leadership speaker, shares some ideas in 9 minutes to help you overcome your fears.Thanks to [Indran Naidoo](https://twitter.com/indrannaidoo) for sharing.   Ben Orenstein presented a great 48 minute talk with straightforward techniques for giving excellent presentations. This talk is very entertaining and has some interesting filler lightning talks.Thanks to [Steven McDonald](https://twitter.com/StevenMcD) for sharing thisgreat talk and for suggesting deep breathing exercises and \"hero pose.\"  Assimilate your shadow self  Own your shadow and you will own your life. ~ Aletheia Luna  I was introduced to the \"Shadow Self\" concept created by psychologist Carl Jung. Wikipedia states that \"the shadow or 'shadow aspect' may refer to (1) an unconscious aspect of the personality which the conscious ego does not identify in itself. Because one tends to reject or remain ignorant of the least desirable aspects of one's personality, the shadow is largely negative, or (2) the entirety of the unconscious, i.e., everything of which a person is not fully conscious.\" I don't know where my phobia stems from but my shadow self is filled with public speaking grief. It has so much power over me. It was suggested that instead of hiding from this grief and trying to be someone I am not, I should face it. Try to fully understand it from the perspective of another human being. This concept is new to me and I may not have given it justice here, but it has helped me by thinking \"I'm not scared, you are [shadow self], so let's do this together.\"Thanks to [Thane Thomson](https://twitter.com/thanethomson) for introducingme to this concept.  Stand on a chair Standing on a chair while practicing your speech feels awkward. This can help equip you for the awkwardness you will feel on the day of the delivery. Unfortunately I don't own chairs that I can stand on but I did take away the gist of \"embracing the awkwardness\". So I decided to leverage this. I went into a few of our delivery teams and asked if they had five minutes to listen to my talk that I will be presenting. When I got the go-ahead I didn't give my racing heart time to catch up as I dove straight into my speech. Yes, this is awkward. Asking people to listen to me just out of the blue is weird. But it's useful, builds confidence and prepares you for talking in front of some people.Thanks to [Jimi Lutz](https://twitter.com/jimilutz) for this awesomesuggestion.  Record yourself I recorded videos of myself while I practiced my speech at home. I was able to notice how my delivery changed the moment I knew I was being recorded. I'd stumble and make so many mistakes. This also tied in nicely with embracing the awkwardness.Thanks to [Malay Pandey](https://twitter.com/malaykp) for this greatsuggestion.  The audience isn't your enemy It is important to remember that the audience is not your enemy, in fact they are rooting for you. They know it is scary being up there and they are most likely going to be forgiving when you make mistakes. They don't want to see you fail.Thanks to [Seef Oosthuizen](https://twitter.com/S33F) sharing this insight.  Practice Being prepared is important and thanks to my husband and many people I work with at DStv Digital Media, I have been given the opportunity to practice my speech and get constructive criticism to help me improve. My final thoughts Fears can be paralyzing. I decided to reach out to the community for guidance. This gave me courage and strength to confront my fears without backing out. I want to a live a life where I grab opportunities that build me. I want to succeed. Tackling this fear is a big win for me, regardless of the outcome it has on Saturday.  Thanks to Olga for coaching me and to everyone at DStv Digital Media, Britehouse and DVT who listened to my dry runs and offered me so much support, constructive criticism and motivation. "},{"slug":"/blog/branding-your-identity/","title":"Branding your identity","tags":["Personal Brand","Comfort Zone"],"html":" It's important to know that having an engaging community presence is far more beneficial than experience alone.  Think how the web has evolved. There are so many technologies that it is impossible to know everything. Yet recruiting is largely based on experience, instead of the ability to learn something new quickly. Although the former is important, the latter should be taken into account especially if you consider how technologies keep changing at such a rapid rate. There's no shortage of software developers. In 2013, TechRepublic estimated there to 18.5 million software developers in the world. So if you want to stand out in this competing market, without having to know everything, then you can turn to marketing. My failure But let's face it. It's something most developers are bad at, and I know. I have tried and failed time and time again. My attempts at blogging were so bad that in 10 years I had 4 blogs‚Äîthat failed. In total I had about 20 posts.  I didn't stick to a schedule Others were already writing about what I wanted to write about Each post took long to write My topics weren't focused so my posts were sort of random I doubted myself too much  I declined opportunities to speak at events and conferences because:  I didn't feel qualified enough I didn't know what to present or talk about I didn't believe in myself I have a phobia for public speaking  As I doubted myself so much, I'd panic during interviews and tests, and If I got the job, I'd have to build my reputation from the ground up as people didn't know who I was and what I was technically capable of. My realization With time I came to realize that having an engaging community presence is far more beneficial than experience alone. The more value you add to the community, the more exposure you get. This attracts opportunities. But I was held back by fear which stemmed mainly from self doubt. This had to stop. If I wanted to make a name for myself in the community, I'd have to push past those fears. My journey So I adjusted my mindset. I started looking at marketing myself as more of a journey with small steps I could take to gradually build my reputation. I officially started my journey in 2014 by attending meetups and engaging more with the community.  I'm now more active on Twitter I'm writing an article for A List Apart I'm consistent on my blog And I presented my first talk at Jozi-JUG on 4 June 2016  Admittedly it's easier to get started if you have help. I started my blog by taking a course from John Sonmez and he personally guided and motivated me through this step. It's a free three week email course that I would encourage any software developer to take. I contributed 18 posts to my blog in the first month. That's 2 posts shy from my decade of attempts. The benefits But there is more to marketing yourself than just your reputation. This is the crux of the reasoning behind why I started doing this. You get exposure You get exposed to other developers which gives you the opportunity to learn and grow from the greatest minds all over the world. By being engaged with your local software community, people start acknowledging your skills. Eventually, you won't be starting at a company or team in your organization without a reputation. You are challenged By sharing what you learn, people offer you feedback. This keeps you challenged. Embrace the positive feedback you get and look at the negative feedback objectively. You can extract learning points from both to improve. If people offer you constructive criticism, they offer you the opportunity to improve. When you put an idea out there, your idea could be countered with a different perspective. This opens new avenues of thinking. You create living documentation By being consistent, you create living documentation. This is more powerful and engaging than a CV. It's also a great reference for later in life to see how you've grown; something I wish I had now. It's also a great personal reference for things you may have encountered in the past that you may now have forgotten. Your confidence grows Learning from the community is much faster than learning everything on your own. By continuously interacting and engaging with the community, you are bound to see your confidence levels grow. Anyone can start Remember that technologies keep changing so you don't have to be an expert to start sharing what you learn. Start writing about what you learn while you are learning it and share it with the community. If you want to see a great example on how someone started without being an expert and how living documentation was created then check out Iris Classon's blog. Platforms When you are comfortable with your chosen platform and you are ready to branch out, then try other platforms:  Create a blog Appear on a podcast / video interview Create your own videos or podcasts Write an article for your favorite website Create a tutorial Speak at an event/meetup  My final thoughts I'm not saying this is going to be easy, in fact it's a lot of hard work with many ups and downs and it can be absolutely terrifying putting yourself out there. But software development isn't just about your technical skills, so take it one step at a time.  Most of the content here formed part of my Ignite talk that I presented a Jozi-JUG on 4 June 2016. Although the slides are mainly images, you can still access them here{:target=\"_blank\"}. I've compressed the images quite a bit so quality is lacking. As I have such a phobia, I reached out to the community to figure out how I could cope with my fears of public speaking. This helped me prepare for the day of my delivery which went quite well."},{"slug":"/blog/simulating-mobile-devices-in-chrome/","title":"Simulating mobile devices in Chrome","tags":["Technical"],"html":" Discover the simulation power behind the Device Mode feature in Google Chrome.  Chrome DevTools has a feature called Device Mode since Chrome 49. This feature extends some previous features by allowing you to simulate different devices and capabilities. Possible use cases include:  Visual aid for designing a mobile-first and / or responsive web site Verify your implementation after you have implemented a design given to you by a front-end developer or agency Verify device, browser or OS specific features implemented on a web page Mimic browsing from a specific location Mimic different network conditions  Disclaimer: This tool will only simulate the display of a web page rendered by your version of the Chrome browser, so don't assume it works as expected across all devices and browsers. It can't emulate the performance characteristics of a real device. There are tools and services that can be used to achieve this but is beyond the scope of this topic. Getting started    Open the Developer Tools window. Open the Chrome menu at the top-right of your browser window, then select More tools > Developer tools.  Use a shortcut:  Windows: F12 or Ctrl + Shift + I Mac: Cmd + Opt + I      Enable the Device Mode feature. Click on the Device Mode icon at the top-left of the Developer Tools window.  You could use shortcuts, but make sure the focus is on the Developer Tools window and not the browser window for it to work.  Windows: Ctrl + Shift + M Mac: Cmd + Shift + M You can disable Device Mode by clicking on the icon or using the same shortcuts as above.     Viewport controls These controls give you the ability to test your web page across a variety of devices or directly interact with the responsive nature of it. You can change the device, width, height, zoom and orientation (if height is present). Source of image: Screenshot of viewport controls in Chrome Developer Tools Pre-configured devices You can add pre-configured devices to the list by clicking on Device dropdown > Edit.... Check the boxes of the devices you want to add to the list. Click on the device dropdown in the viewport controls to see your updated list. Source of image: Screenshot of emulated devices in Chrome Custom devices You can add your own devices by following the same steps as above but instead of checking boxes you can click on the Add custom device... button. Note: The simulator makes use of User Agent strings. These are used by web browsers and applications to identify themselves by web servers. You can get a comprehensive list from User Agent String.com. Source of image: Screenshot of adding a custom device Mozilla/5.0 (X11; Linux x86_64; rv:12.0) Gecko/20120501 Firefox/12.0 SeaMonkey/2.9.1 Lightning/1.4 Tip: Increase the height of the Developer Tools window before adding the new device. The Settings modal overlays the Developer Tools window. If you increase the height of the window, the overlay will fill it. Unfortunately once the modal is open, the window height cannot be adjusted (at least not on Windows). Media queries You can use the media query inspector by clicking on Show media queries in the vertical three dot menu at the top-right corner of the Viewport controls. Source of image: Screenshot of media queries in the Chrome Developer Tools The media queries for the web page are detected and displayed as colored bars. When you right-click on a color, you can reveal the CSS in the source code.Queries targeting a maximum widthExample: @media only screen and (max-width: 960px)Queries targeting widths within a rangeExample: @media (min-width: 768px) and (max-width:960px)Queries targeting a minimum widthExample: @media (min-width: 768px)  Tip: If you are inspecting minified CSS (or JavaScript), you will notice a curly brace icon { } at the bottom of the view pane next to the line number. Click on this to format the source code for easier reading. Connection throttling You can mimic different network related behaviors by throttling your connection speed for the tab you are inspecting on. Click on Show throttling in the vertical three dot menu at the top-right corner of the Device Mode window. Select a speed to test your page at. You will need to refresh the page to see the result. You may also want to monitor your network traffic and page load time using the Network tab in the Developer Tools window. Source of image: Screenshot of throttling in the Chrome Developer Tools For out more about optimizing performance under varying network conditions. Emulate sensors When developing on a desktop you are at a disadvantage as there isn't native support hardware for GPS and accelerometers. Chrome DevTools has a Sensors Emulation feature which allows you to override geolocation coordinates and device orientation accelerometer data. Click on the vertical three dot menu at the top-right corner of the Developer Tools window > More tools > Sensors. Source of image: Screenshot of emulating selected sensors in the Chrome Developer Tools Find out more about emulating sensors.  Resources  Chrome Keyboard and UI Shortcuts Reference Simulate Mobile Devices with Device Mode Test Responsive and Device-specific Viewports "},{"slug":"/blog/the-horror-behind-design/","title":"The horror behind design","tags":["Productivity"],"html":" Improve your craft, write the cleanest code you know how at that point in time, learn from your mistakes (and that of others) and always aim to improve.  I think looking at the plumbing behind many designs could make one stay up for weeks. Now, when I refer to designs in this case I mean anything from a house that was built down to your toaster. How many shortcuts were taken to get the job done? Technical Debt In software, we refer to the build up of bad shortcuts as \"technical debt\" - hacks or bad implementations that build over time that should be fixed in future iterations. In reality, how often do they get attended to? Looking at the software stack we can see how some decisions and changes that build over time can cause horrors behind the scenes, all the way from graphics to the entire system architecture:  Graphics. Think Photoshop. How many revisions of that file exist? How many layers are there? How many layers are actually named? Websites. Think about how many lines appear in each script or stylesheet? How well formatted is the HTML? Are there tables defining the layout? Let's not get started on the optimization of images. Applications &#x26; Services. Where is the business logic? What does the mapping or Anti-Corruption Layer look like? What does the configuration file look like? Where are the passwords stored? What does the documentation look like? System architecture. Do you know what servers and services are being used and by whom? Are they routed correctly? Can you easily detect if there is a problem with the load balancing? How do you know if one of the nodes are not responding correctly? Perhaps draw a system diagram of an enterprise system just to shock yourself. Organization. (Heck, let's throw in the business too) What does the company structure of an enterprise organization look like? Draw another diagram just to confuse yourself. How often does it change?  Behind anything that looks appealing is something dark and sinister looming and waiting to jump out at you and scream \"BOO!\" Source of image: Unknown We are in the real world where things change rapidly. Deadlines loom, people change, teams change, strategies change, organizations and companies change. So, it seriously becomes tough to keep things looking good under the hood of our applications. Worst of all, the code you wrote that looks great today will suck in the future and may possibly make someone want to pull their hair out. This someone could be future you. On the bright side, at least you know you are learning and improving but unfortunately you are actively contributing to today's problems. It's a harsh reality Let's pause. Breathe. Before you throw verbal rocks at me, or even worse, throw your craft out the window, hear me out.  I apologize for painting this depressing picture. I didn't do it to instill doom and gloom, I promise. We can't use these issues as a scapegoat. Imagine the horrors we would face if we didn't actually try our best.  Accept it I highlighted the reality because a while ago I was crippled by the concept of clean code. I became a digital neat freak and I was fighting a losing battle. I became so particular with practices, principles and the opinions of others that I didn't want to write code anymore. Now that's a terrible place to be in. When you are cognizant of code smells, then code smells stand out like NullReferenceException's. Accept that code will never be perfect. Free yourself I believe that great software developers know that their code is not great. They know that they aren't digital gods amongst mere mortals. They are aware of trade-offs and the impact of their decisions. And one day they will look back on their code and think \"what the hell was I trying to do here?\" But they try and they improve. Knowing this makes contributing to source code less daunting. Let this free yourself from any debilitating feelings you may have when it comes to writing code. Just try your best The practices, principles and opinions others have are born from mistakes that were made in the past. It's important to add this to your development toolbox and know what to use and when. Just try your best. Be kind to others When you see someone is writing code (or has written code) that could cause a potential meltdown, either to you or to the production environment, kindly let the person know why the implementation is not a good idea. Being harsh without practical validation only creates a negative environment where people choose not to collaborate. You can't change the way people think but you can positively influence them. My final thoughts We need to be less harsh on ourselves and on others. The best we can do is try to improve our craft, write the cleanest code we know how at that point in time, learn from our mistakes (and that of others) and always aim to improve. Summary  Accept that code will never be perfect. Even the best software developers make mistakes. Just try your best. Learn from your mistakes and that of others. You can't change the way people think but you can positively influence them.  Learning materials  Pluralsight Code Complete: A Practical Handbook of Software Construction, Second Edition by Steve McConnell The Clean Coder: A Code of Conduct for Professional Programmers, First Edition by Robert C. Martin Clean Code A Handbook of Agile Software Craftsmanship, First Edition by Robert C. Martin Design Patterns: Elements of Reusable Object-Oriented Software, First Edition by Erich Gamma   Mistakes and horrors  C#'s Greatest Mistakes - Jon Skeet The Daily WTF The most EVIL code you've ever seen Hardcore JavaScript or Power of 30 lines "},{"slug":"/blog/design-changes-in-html-5/","title":"Design changes in HTML5","tags":["Technical"],"html":"Elements, attributes, and attribute values are semantic according to the HTML5 Specification. These definitions allow HTML processors, such as Web browsers, screen readers or search engines, to present and use documents and applications in a wide variety of contexts that the author might not have considered. This enables a single document to be used by:  Different types of browsers (desktop vs mobile), Screen readers for the visually impaired, Indexing by search engines, Navigation by making use of document outlines, and Table of content generators.  Note: This post will not go in depth but will simply highlight some of the design changes from HTML4. Simplified Doctype The Document Type Declaration is still required due to legacy reasons but is pragmatic compared to previous iterations. It's no longer coupled to a specific version or flavor (Strict, Traditional and Frameset) of an HTML specification. &lt;!DOCTYPE html> Character encoding To target a specific character encoding for your documents to be served, you should configure the Content-Type header. However, we no longer need to provide the http-equiv and content attributes. &lt;meta charset=\"UTF-8\" /> Script references Browsers by default assume scripts are written in JavaScript so the type=&quot;text/javascript&quot; attribute can now be dropped. &lt;script src=\"script.js\">&lt;/script> CSS references We no longer need to specify type=&quot;text/css&quot; when referencing external stylesheets. &lt;link rel=\"stylesheet\" href=\"style.css\" /> MathML &#x26; SVG These elements can now be used within an HTML document without having to specify their XML namespaces. Syntax XHTML 1.0 enforces HTML to follow the same syntax as XML: all tags in lowercase, attributes quoted, elements must be properly closed. HTML5 is case-insensitive and has no rules when it comes to the style of writing markup. Content model This defines what child or descendant elements can be nested within an element. Previously there were two major categories namely \"inline\" and \"block-level\" which had different rules based on the flavor (Strict, Traditional and Frameset) of HTML. These terms also caused confusion with CSS so HTML5 no longer uses them. Instead it categorized content based on how they can be nested. Not all elements appear in these categories but those that do can overlap other categories.  Metadata content e.g. link &#x26; script Flow content e.g. span &#x26; div Sectioning content e.g. aside &#x26; section Heading content e.g. h1 - h6 Phrasing content e.g. span &#x26; img Embedded content e.g. img, iframe &#x26; svg Interactive content e.g. a, button &#x26; label  Obsolete HTML5 no longer deprecates elements or attributes as it remains backwards compatible instead they flag them as obsolete. They shouldn't be used by web developers however user agents will still have to support them.   Purely presentational basefont, big, center, font, strike, tt   Damages usability and accessibility frame, frameset, noframes   Not used often, caused confusion or its function is handled by another element acronym, applet, isindex, dir   A number of attributes have also been made obsolete. Redefined Some elements have been semantically redefined.  a element now has a transparent content model. This means you are legally allowed to nest a div element if its parent allows flow content. b element makes text stylistically bold and does not indicate importance. To indicate importance you should use strong. i element makes text stylistically italic and does not indicate emphasis. To emphasize something you should use em. cite element represents the title of creative work like a movie, documentary or book. The browser will render the citation in italics. small element is independent of its styled presentation and is now used for side-comments and small print, including copyright and legal text.  New additions These elements were introduced to enhance the structure of a document: section, article, main, aside, header, footer, nav, figure, figcaption, template Other new elements include: video, audio, track, embed, mark, progress, meter, time, ruby, rt, rp, bdi, wbr, canvas, datalist, keygen, output The input element has new values for the type attribute: tel, search, url, email, date, time, number, range, color JavaScript APIs For a long time browser implementors were making up JavaScript APIs for browsers. Now the HTML 5 specification has sections dedicated to web application APIs. Some include:  Drag and drop Full screen History IndexDB Online and Offline events Pointer Lock Web storage Web workers   References  A Book Apart: HTML5 for web designers by Jeremy Keith HTML Living Standard by the WHATWG (Web Hypertext Application Technology Working Group) HTML5 Guide from Mozilla Developer Network Differences from HTML4 10 HTML APIs worth looking into "},{"slug":"/blog/html-5-structural-semantics/","title":"HTML5 structural semantics","tags":["Technical"],"html":"In 2005 Google sampled over a billion documents. This highlighted popular class names, elements, attributes and other related metadata. The data surfaced many structural requirements related to div's with classes of nav, header, footer, sidebar etc. As HTML5 is not intended to be used to markup documents for presentation, it rather aims to add meaning to the elements within a document in order to enhance:  accessibility, search indexing, internationalization and interoperability.  Although the div is still useful to enhance the layout of a document, the newly added structural elements in HTML5 will aid the semantic structuring of your page. Note: There are many books, articles, wikis and posts relating to these elements. I wanted to document my research by combining the semantics, usage and code samples to act as a cheatsheet to personally use. Header You can use the header element to group introductory content or navigational aids. It's intended to contain headings but can also be used to wrap a section's table of contents, site navigation, a search form or any relevant logos and so on. &lt;header>&lt;h1>Alliance vs Horde&lt;/h1>&lt;p>Which side are you on? The Alliance or the Horde? Both sides have equallycaptivating stories to tell.&lt;/p> &lt;/header> MDN Reference Footer You can use the footer element in a document or many sections to contain:  copyright information, contact details, author details, navigational aid like a sitemap, back to the top of the page links, or related references.  &lt;footer>The content on the World of Warcraft Wiki is licensed under CC-BY-SA. &lt;/footer> Note: It doesn‚Äôt affect the document outline as it isn‚Äôt considered as sectioning content. MDN Reference Nav You can use the nav element in your document or many sections to contain:  site wide navigation bar containing links to other pages or sections within a page, sections that contain additional navigation aids, and footer navigation containing common terms of service, privacy policy and copyright links.  &lt;header>&lt;nav>&lt;ul>&lt;li>History&lt;/li>&lt;li>Alliance&lt;/li>&lt;li>Horde&lt;/li>&lt;/ul>&lt;/nav> &lt;/header> MDN Reference Article You can use the article element for sections of content that can be independently distributed or reused such as:  forum or blog post, article for a magazine, newspaper or online website, or content submitted by a user.  &lt;article>&lt;header>&lt;h1>For the Horde&lt;/h1>&lt;p>&lt;time pubdate datetime=\"2016-06-18T08:30:00.00\"> &lt;/time>&lt;/p>&lt;/header>&lt;p>The Horde is made up of Orcs, Forsaken, Tauren, Trolls, Blood Elves,Goblins, and most recently, Pandaren (Huojin).&lt;/p> &lt;/article> MDN Reference Section You can use the section element for generic sections of content that need to be explicitly listed in the document outline. You can then group content based on a theme or context such as:  introductions, news items, contact information, and numbered sections of a thesis.  &lt;article>&lt;section>&lt;h1>King of the Alliance&lt;/h1>&lt;p>The Supreme Allied Commander of the humans, also known as the king. Thistitle is typically given to a hereditary, male monarch of a nation, regionor state.&lt;/p>&lt;/section>&lt;section>&lt;h1>Warchief of the Horde&lt;/h1>&lt;p>Similar to the king of the humans, the Warchief is the military leader ofthe Orcish Horde.&lt;/p>&lt;/section> &lt;/article> MDN Reference Aside You can use the aside element for sections of content that is seperate from but relates to its surrounding content such as:  quotes, sidebars, related articles, advertising, or navigational aid.  &lt;article>&lt;h1>Lore&lt;/h1>&lt;p>Blizzard's background story to the Warcraft series of games.&lt;/p> &lt;/article> &lt;aside>&lt;h1>Warcraft: The Beginning&lt;/h1>&lt;p>A movie directed by Duncan Jones, produced by Legendary Pictures, anddistributed by Universal Pictures.&lt;/p> &lt;/aside> MDN Reference Compatibility Browsers that don't support the new elements will render them as a span. If you want to enforce compatibility with legacy browsers you can style these elements in CSS to be block-level elements. article, section, aside, nav, header, footer {display: block; } Unfortunately some legacy browsers don't apply styling to unknown elements. If you need to support them, you could reference the HTML5 Shiv JavaScript for display and printing of your documents. &lt;!--[if lt IE 9]>&lt;script src=\"html5shiv.js\">&lt;/script> &lt;![endif]--> My final thoughts When I tested the document outline of my blog I realized that I have been using these elements incorrectly as they provided little to no and often incorrect meaning to the structure of my documents. It's amazing what a bit of research can teach you. You can test the structure of your documents using Document Outline tools. Unfortunately I cannot vouch for the correctness of the tools provided below.  Online tester by gsnedders HTML5 Outliner Chrome Extension by Dominykas Bly≈æƒó HTML5 Outliner Firefox Extension by arky  It can be tricky to know what to use and when. HTML5 Doctor has a great flowchart to help save time when making these decisions. They provide an \"easy-to-understand HTML5 sectioning element flowchart to help you get to grips with some of the new elements in HTML5.\" Source of image: HTML5 Doctor  References  W3.org Wiki A Book Apart: HTML5 for web designers by Jeremy Keith Let's Talk about Semantics by HTML5 Doctor HTML5 Semantics by Bruce Lawson at Smashing Magazine World of Warcraft references used in examples "},{"slug":"/blog/some-new-html-5-elements/","title":"Some new HTML5 elements","tags":["Technical"],"html":"The HTML5 specification has introduced more elements to aid us with semantic markup. I've discussed some of the design changes as well as the introduction of structural elements. Note: There are many books, articles, wikis and posts relating to these elements. I wanted to document my research by combining the semantics, usage and code samples to act as a cheatsheet to personally use. I also won't be covering rich media elements here. Main You can use the main element to indicate the main content that is unique to the document or expands upon the central topic or functionality of it. You can only use it once. It shouldn't contain content that is repeated site wide such as site logos, navigational aids, sidebars, site footers or search forms (unless that is the document's main purpose). Note: It doesn't affect the document outline as it isn't considered as sectioning content. It must not be a child (or descendant) of header, nav, article, aside, or footer elements. &lt;main>&lt;h1>Warcraft: The Beginning&lt;/h1>&lt;p>The peaceful realm of Azeroth stands on the brink of war as its civilizationfaces a fearsome race of invaders: orc warriors fleeing their dying home tocolonize another.&lt;/p>&lt;p>Source snippet from &lt;cite>IMDB&lt;/cite>.&lt;/p> &lt;/main> MDN Reference Details You can use the details element in conjunction with the summary element to provide additional information to a user. Note: Not all browsers currently support this feature. &lt;details>&lt;summary>World of Warcraft has a Wiki&lt;/summary>&lt;p>Check out the community driven World of Warcraft wiki athttp://wowwiki.wikia.com/wiki/ to find out more about the Horde and theAlliance.&lt;/p> &lt;/details>Live Demo. If you can expand this then your browser supports this feature.World of Warcraft has a WikiCheck out the community driven World of Warcraft wiki atWiki to find out moreabout the Horde and the Alliance.  MDN Reference Mark You can use the mark element to highlight text that is relevant to a particular context like highlighting keywords from a search result. &lt;h1>Search Results&lt;/h1> &lt;p>You searched for \"spoilers\"&lt;/p> &lt;p>Beware of &lt;mark>spoilers&lt;/mark> when reading up on the \"Warcraft: TheBeginning\" movie. &lt;/p>Live Demo (default styling has been overridden).Beware of spoilers when reading up on the\"Warcraft: The Beginning\" movie.  MDN Reference Time You can use the time element for dates and/or times in the Gregorian calendar to present it so that people can read it and encode it so that user agents can provide additional functionality such as:  adding reminders for birthdays and scheduled events to a user's calendar, or producing smarter search results from search engines.  &lt;p>I'll be watching \"Warcraft: The Beginning\" on&lt;time datetime=\"2016-06-17T20:00\">17 June at 8h00 pm &lt;/time>. &lt;/p> MDN Reference Figure You can use the figure element to display self contained content such as diagrams, charts, photos, images, illustrations, artwork, code listings and schemas. The content can be captioned with the figcaption element but isn't required. Note: It's position must be independent of the main flow of the document. If you remove it, the flow shouldn't be affected. &lt;figure>&lt;img src=\"medivh.jpg\" alt=\"Photo of Medivh\" /> &lt;/figure> MDN Reference Figcaption You can use the figcaption element to caption or create a legend for a figure. It's optional to use and can be placed as the first or last element within the figure element. &lt;figure>&lt;img src=\"medivh.jpg\" alt=\"Photo of Medivh\" />&lt;figcaption>Photo of Medivh, the Last Guardian of Tirisfal.&lt;/figcaption> &lt;/figure> MDN Reference  References  W3.org Wiki A Book Apart: HTML5 for web designers by Jeremy Keith Some World of Warcraft references were used in examples "},{"slug":"/blog/discovering-fiddles/","title":"Discovering fiddles","tags":["Technical","Productivity"],"html":"If you are new to fiddles, it's an online code playground that let's you quickly experiment, visualize results and share code without having to start up an IDE, editor or server of some sort. They are generally free and include features such as syntax highlighting, results preview, reference dependencies, sharing, code forking and embedding demonstrations into web pages. There are fiddles available for all sorts of languages whether it be markup, scripting, styling, pre-processing, compiled, declarative, functional, you name it. Fiddles.io has a great catalog to help you discover them. Side note: Funny enough, there is also a fiddle for an esoteric programming language called Brainfuck - the name really says it all about this language. In this post I'll be sharing some use cases with you as well as some of my currently favorite fiddle editors. Usages You can use fiddles for just about anything. Some examples include:  Provide a visual &#x26; interactive answer to a question Embed a code sample that can be executed on your blog Familiarize yourself with or learn a language before you adopt it Quickly test behavior and quirks of a language Build a test case for a bug Showcase your skills Get inspiration and design patterns for your projects from other fiddles  CodePen CodePen refers to their fiddles as \"Pens\". Pens can be created for any front end web experiment you wish you create. To find out more, you can read about CodePen and its super cool editor. Source of image: Screenshot of CodePen Layout There are three input panels allowing you to enter markup, styles and scripts complimented by a result panel. To avoid context-switching and for other reasons there is a development console available. They have also catered for the keyboard-focused developer by adding some rad shortcuts. Preprocessors There is support for many popular preprocessors for HTML, CSS and JavaScript and it even lets you view the compiled source. Styling and scripting features You can normalize your base styles and automatically add vendor prefixing so that you don't have to prefix everything yourself. You can reference external libraries and stylesheets or quickly select some of the popular ones used. Code formatting Your code can get messy, especially if you are writing it quickly. Sometimes you also end up pasting code that isn't formatted correctly or doesn't follow your formatting. You can tidy up your code by using the tidy feature. You can also validate your stylesheets and scripts by linting them. Sharing Once you have a pen rockin' and rollin' you can export it as a .zip file, save it as a gist, share it on social media or embed it on your blog like this one:See the Pen Digital Clock by Maneesh (@maneeshc) on CodePen.Old school digital clock pen by Maneesh Chiba  JSFiddle JSFiddle let's you test your front end web code with their online code editor. You can follow this tutorial to learn how to get started with it. Source of image: Screenshot of JSFiddle Layout There are three input panels allowing you to enter HTML, styling and scripting complimented by a result panel. There is a sidebar that let's you create a title and description for your fiddle, reference external resources, gives you more information about AJAX requests and a link to their roadmap. Preprocessors Preprocessors are not well supported at the moment. None for markup, SCSS for styling and TypeScript, CoffeeScript and Babel for scripting. Their roadmap indicates they may possibly support these in the future. Markup, styling &#x26; scripting features You can select the flavor of HTML you wish to use in the doctype and normalize your base styles. They offer a wide range of libraries and versions that you can reference from within the JavaScript settings. Some include mootools, jQuery and prototype. You can even specify how your JavaScript should be loaded: onLoad, onDomready head or body. Code formatting You can tidy your code when it gets messy and unreadable. Sharing Your fiddle can be saved, embedded and collaborated on in real time. If you see a fiddle you like, you can fork it and play around with it without affecting the original one. StackOverflow StackOverflow has added their own code snippet flavor to their answering platform for HTML, CSS and JavaScript. Source of image: Screenshot of StackOverflow You can quickly write front end code from within the StackOverflow platform. It allows you to reference a version of jQuery, AngularJS, d3, Knockout or reference an external library. You can also tidy your code when it gets messy so that your questions and answers are easier to follow. Once you are done, you can insert the code as an interactive widget directly into your question or answer. How cool is that? SQLFiddle SQLFiddle let's you create, build and populate tables with T-SQL scripts on a variety of relational databases including MySql, Oracle, PostgreSQL, SQLite and MS SQL Server. Check this out if you want to learn more about it. Source of image: Screenshot of SQL Fiddle Schema creation You can create a schema by either entering T-SQL or by using their Text to DDL feature where you can paste or type out CSV, space separated or pipe-delimited sample data. Schema browser There is a schema browser so that you can quickly see your tables and columns in an interactive tree view. Code formatting You can format your code when it gets messy and enter full screen mode when you need more real estate to play with. Sharing Your fiddles are saved but you will have to copy the URL in order to share it.  References  Fiddles.io CodePen JSFiddle SQLFiddle 7 of the Best Code Playgrounds by Craig Buckler at Sitepoint. "},{"slug":"/blog/what-it-means-to-be-an-expert/","title":"What it means to be an expert","tags":["Mindset","Comfort Zone","Personal Brand"],"html":" Accelerate your learning by sharing what you learn with others while you are learning it.  Experts aren't people who know absolutely everything in their field of expertise. Take GPs for example, they provide educated guesses based on textbook learnings and through their real world experiences. Scientists are constantly disproving previously proved theories. We are people and we get things wrong sometimes. Regardless, if you take the time to explain what you learn to someone, you learn more about that particular topic. You start to make sense of the jumbled snippets of information in your mind by painting a bigger picture. The more you explain and share things, the more you learn and the more others can validate, correct or offer alternative perspectives or solutions to what you share.  The one exclusive sign of thorough knowledge is the power of teaching. ~ Aristotle  I gave an Ignite talk about this topic called \"Branding your Identity\" so this idea isn't new to me. But then Rebecca was kind enough to share an exceptional talk by Chiu-Ki Chan. Chiu-Ki Chan spoke at the Android Summit 2015 conference called \"How to be an Android Expert\". Her 30 minute talk can benefit any software developer as she gives you great insights about what it actually means to be an expert in the software development community. She also provides useful tips and techniques about how to easily write technical blog posts and give talks at events. The biggest take away from this talk is that \"by sharing [what you know] you gain expertise and then you get to be a part of a much larger community than you so that when you need to do something there are people behind you.\" On her blog, she states that her career has benefited tremendously from writing blog posts, speaking at conferences and sharing her code as open source. If you are interested in giving talks, you can check out her blog post about how she prepared her keynote for Write/Speak/Code. You can also follow her on Twitter at @chiuki."},{"slug":"/blog/the-ego-barrier/","title":"The ego barrier","tags":["Mindset"],"html":" Be the change you want to see even if it doesn't change anything right away.  An ego is a person's sense of self-esteem or self-importance. It can be detrimental to a person and those around them if received negatively. I'm sure you've experienced the ego and superiority complex within the software development community. It becomes a liability as it can restrict people from improving. They become blind to learning better habits, concepts, practices, and technologies through others. For years there have been constant arguments within the community regarding which languages, frameworks, tools, and operating systems are the best to use. Asking for help ends up in arguments with possible verbal abuse and belittling of skills and experience. StackOverflow is unfortunately an example of this. It's notorious for abusive commentary. It discourages people from collaborating. Proposed solutions are shot down without constructive reasoning. Often the responses are \"that's not how we've done things before\" or \"that's not what I prefer to do.\" These behaviors often nullifies the advantages of code reviews and pair/mob programming. These examples highlight some barriers that are created for communication, collaboration and improvement. As software developers we are supposed to be rational thinkers but as human beings we are often driven by emotion. On the other hand, without some sense of self-esteem or self-importance, how can we trust our own judgements and decisions?  The issue is not to break free of the ego, escaping it or transcending it. Rather it is to learn how to harness the ego and transform it to use it in a way that serves us and helps us to create a life worth living. ~ K. Ferlic in Shifting Consciousness  We can do this by finding ways to reduce the influence our ego has on us.  When the ego becomes imbalanced, all its hideous, negative aspects can act out. Therefore it is my intention to balance the ego, not to destroy it. ~ Steve Mueller  Don't sweat the small stuff If your day is filled with accumulated frustrations just keep in mind that you have the power to choose what frustrates you and what doesn't. You have complete control of your mind and body. There is no such thing as a perfect codebase or platform. Everything has issues on some level. And what difference does it make when someone interrupts you or doesn't listen to you? Accept that nothing is perfect and make improvements where you can without being blinded by your frustrations. Note that I am not advocating bad code or behavior. I'm simply implying that you don't need to build up frustrations that will one day erupt like a volcano. Choose what is important to you, action it or find an alternative. Become self aware Start observing yourself. At the end of your day, reflect on your behavior and reactions to certain situations. The better you get at this, the more you naturally start observing yourself in the moment. You can also learn a lot through observing the positive and negative behavior and reactions of others. If you feel the need to rant about something, ask yourself why you are so angry. Is there something you could have done to avoid the frustration or negative feeling you have? Is it actually worth being frustrated about? Have empathy People come from different walks of life with different personalities, backgrounds, and experiences. We are all on different parts of our journey and have our own subjective perspectives. We aren't all expressive when it comes to communicating our ideas and intentions so well that everyone understands them. Sometimes the wrong words are used to convey a message. Sometimes there are language barriers and the person may be speaking to you in a second language. Remember that nobody in your organization is stupid but mistakes will be made. Some people may feel over encumbered and are multitasking. Others may be completely disengaged due to certain circumstances that you may not be aware of. There is a reason for poorly written code whether it be tight deadlines, inexperience, bad design, misunderstood requirements or software design, bad communication and collaboration or absolute defeat. Have empathy when working with others and on codebases. Be humble Try to tame your superiority complex. If you believe that you are the best developer in the world, you are most likely mistaken. You are bound to write shitty code that is going to make someone swear at you in the future. You don't have to cling to your code. If someone suggests a useful improvement, then why not implement it? You need to come to terms with the bigger picture. Accept criticism. Ask for it to be constructive if it isn't helpful to you. If there is a reason why you don't agree with the criticism you receive, try to convey the right message across to gather more information or start a healthy conversation. Actually listen to what people have to say and value their opinions even if you don't necessarily agree. Unite teams Don't work in a silo. Share your knowledge, ideas and opinions but do it in a way that is kind and gentle. Abrasive behavior results in negativity and fear. Don't be a bad apple in your team. Negativity radiates through a team and can cause its demise. Be a leader I don't mean manage your team or those around you. I simply mean, lead by example. Share your passion and knowledge that you have with others. Coach and guide people in your team on the right path and explain why you believe it is the right path. Encourage others to share their opinions, insights and to voice their concerns. Positive behavior is an uplifting and powerful tool within a team. Persevere It's not easy. You will make mistakes. Others will make mistakes. You will get frustrated. Others will get frustrated. It's a natural order of chaos. Don't be defeated. Just keep trying and don't be too hard on yourself or those around you. My final thoughts The bottom line is: don't be a jerk. Be the change you want to see even if it doesn't change anything right away."},{"slug":"/blog/streamline-operations-communication/","title":"Streamline operations communication","tags":["Productivity"],"html":" Get the support you need to make the product and operating the product a success.  Teams cannot focus on sprint work when there are multiple communication channels filtering into the team at any given point in time. Source of image: Clarice Bouwer This form of communication can occur for many reasons:  Massive panic due to downtime or issues in production. To get information for troubleshooting or pinpointing a problem. Little to no escalation procedures or escalation procedures are not followed. Lack of understanding the overall system or product architecture. Little to no documentation of the overall system or product architecture. Go-to people within a team who can quickly assist in the event of failure.  Obviously both the team and the people outside the team, including the users, want the system to be up and stable. Depending on your product or the nature of your team and workload, operational tasks may come and go. When they are prevalent, your team needs to find ways to streamline the communication coming into the team so that you can support the product in a sustainable way. Support role Your team could introduce a rotating support role where one technical person handles all incoming requests for that sprint and filters it into the team if necessary. Source of image: Clarice Bouwer Based on the nature of the queries entering the team, an escalation process can be created and shared with the organization in order to lessen the burden on the person who is on support. Sometimes you may end up in a situation where there are only one or two technically strong people in a team which makes a support role quite stressful. Open communication channels between the product and technology team to highlight the issues you are facing as a team so that they can find ways to mitigate the unsustainable operational tasks you constantly need to tackle. Tip: If your team has a mailing list, ensure all communication is sent to the team mailing list instead of directly to one person. The people within the team can setup email rules to move all emails sent directly to the team so that it does not clutter their inbox. If anyone picks up an issue, they can resolve it if they have the capacity to do so as long as they communicate it with the rest of the team. Operations team You may be fortunate enough to have an operations team within your organization that handles the bulk of the support role for you. Here an escalation process is highly recommended so that the operations team knows when and which teams to filter queries to. Source of image: Clarice Bouwer It is important to liaise with the operations team and guide them with incorrect escalations so that they can handle them more efficiently in the future. If something changes in your system, they need to be aware of these changes if there is an impact to the users or ways the systems are monitored. A ticketing system can be introduced or utilized to raise issues and get feedback regarding the resolution of issues. Visibility to this system is essential as tickets can get lost in heaps of corporate emails. Monitoring &#x26; feedback loops No team can function optimally without appropriate monitoring in place. It is essential to have your systems monitored with quick feedback loops so that you know when something is down or failing. Some examples include:  System health checks Product and service availability and uptime Dependency integration points are working Changes you have made have not affected other features or products (automated regression test suite)  When something does go down, dependent product teams need to be notified. This applies for when things are up and running again. Reactive systems design You could look into building your systems to be more reactive meaning that they respond in a timely manner, stay responsive when dependencies fail, respond under varying loads, and are loosely coupled from its dependencies. When systems fail, your monitoring tools could notify the right people to get the systems back up and running without hindering the user experience to a large extent. My final thoughts Fighting fires is a tedious and stressful part of software development especially in larger organizations with what seem to be millions of integration points. Not many people know or understand the bigger picture. People can end up scrambling around trying to figure out what and why something broke. When too much communication enters your team, you need to find ways to streamline the communication process and find sustainable ways to proceed. The world is not on your shoulders. Speak to your team, line manager, scrum master (or Agile coach), and product owner to get the support you need to make the product and operating the product a success."},{"slug":"/blog/making-red-tape-allies/","title":"Making red-tape allies","tags":["Productivity"],"html":" Having allies that are exposed to just as much red-tape as you can give you the confidence and guidance you need.  Sometimes you have to tackle many obstacles to get something done at a corporate. Many refer to such obstacles as red-tape. This can be anything from proxy or network related constraints to unaligned environment configurations to corporate governance and change control. Whatever the red-tape is that you face, it can be really frustrating as it slows down or completely impedes progressing work into production. Luckily for you, corporates tend to have a lot of people. It is likely that they experience or have experienced the same frustrations as you. This means you have a complete internal knowledge-base that you can utilize to aid you. Build relationships with these people. This is what I mean by red-tape allies. If you are new to the corporate world or to the particular corporate organization, the red-tape and the amount of people can be overwhelming. Start by networking with your team and get them to introduce you to other people that you can learn from. If you aren't the shy type, go introduce yourself. Obviously it takes time to meet people, learn about the company, your product and how to overcome red-tape but you never have to feel stuck and alone. Network Grow your network of people that can aid you with solving red-tape. Start networking with software developers from other teams. Drop in for a quick visit to see how other teams do things or chat to them during lunch, grabbing a cup of coffee or while at the water cooler. If you have remote teams, try video conferencing or chatting to them over whatever medium it is that they may be using. Include developer leads, line managers or other managers in your network. They may or may not be directly involved with the team you are in. Leads and managers usually have the bigger picture in mind and can offer a lot of strategic insights that might aid you even more. IT and Security Engineers have a lot of insights to what is happening on the company network, with antivirus scans and the proxy servers. If you include them in your personal network, you could gain insights and assistance that could help you easily resolve issues. I've found networking with non-technical people to be advantageous. They can give ideas and food-for-thought to certain obstacles you face. They can ask you a bunch of thought-provoking questions so that they can try understand the problem which could lead you on the right path. Share ideas Start chatting to other people about things that frustrate you or impede your work. It's important to be objective so that you don't cling to your frustrations as it impedes the ability to find solutions. It's equally important that you don't come across as offensive as people will shy away from you. Listen to suggestions and opinions objectively. People will be sharing their personal experiences with you. They are not forcing you to do anything, even if it sounds that way. So remember that it doesn't mean that you have to go and change everything in your team. Simply extract useful information that you and your team can apply and keep the rest in mind. The same mindset needs to be had when you share your newfound ideas with your team. Try not to impose drastic changes that could unravel the balance your team has. Try to suggest quick experiments that could give you the most gains to see if they will work. Our company has a monthly demo day where each team demonstrates the work they have done in the last two sprints. This is an ideal platform to share how impediments were improved or resolved by discussing how the team streamlined different processes and what small experiments were introduced within the sprint. Mistakes are also a great way to learn how not to do things. Gladly share them and learn through the mistakes of others. Document Share your learnings with your team and try to document it on a central knowledge base whether it be an online Wiki, blog or Q&#x26;A platform. This can help others who face the same problems as you in the future. When others approach you with issues you have solved, gladly share your insights with them. My final thoughts Building relationships with people outside your team gives you insights to how other people and teams are tackling different problems that your team may be experiencing. Sometimes we get too close to a problem that we can't always see the solution straightaway. Having allies that are exposed to just as much red-tape as you can give you the confidence and guidance you need within your organization thus minimizing your frustrations."},{"slug":"/blog/the-rainbow-in-our-storm-sprint/","title":"The rainbow in our storm sprint","tags":["Mindset","Productivity"],"html":" Communication is essential to minimize stress and get the support a team needs to be successful.  We are seven days into our two week sprint and our burndown is flat-lining. Until today, this sprint felt like a terrible storm that would never clear up. Naturally a flat-lining burndown raises red flags and causes concern and sometimes panic. Pressure builds and hits the team from the outside like a ton of bricks. This didn't happen here. Our stress was superficial and here's why: Motivation We had two stories which heavily relied on core components seeking immediate technical attention that wasn't planned for. We found tight coupling, duplication, unused and misplaced components across different assemblies. Us two developers discussed this and decided that it needs to be addressed. As we are accountable for the product, we need to care about its quality. Also when something goes wrong, we need to know exactly when, where and how it broke and these components weren't meeting these needs. We knew it would take a bit of time to address so we motivated this change with our Product Owner and Tester. We highlighted the need to focus on the quality of the plumbing on these components and the problems it could potentially fix with troubleshooting problems users experience as we are always burned by this. Motivating technical changes with a Product Owner is a gray area as it is the professional duty of a developer to fix code rot and leave code in a better condition than it was before. I don't dispute this but if the change may impact other commitments, the Product Owner must be in the know. as they need to manage stakeholder expectations. If we blindly entered this refactor without motivating this need in business/product terms to our Product Owner, we would have jeopardized our sprint and destroyed trust. Manage expectations As the days went on we [Developers] were starting to stress a bit. This simple refactor grew into a mountain of work that required a lot of focus. No one was pushing us for status or progress updates because we made sure we highlighted our progress and struggles during stand ups and throughout the day. Many technical queries entered our team which interrupted our focus. When we communicated the situation and the need for focus, our Product Owner, Scrum Master, Dev Lead and Tester really stepped up to alleviate the pressures by tackling the issues the best they could so that we could focus. Yesterday we started showing how some bugs were resolved and how other enhancements were automatically surfacing through this refactor. We were all getting really excited but weren't out the woods yet. We could feel the technical plumbing become more solid and product could see the minor enhancements on the front end on our local environments. Our Product Owner suggested creating visibility for these changes so we created zero point stories in the sprint and increased our story points for the stories we underestimated. Confidence After many technical struggles, today we were victorious. Our blood sweat and tears entered our staging environment in a working condition and our stories started moving making our sprint look more balanced. We would never have made it this far without our additional tests that we introduced. As we branched off, we were rebasing, introducing changes, discarding changes and merging. Our test suite and new components really increased our confidence. We also made a point of writing the code in such a way that it would only impact the stories we are currently working on. In next iterations we can slowly migrate other components when we touch on that code. My final thoughts Our stress was superficial because we took it upon ourselves to improve the quality of our codebase. Even though our burndown doesn't reflect so, this is one of the best sprints I've ever been a part of. The rainbow at the end of our storm sprint was that our team really pulled together to make a flat-lining storm of a sprint victorious. Here's a summary of the factors contributing to our victory:  We took ownership and accountability of the product and codebase We worked cohesively together driven by passion towards to the success of the product We admitted to mistakes that we made and learned from them We regularly communicated our progress, risks and issues we faced We worked and thought strategically keeping the team, business, product and user's best interests at heart We got support because we asked for help We created visibility of the success that came from addressing our technical debt  The bottom line is that when people are not in the know, teams can pull in all sorts of directions. Communication is essential to minimize stress and get the support a team needs to be successful. That is why our flat-lining sprint wasn't riddled by constant interruptions and panicked people."},{"slug":"/blog/a-mindful-day-of-happiness/","title":"A mindful day of happiness","tags":["Mindset","Time Management"],"html":" Everything I did today was done with intent and slower than usual. I was mindful.  Today I had complete control of my day and my emotions because I was mindful. I walked mindfully. I spoke mindfully. I thought mindfully. I listened mindfully. I stood mindfully. I ate mindfully. This is something I have never done before.  Mindfulness is always mindful of something. When you drink your tea mindfully, it‚Äôs called mindfulness of drinking. When you walk mindfully, it‚Äôs called mindfulness of walking. And when you breathe mindfully, that is mindfulness of breathing. ~ Thich Nhat Hanh  Yesterday, I was introduced to five steps to minfulness, a great post written by Vietnamese Buddhist monk Thich Nhat Hanh. Did you know that you can create a feeling of happiness in your day regardless of where you are, how you feel, what situation you are in or what time it is? I was in desperate need of a technique to help me as most days I feel like I am not in control of my days or emotions, so I decided to give these steps a try. I actually felt present in my day. I saw, listened and experienced my day like no other day before. I experienced a great day full of happy moments.    What I achieved Because of     I worked sustainably I was focused   I was stimulated I didn't multitask   I heard what people had to say I actually listened   I felt productive I was completing tasks   I had better posture I was mindful of my body   I remembered more than usual I was consciously doing   I smiled meaningfully I was truly content    Usually I'd be wrapped up in so many thoughts that I'd end up creating a clutter around me. I'd forget where I put things down. This clutter creates anxiety and I can rarely attend to it because I hardly have enough time. When I do, I am too exhausted to care. This is physical evidence of the clutter going on in my mind. I struggle to finish tasks easily because seemingly more important ones creep up and I'd run around - mentally and physically - multitasking which results in feeling scatterbrained. As I was focused today, my mind was present. When I put something down, I put it down neatly. I didn't forget where I put it because I put it down consciously. Both was a consequence of doing things with intent. When I got to work and sat at my table, in a few minutes my table was effortlessly clean and I had attended to more than I have ever been able to do in the past. Everything I did was done with intent and slower than usual.  I learned that it takes time to make time. Rushing to get everything done only creates a mental clutter in my mind that impedes clarity and insight. Doing things with intent in a focused manner naturally breaks me out of the survival-mode I am so accustomed to and frees me from multitasking. If I can't get to everything in a day, then so be it. Practicing being mindful has aided me in approaching my day in a more sustainable way while living in the here and now. I felt like a got more out of my day (and time) because I was actually living in the moment instead of in the past or future.  This practice is very rewarding, sustainable, keeps me calm and makes me happy.  You are caught in the past or in the future. You are not there in the present moment, living your life deeply. That is forgetfulness. The opposite of forgetfulness is mindfulness. ~ Thich Nhat Hanh "},{"slug":"/blog/coping-with-unknown-outcomes/","title":"Coping with unknown outcomes","tags":["Mindset"],"html":" \"I am an old man and I have known a great many troubles, but most of them never happened.\" by Mark Twain  As software developers we have a lot of things that build unnecessary stress and anxiety in each day of our profession - just to mention a few and in no particular order:  Collaborating with different types of personalities Dealing with conflict Estimating effort Managing expectations Choosing the right technologies Working on legacy repositories Fighting fires in production  In many cases we don't know what the outcome of a situation will be. Although this applies to all aspects of life, dealing with the unknown only amplifies the stresses that build. A mentor introduced me to these three questions I could ask myself (and write down the answers to) when I find myself in a stressful situation where I can't predict the outcome:  What do I think is the worst possible realistic outcome of the situation? How will I feel about it? What will I do about it?  I've seen the value of applying these questions both in my professional and personal capacity. When I explore the absolute worst realistic outcome I can think of, I've given the situation deliberate thought and processed a way to deal with how I feel about it and how I can overcome it.  I am an old man and I have known a great many troubles, but most of them never happened. ~ Mark Twain  It's actually rare that the worst outcome will materialize so just by thinking about it I am equipped to take on whatever comes my way without getting worked up about it."},{"slug":"/blog/code-katas/","title":"Code katas","tags":["Productivity"],"html":" A fun way to practice and familiarize yourself with development tools, workflows, patterns and practices.  Wikipedia states that a code kata is an exercise in programming which helps a programmer hone their skills through practice and repetition. The term was probably first coined by Dave Thomas, co-author of the book The Pragmatic Programmer, in a bow to the Japanese concept of kata in the martial arts. As of October 2011, Dave Thomas has published 21 different katas.  \"I may drive to work every day, but I'm far from a professional driver. Similarly, programming every day may not be enough to make you a professional programmer. So what can turn someone into a professional driver or programmer? What do you do to practice?\" ~ Jeff Atwood  Benefits To me the idea is not to become better at writing actual code but rather to become more familiar with your development toolbox. If you are writing production code, and are hindered by your IDE or find yourself grabbing for the mouse to do the same thing over and over again, or are new to a concept then a Code Kata could help you optimize your workflow.  Familiarize yourself with your tools (IDE, editor, keyboard). Experiment with features you don't usually get time to experiment with. Learn a new tool or language. Practice a new or alternate work flow, idea or concept like TDD, BDD, patterns, refactoring, naming etc. Learn shortcut keys by unplugging your mouse. Practice different types of programming techniques or ways to solve the same problem. Try not to use an if statement etc. Improve and optimize your speed and efficiency without worrying about the logic behind the problem.  Getting started It's a small, simple and fun exercise that you can do each day or weekly for about 10 to 30 minutes depending on what you want to gain from it and your own personal preference.  You need to be in a space where you are not interrupted in that time. You need to be clear about what you want to strive for or achieve in your sessions. Decide how long you want your session and start a timer so that you don't go over.  Here are some resources to help you get started with Code Katas:  Code Kata - Explore 21 different code katas by Dave Thomas Codewars - Train on katas from their website. Uncle Bob's Bowling Game Kata  Alternatives  CodinGame is a challenge-based training platform for programmers where you can play with the hottest programming topics. Solve games, code AI bots, learn from your peers, have fun. Project Euler is a series of challenging mathematical/computer programming problems that will require more than just mathematical insights to solve. Although mathematics will help you arrive at elegant and efficient methods, the use of a computer and programming skills will be required to solve most problems. Codecademy is a platform that allows you to learn new languages in an interactive tutorial based interface so that you don't have to install anything while you learn.  Jeff Atwood provides some alternate approachs to Code Katas through  practice drills from Steve Yegge, general recommendations outlined in Teach Yourself Programming in Ten Years by Peter Norvig, and adds two of his one movements which including writing a blog and actively participating in a notable open source project or three.    Trade-offs The Programmers Stack Exchange community respond to a question titled Drawbacks of Code Kata. Some responses are along the lines of:  It's difficult to introduce in a work place You must actually try to improve in some sense It takes time Some people think it isn't worth the time it takes Some people find it boring You don't have a cool working product at the end  In 2014, John Sonmez wrote about his perspective as to why he doesn't do Code Katas. He makes some interesting points around achieving software development mastery although I don't think that is the goal of a Code Kata. Regardless, you may be able to extract some useful tips for mastery."},{"slug":"/blog/how-i-got-my-article-published/","title":"How I got my article published","tags":["Mindset","Comfort Zone","Personal Brand"],"html":" I am proud to announce that my article got published on A List Apart giving me the chance to share my career experiences with the community.  My article ‚Äî \"Finding Opportunities in the Mistakes We Make\" got published on A List Apart on 2 August 2016. I'd like to share the steps I took to accomplish this, a little background story, some additional tips for writing for developers and the social media activity I got from the article. Steps  Why? If you have an idea for a topic that could inspire or inspire others, then you probably have your why. You could however be putting this on your own blog. What is your why? Who do you want to write for? Find a website you really want to contribute to. This could be one of many websites you admire and constantly read or follow. Make sure your topic is closely knitted with the theme of their content. Find out how to contribute. You can read more about contributing by clicking on a \"write for us\" or \"submit your \" link usually at the top of the page. Not all websites are open for community contributions. Submit your topic. The contribution section will have more information about how you can submit your topic. It's usually supported by one or two backing paragraphs telling them how your article could help or inspire others or elaborate more on your topic. The contribution section should give you more insights into what they expect from your submission. Wait. You may need to wait for feedback. Possibly 2 to 4 weeks depending on their process and guidelines. Your response, if any. If you get the thumbs up, be prepared to work hard as quality is important on high-volume traffic sites. You may work closely with a writing editor on a collaborative tool like Google Docs depending on their process. They will give you all the information you need. I can't vouch for all websites but I'm sure a response will come. Comments after publication. Be prepared to provide feedback to comments that come in once your article has been published.  If you don't get the thumbs up, you could ask why it was declined, if they didn't specify. You could try submit your topic to another website or alternatively write about it on your own blog. When you get a new great idea, simply try the steps again. Tip: Try not to blindly send topics to websites you admire without understanding the theme of their content. This could lead to your topic being rejected. Background story I haven't been good with sharing my knowledge and experiences with the community throughout my career. I always assumed my knowledge was mediocre or commonly known. I'd tried blogging many times but felt directionless and judged myself too harshly. It was scary sharing my ideas, thoughts and code. I started reflecting on my career. One night I had this bright idea to share the mistakes I have made, something personal that could hopefully inspire or help others. I wanted to get out of my comfort zone and submit the idea to A List Apart, a website for people who make websites. It made sense as I am a web developer and the mistakes were in that line of work. I started by reading how I could write for them. I decided to send the title and a short description. The next day I had elaborated and sent the updated information. Two weeks later I got a response back from them saying that they love the topic and that we will be going forward with it. I almost fell out of my bed when I read the email. The article evolved after a few iterations while I was working closely with Rose Weisburd ‚Äî an editor at A List Apart. This was a first for me and the experience was exhilarating. I never thought it was something I could do. But I did it. And anyone can. While the iterations were nearing an end, I started thinking about creating a blog that I would consistently contribute to. This is when Corporate Programmer was born, thanks to a great blogging course from John Sonmez. By publishing at least three posts a week, I was able to bulk up my blog and enjoy writing and sharing my experiences in my own time on my own platform. When the article was published my Twitter account went wild. I didn't expect this at all. And I had a great looking blog to link to from my author bio page. The feedback I got was positive and inspiring. I never knew so many people would like it or be able to relate to it that much. Self doubt tends to do this to a person. It goes to show that we can easily overlook the importance of the information we gather during our days on earth. Something you may consider small could have a tremendous impact on someone else. I was in awe when I Googled the title and searched for it on Twitter. There were so many references that weren't linked to my account but being shared. How amazing. Is this something you would like to do? What is stopping you? Writing for developers Although my article (and blog) isn't very technical, my audience is. If you want to learn more about sharing your ideas with the software development community, WriteSpeakCode recorded a panel that shares some great tips that can help you. Check out the story, complete with the video, compiled by Chiu-Ki Chan."},{"slug":"/blog/sustainable-living/","title":"Sustainable living","tags":["Mindset","Productivity","Time Management"],"html":" The aim is simple. I wish to boost my overall sense of wellbeing by living a more fulfilling life day-to-day.  I decided it was time to consciously unpack why I feel overwhelmed:  The city feels rushed. The negative effects of traffic while people are rushing to get somewhere on time can be a terrible start to ones day. At work we may be bombarded by emails, meetings, changes in priorities, distractions, work we couldn't complete the day before, deadlines and crises that need to be dealt with. We have so much work to get done that it's counter-intuitive to take breaks. Multitask! We are overloaded by information from all over the world and it's readily accessible to us any time of the day. Being exposed to how other people advertise their lives on social media makes us question our own sense of achievement and can leave us feeling overwhelmed and sometimes even depressed. Our devices distract us through notifications, messages and calls. In software, everything keeps changing. There is so much to keep in mind, learn, troubleshoot and figure out. People look to us for answers to questions that we sometimes don't have. We have personal commitments too like going to the gym, meeting with friends, attending meetups, servicing our vehicles etc. Our weekends can easily get booked out causing anxiety as it could be considered our \"me-time\" or \"down-time\".  It's no wonder at the end of the day we are exhausted. There are only 24 hours in each day of which 8 of them we need for proper sleep. Epiphany I don't want to live each day waiting for retirement, wishing for a vacation, waiting for payday or celebrating the start of a weekend. Over the years I've had many thoughts of retreating to the outskirts of the country, getting off the grid or going to live a minimalist life on an island somewhere. Those thoughts gave my mind a false sense of peace in a reality that never materialized. I realized that I needed to find ways to deal with the overwhelming nature of my current lifestyle without escaping the city and I believe it's possible. Since I have started thinking about this, my perspective is actively collecting information to improve. The aim is simple. I wish to boost my overall sense of wellbeing by living a more fulfilling life day-to-day in an environment that is rushing around me. By doing so I believe that it will improve my:  Productivity &#x26; performance Self confidence Energy levels Time management Decision making Interactions with others Sleep  My experiment As there is so much happening I know I am not in control of everything. For that which I am in control of, I can try to take small steps toward this aim. I started by practicing mindfulness just over a month ago. I've slowed things down quite a bit. Something interesting I've noticed about me is that I can push through a great deal of work. Once the end has been reached and things slow down again, I get sick and feel exhausted. I think that's where I am now. As I'm still figuring things out I am not concerned but I would like to document the progress and things I am learning through this journey. I must say that although I am feeling exhausted, I don't feel as overwhelmed as I used to. Many of the things that overwhelmed me were side-effects of a mind running wild with thoughts and getting sucked into the rush around me. My mindset The moment I look at something as a goal my mind believes there is an end to it and then I can tackle the next best thing. Instead I think of sustainable living as a choice of lifestyle with deliberate yet minimal effort as to not overwhelm myself further. I am trying to work on my routine. Throughout the last 6 months or so, these practices have become a part of me and aid me in my new journey:  I leave for work and head home outside of peak traffic times to avoid unnecessary frustrations. I am practicing journaling where I write about my day to find out more about myself, allow myself time to reflect and process my thoughts. I am training myself to singletask instead of multitask to improve the quality of work I deliver as well as my mental wellbeing. When I am stressed, I pause, take a few deep breaths to calm myself down. I make sure to meditate each day for a minimum of 10 minutes using the Headspace or Buddify apps. I see a counselling psychologist monthly for coaching in both my career and personal life. I attend an hour of Pilates and hour of Yoga class each week for exercise, to strengthen my core, improve my posture and for better headspace. I am reading up about Behavioral Science and how it can improve my working life. I observe and converse with others to learn more about life and how others are coping. I try not to look at my phone all the time. When I am walking, I don't read or reply to messages. I try to allocate a few seconds every now and then to attend to messages. I've also found comfort in muting certain notifications that never need immediate attention. When I find myself rushing, I slow down and walk at a normal pace. Surprisingly I am always on time.  My final thoughts It's not easy. I find many challenges and I don't always get it right. I am not getting enough sleep and I am feeling a bit ill but I don't belittle myself. I just keep trying and it's working. I am seeing signs of improvement. I am more approachable and I am getting more done than before. My days feel more meaningful and already this is more sustainable than my drifting \"what the hell did I do today?\" type of days. Admittedly my blog took a bit of strain as I decided some downtime was required but so be it. I am eager to know your thoughts and perspective on this topic. Please feel free to share with me. Happy living! Resources  Headspace is a gym membership for the mind. A course of guided meditation, delivered via an app or online. You can try their starter course of 10 meditations for free. The other meditations require a subscription. Buddify has over 80 guided meditations custom-made for wherever you are and whatever you‚Äôre doing ‚Äì traveling, at work, at home, going to sleep and much more. All for the price of a cup of coffee and with no hidden extra charges. Reading How to Have a Good Day by Caroline Webb. You can get it from Amazon, Google Play, iBooks, Takealot.com, anywhere else online or your favorite book store. "},{"slug":"/blog/deliberate-downtime/","title":"Deliberate downtime","tags":["Mindset","Productivity"],"html":" \"Do you really squeeze more productivity out of yourself by powering through your weariness?\", Caroline Webb  To make good decisions you need your mind to be fresh. If you keep grinding through tasks, your brain gets tired and can go on auto-pilot. This can impact your focus, productivity, decision making and mood.  Do you really squeeze more productivity out of yourself by powering through your weariness? ~ Caroline Webb  Ferris Jabr wrote \"research on naps, meditation, nature walks and the habits of exceptional artists and athletes reveals how mental breaks increase productivity, replenish attention, solidify memories and encourage creativity.\" We can't always achieve these things in our daily working hours however there are a some things we can do to take deliberate downtime for mental replenishment. Sabbaticals I had the opportunity to work with an amazing woman who took a year sabbatical to South America after finishing a string of large projects. She needed the break. This is a great way to recharge your mind and body as well as change your perspective on life. Unfortunately we don't all have this luxury in our lifetimes. If you are changing your job and have enough money to take some time off in between jobs then you can mentally prepare yourself for your next challenge. Even if it's as short as a week or two. Vacations If you are on a payroll, then you get offered a certain amount of leave each year. Make sure to take it. It's important. Earlier this month, my husband and I went to Mauritius for 7 days for a wedding. It was my first island experience and I have been wanting to go there for years. This was a great opportunity for me to switch off from the world and relax. In my experience software developers are on standby almost all the time. This makes taking leave and actually relaxing somewhat troublesome. I didn't want to feel anxious throughout my vacation so this is the advice I can give you:  Make your leave visible in advance We have a leave calendar on our wall so that everyone in the team can see when leave has been taken to aid with planning work for the upcoming sprint. Tie up lose ends before leaving Go on leave knowing that you have done your best to tie up lose ends. If you have a task in progress, make sure that it is either finished or someone else knows how to continue the task without you. If you don't, you will worry about it the whole time you are away.  Create an automated Out Of Office reply As simple as it sounds, it's very easy to forget. People who email you need to know that you are out of the office. Direct them to other people they can get in touch with while you are away. Mention when you are back in the office so that they are aware and can make decisions around that information.  Cancel your meetings Make sure that you cancel your meetings before going on leave. Not everyone will know that you are away.  Switch off all notifications I made sure my phone didn't spam me with all sorts of notifications and emails while I was on my trip. My phone was on silent most of the time. I didn't enable roaming. I allowed myself a few moments on some days to check Whatsapp for any dire cases but only one occurred and the team was on it.  Remember, the world goes on without you When something breaks and you form part of a team where you are not a key person dependency, you can reward yourself with deserved downtime. Relax There were all sorts of activities I could do to fill up my days. I didn't want to come back tired and exhausted so I made sure to commit to only a few activities and enjoy every moment of my stay‚Äîbusy or not. I came back happy, relaxed and calmer.  Weekend getaways Smaller getaways can be taken throughout the year that don't necessarily require any leave.  Inspect your calendar for long weekends throughout the year. Make a note of these breaks well in advance. Try to schedule a camping trip, road trip, hiking, B&#x26;B or some other getaway if your finances allow for it. If you can't afford something, try to do something you don't ordinarily do just for a different experience. Try not to feel busy. This could overload your mind and make you feel like you are not getting any rest.  Evenings When you get home, make some time for yourself. Spend some time with your friends and family. Read a book. Do something different. Put your passion aside for a bit and make some time for your life. Schedule some time throughout the week to upskilling, blogging or working on a passion project but don't let it consume you. As clich√© as it sounds, you really only have one life. Find your balance so that you don't burn out. Breaks Taking breaks in your working day is more sustainable as they cost you nothing but a little bit of time. If you are stuck on a problem or have just completed a task, be sure to take a break. Even if it's just 5 to 10 minutes. Caroline Webb suggests that one should take a break after every 90 minutes of work. The break should be away from your desk and should allow your mind some time to replenish. What you do in your break is up to you but here are some suggestions:  Breathe Especially if you are feeling agitated. Take a few deep breaths to calm down and settle your mind.  Go for a walk Go outside to get some fresh air. Walking offers a form of exercise and going outside offers a nice change of scenery depending on where you work. If outside doesn't work for you (pollution / not safe / cold) then just walk somewhere else in the building. Take stairs. Go for coffee. Just do something else away from your desk that doesn't offer a negative side-effect.  Write/Draw something If you are struggling with something, go sit somewhere away from your desk. Map out what you are doing on paper. Visualizing the problem could illustrate possible solutions that you couldn't see before. Talk to someone Walk to someone and talk to them about the problem you are working on. Listen to what is said objectively. Suggestions don't need to be implemented but they may contain insights that you may not have thought of before in your mentally clouded state. Reflect Give yourself time to reflect after completing a task. Knowing what you know now, what would you do differently in the future? Lunch Try not to eat lunch at your desk. Take time to eat lunch with your colleagues and find yourself talking about interesting conversations.  A break should not be to waste time or escape something critical but rather to boost your mind and productivity. Experiment until you find the thing that boosts yours. My final thoughts Downtime is essential. Relaxation is important. Burn out is real. If we allow all the superficial stress that can build up in our professional lives to build up, then we will indeed experience it. Whether it is as simple as a break or a little long term as a vacation or sabbatical, find ways to keep replenishing your mind.  References  Reading How to Have a Good Day by Caroline Webb. You can get it from Amazon, Google Play, iBooks, Takealot.com, anywhere else online or your favorite book store. Why Your Brain Needs Downtime by Ferris Jabr. We stayed at Zilwa Attitude Resort in Mauritius. "},{"slug":"/blog/contributing-to-the-readme/","title":"Contributing to the README","tags":["Communication","Relationships","Technical"],"html":" When someone new works on your repository, make sure it is easy to get setup.  Imagine if we didn't have any documentation; if we all adopted the mindset of \"I already know this, let others figure it out on their own.\" No more books. No more Wikipedia. No more READMEs. No more StackOverflow. No more API references and tutorials.Don&#39;t take what you know for granted. Someone else may not know whatyou know.&mdash; Clarice Bouwer (@cbillowes)September 22, 2016  Documentation is a very broad term and has a bad stigma to it. As it can apply to anything from the enterprise to the application‚Äîwhat is written today can be stale or incorrect tomorrow. The code repository is something you have control over. It contains the application which translates the business needs to code. Your repository is meaningless if someone else needs to work on it and can't even get setup. Use your README to help other software developers and assume they know nothing about the project. Here's what I think could help contribute to a great README file: Overview Introduction  A brief introduction to the repository summed up in one or two explanatory sentences. If it's a component of a bigger project, mention it and reference the other components. If the project has a vision add it.  Architecture Is there a simplified architectural diagram that can quickly highlight the overall architecture at a glimpse? This changes over time so extensive documentation is probably not an option unless it can be automated or there is a role where someone needs to keep it updated. Dependencies Your project is probably referencing some dependencies. In .NET all Nuget packages and their dependencies sit in the root of the same folder. This makes it difficult to differentiate what was explicitly referenced and why. If future developers are unfamiliar with the packages, the chances of cleaning unnecessary packages up later is slim to none. List the dependencies that you have explicitly referenced and mention why. Environments  What environments exists for this application? How can these environments be accessed? What is the purpose of each environment and how does it tie into the build pipeline? What are the different integration points so that I know where things can fail? Do I need to know anything specific about each environment?  Commit guidelines If you have a standard for commit messages then state how commits should be written for new features, bug fixes, improvements and refactoring in this repository. What other information needs to be present in the message; a link to the ticket number or the reasoning behind a change? Getting setup  What tools do you suggest I use while I'm getting familiar with the code? What software (and versions) do I need to install to get it to work? Do I need to be on a specific network? Do I need host entries for the application to run properly? Is there something I should know about the proxy? Is any of this automated in a VM or container script that I can use, and how? How do I run the application? What dependency modules or services need to be up before I can run it properly?  Testing  What testing and mocking frameworks are being used? Do I need a specific test runner to run the tests? What type of tests exist in the application? Where do I locate them (if it's not in a standard place)? What is the strategy for running longer running tests in the CI? How is the UI tested and where are those tests?  Deployment pipeline  Where can I access the deployment pipeline? What is the process? Do I need to know anything specific about it? Who can deploy to production? (Automated / Manual / Restricted access?) How is production deployed to? What must be done before it can deployed to? (Governance requirements etc) Is there something that must happen after deploying to production?  Knowledgebase All the knowledge you accumulate during your journey with this repository is lost (only available in your mind) when you leave. What other knowledge can you share to help future developers on the project to avoid the same mistakes being made in the future.  Are there any caveats to know about? Do you have a history of issues that you faced with solutions to those problems? How does one troubleshoot? Are there support tools or applications I need to know about? What is the escalation procedure for common problems? Is there a ticketing system?  My final thoughts The next time you think that documenting something will take too much time, think how you would feel if you were in the next person's shoes. Too scared to make changes, anxious about deploying and downright frightened to even look at the code. Make the world a better place. Contribute to the README and write about what you learn so that others can benefit and start innovating instead of struggling too much. Note: This may appear verbose but could be broken down into separate pages or linked out to other references. It doesn't have to be extensive but it must be good enough to get someone up and running especially if the person is new to the company or your team. If your documentation does become extensive it could highlight problems within your solution that could be reflected on for improvements.  References  A curated list of awesome README How to write a good README from StackOverflow The Importance of Git History, writing useful messages  "},{"slug":"/blog/byte-order-mark/","title":"Byte order mark","tags":["Technical"],"html":" The byte order mark or BOM is an invisible Unicode magic number that can be found at the beginning of a text stream.  We recently changed static HTML on a web page and all Unicode characters displayed incorrectly. This was caused by the missing byte order mark in the UTF-8 file which Windows actually requires. This post was inspired by my curiosity and investigation of the byte order mark but further grew as it touched on UTF, endianness and the usage of the byte order mark in UTF-8. Unicode If you are new to Unicode then I suggest you read up on it before continuing. You can start by reading Joel Spolsky's article from 2003. In this post I make references to Unicode code points. They are simply the numerical positions of Unicode characters in the code space of 1,114,112 characters.  For Unicode, the particular sequence of bits is called a code unit ‚Äì for the UCS-4 encoding, any code point is encoded as 4-byte (octet) binary numbers, while in the UTF-8 encoding, different code points are encoded as sequences from one to four bytes long, forming a self-synchronizing code. ~ Wikipedia  UTF UTF stands for Unicode Transformation Format. This encoding maps Unicode code points (from U+0000 to U+10FFFF) to one or more code units or word depending on the encoding form (eg. UTF-8, UTF-16 and UTF-32) used. Conversions between encoding forms are algorithmic making it fast and lossless. The table below shows the different encoding forms with some of their properties.    Name UTF-8 UTF-16 UTF-32     Code unit or word size 8-bit 16-bit 32-bit   Fewest bytes used per character 1 byte 2 bytes 4 bytes   Most bytes used per character 4 bytes 4 bytes 4 bytes   Byte width for a code unit Variable Variable Fixed    Essentially a single character represented as a sequence of &lt;fewest bytes&gt; to &lt;most bytes&gt; &lt;code unit size&gt;-bit code units or word, depending on the encoding form:  UTF-8 is variable as it can have a sequence of one to four 8-bit bytes per character UTF-16 is variable as it can have a sequence of one or two 16-bit code units per character UTF-32 is fixed as it has a single 32-bit code unit per character  As UTF-32 is fixed length, it can get rather bloated and use up unnecessary memory and storage space for strings of characters. Therefore it's main usage is in internal APIs where the data is single code points or glyphs. Let's look at an example using the Pilcrow sign (¬∂). It's Unicode code point is U+00B6.  In UTF-8 it converts to C2 B6 which is a two 8-bit sequence of [1100 0010] [1011 0110]. In UTF-16 it converts to 00 B6 which is a one 16-bit sequence of [0000 0000 1011 0110]. In UTF-32 it converts to 00 00 00 B6 which is a one 32-bit sequence of [1011 0110 0000 0000 0000 0000 0000 0000]  Endianness This is just a fancy way of saying how the bytes must be ordered during the read and the write of the stream. This order is categorized by big-endian and little-endian. Bytes can be processed from left to right (big-endian: most significant byte first) or from right to left (little-endian: least significant byte first).  Source of image: Clarice Bouwer As the word size for UTF-8 streams is 8-bits, one byte is read or written at a time. This means the encoding form is byte-oriented so there is no byte order problem for UTF-8. With UTF-16 and UTF-32 they have word sizes of 2 (16-bits) and 4 (32-bits) bytes respectively making the byte order matter when it comes to certain hardware, protocols or programs. The byte order is indicated with the byte order mark or in short, the BOM. This table shows UTF-16 and UTF-32 with their big-endian (BE) and little-endian (LE) equivalents. If a stream is not saved with the BOM then it will default to big-endian.    Encoding Little-Endian Big-Endian     UTF-16 - Default   UTF-16LE \\&#x3C;BOM> -   UTF-16BE - \\&#x3C;BOM>   UTF-32 - Default   UTF-32LE \\&#x3C;BOM> -   UTF-32BE - \\&#x3C;BOM>    Byte order mark (BOM) It is an invisible Unicode magic number found at the beginning of a data stream indicating the encoding and endianness. This table shows encoding forms with their BOM byte sequence and byte order.    Encoding Endianness BOM bytes     UTF-8 N/A EF BB BF   UTF-16 Big-endian FE FF   UTF-16 Little-endian FF FE   UTF-32 Big-endian 00 00 FE FF   UTF-32 Little-endian FF FE 00 00    Let's say we have a text stream of the following characters: ¬∂@¬´¬Æ. The Unicode code points for each are U+00B6, U+0040, U+00AB and U+00AE.  Source of image: Clarice Bouwer When the UTF-16 streams are opened, the BOM defines the order the bytes must be read in and are read two bytes (16-bits) at a time. The way the bytes are mapped back to the Unicode code points are based on the endianness. When the UTF-8 stream is opened, the BOM has no impact on the byte order as the bytes are read one at a time. Looking at the Heavy Black Heart (‚ù§) character at code point U+2764:  In UTF-8 it converts to E2 9D A4 which is a three 8-bit sequence of [1110 0010] [1001 1101] [1010 0100]. In UTF-16BE it converts to 27 64 which is a one 16-bit sequence of [0010 0111 0110 0100]. In UTF-16LE it converts to 64 27 which is a one 16-bit sequence of [0110 0100 0010 0111]. In UTF-32BE it converts to 00 00 27 64 which is a one 32-bit sequence of [0000 0000 0000 0000 0010 0111 0110 0100]. In UTF-32LE it converts to 64 27 00 00 which is a one 32-bit sequence of [0110 0100 0010 0111 0000 0000 0000 0000].  UTF-8 When the BOM exists it acts as an encoding signature only. In this case it is referred to as the UTF-8 signature. Although it is optional and doesn't signify the byte order, some applications require its presence. I learned the hard way with Microsoft Windows and some of its applications.  Microsoft compilers and interpreters, and many pieces of software on Microsoft Windows such as Notepad treat the BOM as a required magic number rather than use heuristics. These tools add a BOM when saving text as UTF-8, and cannot interpret UTF-8 unless the BOM is present, or the file contains only ASCII bytes. ~ Wikipedia  There are also instances where the BOM must not exist. This can include files that need to start with specific characters like the human readable shebang magic number (#!) in Unix shell scripts. It's also nice to know that ASCII is a subset of Unicode. It is a 7-bit encoding but 1 bit goes unused and is always saved as 1 byte. This makes UTF-8 backwards compatible with ASCII assuming the file doesn't use characters outside of the ASCII range. If the BOM exists but cannot be interpreted correctly the file will start with √Ø¬ª¬ø. An example is viewing the BOM file with the Latin 1 (ISO 8859-1) character encoding. BOM guidelines If you are working directly with a stream or are uncertain of which encoding to use, Unicode.org has the following guidelines for dealing with the BOM:  A particular protocol (e.g. Microsoft conventions for .txt files) may require use of the BOM on certain Unicode data streams, such as files. When you need to conform to such a protocol, use a BOM.  Some protocols allow optional BOMs in the case of untagged text. In those cases,  Where a text data stream is known to be plain text, but of unknown encoding, BOM can be used as a signature. If there is no BOM, the encoding could be anything. Where a text data stream is known to be plain Unicode text (but not which endian), then BOM can be used as a signature. If there is no BOM, the text should be interpreted as big-endian.   Some byte oriented protocols expect ASCII characters at the beginning of a file. If UTF-8 is used with these protocols, use of the BOM as encoding form signature should be avoided. Where the precise type of the data stream is known (e.g. Unicode big-endian or Unicode little-endian), the BOM should not be used. In particular, whenever a data stream is declared to be UTF-16BE, UTF-16LE, UTF-32BE or UTF-32LE a BOM must not be used.  This excerpt can be found under the question \"How I should deal with BOMs?\" My final thoughts The BOM is usually handled in the background by the systems you are working on. As it is invisible it generally goes unnoticed. If you start to experience some funny visuals, you are most likely experiencing an encoding problem that can easily be fixed. Using a Hex Editor you can identify the invisible bytes in a file.  References  Root cause analysis inspiring this post What is Unicode? - Unicode.org Introduction to Unicode - Joel on Software Unicode code point - Wikipedia.org Unicode character table - Unicode-table.com Endianness - Wikipedia.org Byte order mark - Wikipedia.org FAQs (UTF-8, UTF-16, UTF-32 &#x26; BOM) - Unicode.org The byte order mark in HTML - W3.org Using byte order marks - MSDN UTF-8 - Utf-8.com The Turkey Test - moserware.com  Copyright ¬© 2016 W3C¬Æ (MIT, ERCIM, Keio, Beihang). This document includes material copied from or derived from The byte-order mark (BOM) in HTML.\" The BOM image in this post adapted from their endianness image."},{"slug":"/blog/the-imposter-within/","title":"The imposter within","tags":["Mindset","Comfort Zone"],"html":" ‚ÄúDid I do anything wrong today,‚Äù he said, ‚Äúor has the world always been like this and I've been too wrapped up in myself to notice?‚Äù ‚Äï Douglas Adams, The Hitchhiker's Guide to the Galaxy  Just over a month ago I:  started doubting myself; felt like I wasn't adding value or achieving much; felt uncertain of my skills, the work I was doing and my career; was comparing myself to others which made me feel inadequate; found it difficult to concentrate and focus; and felt like a hypocrite.  This fraudulent feeling led me to neglecting simple things like contributing to my blog. Sadly, this is not the first time this has happened to me. My inner imposter was once again \"shining\" and I was left feeling inadequate.  He felt that his whole life was some kind of dream and he sometimes wondered whose it was and whether they were enjoying it. ‚Äï Douglas Adams, The Hitchhiker's Guide to the Galaxy  Imposter syndrome 1 is getting a lot of attention within our community probably because research 2 has estimated that 70% of the general population has felt imposter tendencies in some part of their career. It's not a disease. It is a misshapen reality concocted by self-limiting beliefs and feelings of inadequacy. This reality remains solid even when information is presented that disproves it. The mind clings to the emotion rather than the fact. In my research on this topic, a common underlying message stands out: nobody really knows what they're doing all the time. So the best anyone can really do is to just try, fail, learn from it and try again. Logically I know this. Yet here I sit in my trough period trying to get out once again. So instead of being hard on myself I am just accepting that right now it may seem bad, but this too shall pass. To help me progress, I can try to understand the compounding feelings that contribute to this state of mind. By dissecting each one I may be able to make small adjustments to help me progress out of this: Self-doubt  I'd far rather be happy than right any day. ‚Äï Douglas Adams, The Hitchhiker's Guide to the Galaxy  I've been a software developer for a long time now. In my mind, I don't live up to my own expectations (which I have learned are exceptionally high for some reason). There is still so much I don't know, so much that I am uncertain of. How can you persuade someone to understand something if you have little confidence in your own understanding? Doubt destroys confidence. Self-doubt destroys confidence in yourself. Logically I know it's impossible to be certain of everything yet doubt looms over me like a towering monster in the dark. I know that we simply have to figure things out as we go, remembering that it's okay to be wrong provided we learn from it. Some days are just better than others for me. There are many techniques 3 to aid those suffering with self-doubt such as:  Remember past successes and know that you had a role contributing to it. Talk to your peers about it. Chances are they are feeling the same. Keep a journal. Write down the good and bad and try to find a pattern. Don't beat yourself up. Don't compare yourself to others. It's unfair on yourself as you may have different focus areas. Land an interview even if you're happy with your job. It can be a great reminder that you're skilled and valuable. Everyone struggles of something. Accept this, then punch fear in the face.  Uncertainty  That's what I mean about A-Z plans, you see. I had no idea that things were going to turn out like this, so there was no way I could have planned things out. You just have to cope with what's happening, and deal with the next bit when it comes. ‚Äï Michael Marshall Smith, Only Forward  Uncertainty (depending on the context) can sometimes make me very anxious. At work, I don't like hearing myself say \"I don't know\". Yet this happens regularly. I don't know how long something is going to take to work on, the impact it may have on the system or on the user, the complexity that may creep in, the right people to talk to. I don't know because I don't have all the facts. What I can do is figure it out as I go. The beauty of our industry (and life in general) is that there is still so much we don't really know. No one knows everything no matter how fanatic people can be in certain areas. There is no right way of doing something. There is always a better way. So we figure things out. We put different pieces of the puzzle together. We troubleshoot and fix things that are broken. We learn. We create. Some techniques 4 we can use in the face of uncertainty include:  Know that certainty is an illusion. Things can change in a heartbeat. Focus on what you can control. Get confident about your coping and adapting skills. Prepare for different possibilities. Accept constant imperfection. Don't get attached to everything. When it changes you tend to suffer. Reconnect with the constants in your life. Practice mindfulness.  Ask yourself these three questions:  What do I think is the worst possible realistic outcome of the situation? How will I feel about it? What will I do about it?     We are water. We evaporate, we freeze, we fall, we cool, we crash in waves, we ebb and flow, we soothe, swim and foam. A part of us looks the same to a mind that wants to condense and categorize, but in the end, we are constantly recreated anew. ‚Äï Disqus user drb74  Comparing yourself to others  The reason why we struggle with insecurity is because we compare our behind the scenes with everyone else's highlight reel. ‚Äï Steven Furtick  We can't see the full picture of everyone around us. We don't know the troubles they face, what makes them really tick, what fears and weaknesses they battle out each day and what circumstantial history they have. Instead get better at knowing yourself. You have the full picture of someone truly amazing right in front of you, no matter how flawed you think you are. My final thoughts  Would it save you a lot of time if I just gave up and went mad now? ‚Äï Douglas Adams, The Hitchhiker's Guide to the Galaxy  I started this post on Monday but I couldn't finish it. It's been a real struggle trying to write about something that I keep telling myself no one will really care about. This time I got hit hard by imposter syndrome. There is a lot of talk about it in the community to raise awareness for this struggle that plagues most of us. It's just a state of mind that can be controlled. When I started this post, I reached out on Twitter for some peer guidance and the responses made me feel good. Let's give them a shout out based on my question \"Anyone suffering from imposter syndrome lately? I'm writing a post. If you have any advice you wish to share let me know.\"  Far too often. I‚Äôm getting better at overcoming it, though. I wrote a post on the topic recently. ‚Äï Pavneet Singh Saund Imposter syndrome isn't just for \"actual\" experts. It's for everyone in-between who has their own little area of expertise ‚Äï James Mallison All the time ‚Äï Joshua Lewis I think most of us suffer from it ‚Äï Christoff Truter Yup, and also found out what a negative impact it has on the rest of my team. Working on keeping it suppressed, as it should be. ‚Äï Johan Meiring Go land an interview, even if you're happy with your job. It can be a great reminder that you're skilled &#x26; valuable ‚Äï Chris McClellan   References   About Imposter Syndrome (Navigate back)  Imposter Syndrome Wikipedia The Impostor Syndrome GOTO 2016 presentation, Gitte Klitgaard Imposter Syndrome: Overcoming Self-Doubt in Success PrairieCode() 2016 presentation, Heather Downing 21 Proven Ways To Overcome Impostor Syndrome StartupBros, Kyle Eschenroeder (2016) High-achievers suffering from 'Imposter Syndrome' News.com.au (2013)   Research (Navigate back) Clark, M.; Vardeman, K.; Barba, S. (2014). \"Perceived inadequacy: A study of the impostor phenomenon among college and research librarians\". College &#x26; Research Libraries. 75 (3): 255‚Äì271. DOI: 10.5860/crl12-423  Techniques to deal with self-doubt (Navigate back)  10 Powerful Ways to Overcome Self-Doubt So You Can Move Forward in Life The Positivity Blog, Henrik Edberg Tweet Twitter, Chris McClellan (2016) Cited \"Land an interview even if you're happy with your job. It can be a great reminder that you're skilled and valuable.\" Embrace your inner Imposter Coding with Empathy, Pavneet Singh Saund (2016) Cited \"Everyone struggles of something. Accept this, then punch fear in the face.\"    Techniques to deal with uncertainty (Navigate back)  Coping with Unknown Outcomes Corporate Programmer, Clarice Bouwer (2016) 5 Ways to Let Go and Embrace an Uncertain Future Tiny Buddah, Lori Deschene (2009) 7 Ways to Deal with Uncertainty So You Can Be Happier and Less Anxious Tiny Buddah, Lori Deschene (2010) Comment on 5 Ways to Let Go and Embrace an Uncertain Future Disqus user drb74 Cited \"We are water. We evaporate, we freeze, we fall, we cool, we crash in waves, we ebb and flow, we soothe, swim and foam. A part of us looks the same to a mind that wants to condense and categorize, but in the end, we are constantly recreated anew.\" (2009)   "},{"slug":"/blog/rubyfuza-2017-conference/","title":"Rubyfuza 2017 Conference","tags":["Mindset","Comfort Zone","Relationships"],"html":" I spoke at Rubyfuza 2017 in Cape Town about how Imposter Syndrome impacts my day-to-day decisions and confidence, affects growth by limiting opportunities and makes me feel unworthy. I wanted to share my experience &#x26; perspective of feeling like a fraud with other software professionals.  This was my first conference presentation* in front of a large audience in a half an hour timeslot. The talk was titled \"The Imposter Within\" which stems from the post I wrote last year. It was recorded and I'll share the link when it is available on YouTube. I have made the slides in PDF available for download. The content below is what I prepared but is not verbatim. *I have given an Ignite talk (5 minute talk) at JoziJug in 2016  [Displayed a slide of a photo of me looking happy] Look how happy I look here - a little crazy, but happy. Appearances can be so deceiving ‚Äãbecause deep down, ‚ÄãI really feel like a fraud.‚Äã Last year I finally identified that I have Imposter Syndrome ‚Äãand it's possible that some of you here may‚Äã occasionally have it too.‚Äã In fact, research says that about 70% of the population worldwide experience this and‚Äã it often goes unrecognized.‚Äã I think that the more we talk about it,‚Äã the more we can help each other out.‚Äã Definition Wiki Says The term was coined in 1978 by two clinical psychologists and is also referred to as \"The Imposter Phenomenon\" and \"Fraud Syndrome\".‚Äã Wikipedia says that it doesn't have a standard definition,‚Äã but explains that it as a 'concept describing‚Äã high-achieving individuals ‚Äãwho are marked by an‚Äã inability to internalize their accomplishments ‚Äãand have a‚Äã persistent fear of being exposed as a \"fraud.\"' Now, it is not a mental illness,‚Äã it's just the way that people react in certain situations.‚Äã Essentially, you feel like you are tricking everyone around you‚Äã into believing that you are more competent than you actually are‚Äã and really hope that no-one ever finds out.‚Äã Even With Evidence Compliments and positive feedback‚Äã probably make you feel uncomfortable.‚Äã You simply don't believe them.‚Äã Even when there is evidence to the contrary, ‚Äãyou tell yourself, and others, that you ‚Äãprobably succeeded because of:‚Äã  Dumb luck,‚Äã Your charm,‚Äã A mistake or error, Good timing, Knowing the right people or,‚Äã Being in the right place at the right time.‚Äã  Signs Identify Your Imposter When you feel like this, ‚Äãyou could react negatively‚Äã without realizing it.‚Äã Identify and understand your inner imposter‚Äã so that you can consciously change your behavior.‚Äã Self-Destructive Behavior If you don't address it, ‚Äãit can lead to self-destructive behavior where you‚Äã  Become obsessive‚Äã, Feel anxious‚Äã, Get depressed‚Äã, and Even burn out from all the ‚Äãstress and pressure that you put yourself under‚Äã.  It Impacts Others It affects the people around you too.‚Äã Your relationships take strain and‚Äã it can cause unnecessary friction in teams.‚Äã There are many signs that you are ‚Äãexperiencing Imposter Syndrome‚Äã but I'll be sharing four of them with you today.‚Äã 1. Doubting Yourself Sure, we all doubt ourselves occasionally‚Äã but the red flag is when it's so bad ‚Äãthat we can't function properly.‚Äã If you have Imposter Syndrome, ‚Äãyou've probably convinced yourself ‚Äãthat you are not good enough.‚Äã I remember working on a massive project recently and ‚Äãit was technically complex with a lot of people involved.‚Äã We had a deadline that we couldn't miss because ‚Äãmany of our products would simply stop working. ‚Äã This made a lot of people tense and stressed.‚Äã Self-Limiting Beliefs Now, it's relatively easy to write code ‚Äãand get it into production‚Äã but it is way more challenging ‚Äãgetting a bunch of people to talk to each other and ‚Äãmake the right things happen at the right time.‚Äã With so many people, it's hard to stay on the same page.‚Äã There was a lot of confusion and contradiction‚Äã probably because of miscommunication and misunderstandings.‚Äã I got lost and started doubting myself more and more.‚Äã  I felt like I didn't know what I was doing, I second-guessed my code &#x26; decisions,‚Äã I believed everyone around me was smarter than me, and I lost confidence in my skills as a developer.‚Äã  I did eventually convince myself ‚Äãthat I just wasn't good enough ‚Äãand that I should quit - which I didn't do. Words Define Your Reality After a lot of reflection,‚Äã I came to realize that I have a voice inside my head,‚Äã and that voice can be really mean.‚Äã It constantly puts me down and I believe it.‚Äã Who remembers Marvin the robot from Hitchhiker's Guide to the Galaxy?‚Äã I mean, what a depressed character.‚Äã It's like having him inside my head all the time - ‚Äãonly less funny.‚Äã Words define your reality!‚Äã You will believe the words you use to describe who you are. ‚Äã If you keep putting yourself down, ‚Äãyou will feel negative about yourself.‚Äã Holds You Back! If you don't address this, ‚Äãit can hold you back from doing even the most simplest things such as:‚Äã  writing code ‚Äãbecause you are afraid of being criticized and wrong,‚Äã prevents you from engaging with others ‚Äãbecause you are afraid of what others may think about your ideas or solutions,‚Äã kills innovation and creativity ‚Äãbecause your mindset is so bleak‚Äã, and holds you back from grabbing amazing opportunities ‚Äãlike applying for that position even if you don't check all the boxes.‚Äã  2. Setting the Bar Too High It is good to push yourself so that you can grow but the red flag is when you set the bar so high ‚Äãthat you burn out or are doomed to fail.‚Äã In 2014, I was in a team that changed a lot. ‚ÄãI would fill gaps that I saw‚Äã because I couldn't miss a deadline ‚Äãor let the project fail.‚Äã Before I joined the team, ‚ÄãI was used to working alone or in small teams at small companies‚Äã where I had to do a little bit of everything.‚Äã So, in this team, I instinctively took on the roles of these people‚Äã where I saw the gaps,‚Äã instead of holding them accountable. I was simply unaware that I could do that. Insane Difficulty Level Before I knew it, I was Product Owner, Scrum Master, Designer and Developer... taking on all the responsibilities and stress ‚Äãthat came with each role.‚Äã I worked so hard to keep everything afloat‚Äã that I did eventually burn out.‚Äã To make matters worse, I was filling these gaps about six months after I joined the company,‚Äã while I was still ramping up.‚Äã This was the first time I joined a large corporate‚Äã so the ramp up was steep for me. ‚Äã There are so many people, systems, servers, products ‚Äãand the network constraints (think Internet Proxy!). It was just insane! Anyway, I realize that I keep increasing the difficulty level ‚Äãand expect myself to excel,‚Äã not taking into account ‚Äãthe emotional, mental and physical strain that I put on myself.‚Äã Expect More From Others When you set the bar ridiculously high for yourself, ‚Äãthe problem is that‚Äã you also set it ridiculously high for those around you and then no-one can live up to your expectations.* *Adapted from Chris Lema in his exceptional talk at WordCampPhx  If you work long hours, you expect others to do the same,‚Äã If you learn new tech in your spare time, then others must too and‚Äã, Dare someone not do TDD if it is something you strong believe in and expect.‚Äã  It's important to know that people focus on different things in life‚Äã and it is unfair for us to impose what we think is important on them.‚Äã The Unicorn Job The same applies for finding the \"perfect\" job.‚Äã ‚Äã Start-ups look cool right!?‚Äã They look really attractive. ‚Äã Work here, learn lots, make cool stuff and have fun.‚Äã ‚Äã Bigger companies like Google, Netflix, Spotify and Facebook... they look even more attractive because of their benefits‚Äã and the cool products they create.‚Äã ‚Äã They advertise a culture of learning, innovation and fun‚Äã where staff are well looked after - on their standards.‚Äã ‚Äã What they don't always show is the pain.‚Äã The problems, flaws and constraints, all those negative things they need to deal with‚Äã which are probably similar to what you are currently experiencing in your job today.‚Äã You Are Missing Out We are suckers to this marketing business‚Äã. It can be for your job, your life...‚Äã I mean, look at Facebook. It is simply the highlight reel of people's lives‚Äã. This marketing around us is done so well that‚Äã even if you work for an amazing company right now‚Äã you'd want to leave because it doesn't meet the expectations that you have created in your mind.‚Äã Your life, compared to your friends and family on Facebook‚Äã may seem boring, because all you're seeing is the‚Äã fun, exciting stuff that is shared.‚Äã ‚Äã In life we are set on finding the \"perfect\" things‚Äã and we search so hard‚Äã that we miss out on what is currently happening‚Äã in our lives right now.‚Äã 3. Making Things \"Perfect\" This is basically about the inner perfectionist.‚Äã Now it's good to focus on consistency, aesthetics and quality‚Äã, but a red flag is when you can't let go because it's not perfect.‚Äã If I think back to the creation of my blog, ‚ÄãI remember how the pursuit for perfection‚Äã exhausted me.‚Äã I created it for a few reasons:‚Äã  To give back to the community by sharing my perspective,‚Äã Have a platform to showcase my skills for my career and‚Äã, Tinker with different technologies.‚Äã  I wanted something lightweight‚Äã so I chose Jekyll - which absolutely rocks!‚Äã and I used Grunt for workflow automation‚Äã such as image resizing, linting, minification and so forth.‚Äã At What Cost? I created the website from scratch. Multiple times, in fact, where I  Redesigned the interface, Restructured the folder contents, Reworked the automation, and Completely customized the Jekyll integration.  I did this all because I wanted everything to be \"perfect\" before launch. I invested a lot of hours into this website and I became obsessed. I would come home from a long day at work, go straight to my laptop where I would spend the rest of the night working on it. So, what happened?  Deprioritized health: I neglected my health as I didn't eat well. I skipped meals, didn't exercise or stretch. Fatigue: I didn't get enough downtime and rest. Strain on relationships: I stopped socializing with friends and family because I was too busy. Frustration: I got frustrated because I kept seeing flaws in the work I was doing.  Perfect Code Now, the same happens with our code. Keeping a codebase maintainable is a good thing but where do we stop or draw the line? We could refactor it for years to be \"perfect\" but that isn't feasible. Then again, what is perfect code anyway? Have you ever looked at code and thought \"what the hell is going on here?\" only to do a git blame where you sink deep into your chair seeing that you were the author? Good Enough This is a sign that we are growing. Our knowledge and skills grow with time. Instead of pouring hours and hours into perfecting something we should settle for what is good enough right now. When it satisfies the needs of the business and the customer, then it is good enough. Don't confuse this as an excuse to write bad code. You need to give it your best shot but doing so with the knowledge, constraints and resources that you have at that point in time, knowing that there is a possibility that you could fail but without harming yourself in the process. 4. Too Afraid to Fail Fear is a good thing when it makes you act or put in extra effort to achieve something. It's a red flag when it paralyzes you. Last year I learned to start living outside of my comfort zone. I did a lot of stuff that I wouldn't have done before because I was scared of what people would think of me or didn't feel confident in myself to try it. The scariest thing I signed up for was public speaking. Panic! The idea makes my knees weak and my heart race. I get anxious and nauseous. My throat closes and I feel like I can't breathe properly. Now, I don't have to wait to get onto the stage in front of everyone to feel this way. In fact, from the day my talk got accepted until presenting it, I'd been struggling to cope with this. I was getting panic attacks. Logic couldn't save me. Advice, suggestions or tips didn't save me. It was bad. Push Through It was something I wanted to achieve so I wanted to push through. I did four things:  Fully commit to it: I tweeted that I would be talking and booked my travel and accommodation so that it would be considerably harder to back out. Breathe: To deal with the panic attacks I had to learn to breathe deeply. I needed to calm my mind so that I could think clearer to soothe the anxiety and work on my content. Prepare: Even though I was terrified, being unprepared would have made matters worse. I prepared the content and practiced the delivery multiple times. Get a support structure: Without the support structure from amazing people in my life I may have backed out. I got different perspectives, coaching and emotional support which helped to reduce the panic and anxiety.  Techniques Befriend You Imposter Now that we can identify and name our imposter, we can befriend it by taking back control of our minds. We can see it as that cautious friend that keeps you and your ego in check, which can be quite humbling. Having that balance keeps you from becoming over-confident and arrogant. Here are some of the techniques that can help you find your balance.  Be honest with yourself: Juggling all these feelings can be scary and overwhelming. Accept that you are experiencing Imposter Syndrome and know that you can work through it. You are in control: You may feel like a victim but your mind is creating this bleak reality. You can actually control it even if it doesn't feel like it.  Calm your mind: If your mind is too busy then you can't focus or be in control. Realize that you are not your thoughts and feelings. They come and go, so you don't need to be consumed by them. Breathing, meditation and mindfulness practices can help you calm your mind.   Be kind to yourself: Being your own worst enemy isn't going to get you anywhere. Accept yourself for who you are and be conscious of the words you use to talk about yourself. You are the most important person in your life. Look after yourself mentally, physically and emotionally.  Reflect: There are always things you can do to improve on. Reflect by asking yourself what is going well, what isn't going so well and how can I improve?  Talk about it: So many people are affected by this but few talk about it or even realize it. Know that you are not alone. You don't have to suffer in silence. Get a different perspective on your performance and behavior by talking to people around you. You can also give back by sharing your experiences and perspective.   Get support: Find a mentor with a similar personality to get guidance that will help you in situations where you struggle. You could also start or join a meetup group where you have regular discussions about this.   Take it day by day: It's a bumpy road. Some days are good, others not so much. I have to put in a lot of effort and sometimes I feel like I'm right back at the beginning of this road. I just take it day by day and try not to be hard on myself. I am only human.  Get outside your comfort zone: It's easy to stagnate in this place of comfort. If you want to grow then do something that scares you, something you haven't done before or learn a new skill.  And when all else fails, do what Barney Stinson says \"When I'm sad I stop being sad and be awesome instead.\" Why go through life missing out on opportunities, constantly putting yourself down and being scared of how other people see you? You are not immortal, so take your life back!  The Imposter Test The Clance IP Test was developed by clinical psychologist Pauline Clance to help individuals determine whether or not they have Imposter Syndrome characteristics, and if so, to what extent they are suffering. After taking the Imposter Test, add together the numbers of the responses to each statement. If the total score is 40 or less, the respondent has few Imposter characteristics; if the score is between 41 and 60, the respondent has moderate IP experiences; a score between 61 and 80 means the respondent frequently has Imposter feelings; and a score higher than 80 means the respondent often has intense IP experiences. The higher the score, the more frequently and seriously the Imposter Phenomenon interferes in a person‚Äôs life.  Resources  Download the slides (PDF) YouTube Recording Twitter Moments Beat Imposter Syndrome Leaving Comfort Behind - Episode 202 on the Developer On Fire podcast I'm a phony. Are you? by Scott Hanselman The Imposter by Pablo Stanley on Medium 13 Charts That Will Make Total Sense to People with Imposter Syndrome by Kristin Chirico on BuzzFeed How To Fight The Programmer Imposter Syndrome? by John Sonmez on the Simple Programmer YouTube channel  Presentations  Chris Lema at WordCampPhx Gitte Klitgaard at GOTO 2016 Lou Solomon at TEDxCharlotte Kirsty Walker at TEDx Whitehall Women Bianca Gibson at PyCon Australia Olivia Fox Cabane at Google - Charisma, Leadership and the Imposter Syndrome   The power of vulnerability - Ted Talk by Bren√© Brown Teach girls bravery, not perfection - Ted Talk by Reshma Saujani The happy secret to better work - Ted Talk by Shawn Achor "},{"slug":"/blog/the-fear-behind-the-scenes/","title":"The fear behind the scenes","tags":null,"html":" \"The reason why we struggle with insecurity is because we compare our behind the scenes with everyone else's highlight reel,\" Steven Furtick  Think of someone successful in the industry who you admire. This person doesn't have to be well known, but to you this person is doing amazing things. Things you probably don't think you can do or achieve. Then consider the following questions.  How often do you compare yourself to this person? Do you feel inferior to this person? Do you want to be more like this person? Do you think this person just naturally succeeds? Do you think that you can be as successful as this person? Why do you consider this person to be successful? How often do you consider the struggles and challenges this person faces?  Subjective perspective Your point of view is influenced by your personal feelings and opinions which accumulate and adapt throughout your life based on the circumstances, environment and experiences that you have been exposed to. We all see the world through our own eyes so we experience things differently. Have you ever been in a meeting where two people had polar opposite experiences? One thought the meeting to be extremely valuable while the other a complete waste of time? The way you see yourself could be completely different to the way others see you. You know yourself inside out. Your thoughts, feelings, fears, struggles. The people around you are exposed to what you project. Keep in mind that when you look at people you deem successful, then you only see what they are projecting. With that said, how often do you  consider yourself to be successful? recognize when you have succeeded at something? appreciate the effort you put in and celebrate the win?  Imposter Syndrome Wikipedia says that Imposter Syndrome doesn't have a standard definition,‚Äã but explains that it as a 'concept describing‚Äã high-achieving individuals ‚Äã who are marked by an‚Äã inability to internalize their accomplishments ‚Äãand have a‚Äã persistent fear of being exposed as a \"fraud.\"' It can be debilitating when the experiences are intense. Unfortunately many people suffer from it and don't even realize it. The more we talk about it, the more we can create awareness and help each other out. I wrote about it, shared it on Reddit on /r/programming, then someone else shared it /r/programmingcirclejerk/, I was interviewed on a podcast and then I spoke about it at the Rubyfuza 2017 Conference in Cape Town. The post I wrote was successful. It gained a lot of traction through the Reddit post which I didn't expect. Honestly, it freaked me out. I got flamed and complimented and it sparked a series of events that I didn't anticipate. It took me a week to write the post. I was scared to publish it because I was exposing a vulnerable side of myself. I had doubts but I shared it on Reddit because I wanted to create awareness regardless of how I felt. Then Dave contacted me to do the podcast and that scared me. I procrastinated. When I finally did have the interview I had mixed emotions although he thought it was fantastic. When it was published I really struggled to listen to it. I have a terrible fear of public speaking but I submitted the talk to Rubyfuza because it's a fear I want to address and again I want to keep raising awareness on this topic. I struggled from the day the talk was accepted. I had panic attacks and didn't believe that I would be able to deliver the speech at all. After the talk, I received numerous compliments. I was told that I didn't appear nervous, I delivered it quite well and people resonated with the topic. The reality was that I wanted to hurl. I was shaking. I wanted to run away. I doubted my content, my abilities and thought that my voice sounded like Batman at times. Now, if I was someone else looking at what I have achieved in the last year I'd probably think \"Wow! How brave and successful. I wish I could be more like her.\" But I am me. I know all the pain, suffering, anxiety, fears, worries, concerns, doubts, doom and gloom I went through on this journey. This tends to negate the ability for me to identify and internalize my accomplishments. At least that seems to be the trend that I see in myself. Since I have identified that I have Imposter Syndrome, named it and unpacked it, I have become more aware of my thoughts and behavior. I try to be less harsh on myself and celebrate my wins. I don't always get it right but at least it's a step in the right direction. Compared to others I used to put people I deem successful on pedestals. I didn't believe I would be able to achieve what they could yet I would compare myself to them which made me feel bad about myself. I've since learned that I can compare myself to other people to see how I can improve certain areas and skills in my life. As long as I remember that I am merely comparing outcomes on an outer level. I am not always exposed to the effort and pain involved in the process prior to the outcome.  The reason why we struggle with insecurity is because we compare our behind the scenes with everyone else's highlight reel. ‚Äï Steven Furtick  So, now I know that when I look at successful people, I am only seeing half the picture. I didn't consider that these people are ordinary human beings who struggle - just like I do. The moment this clicked, it broke down a barrier of self-limiting beliefs. We can cautiously compare ourselves to others as a means of healthy competition and measurement. We can avoid it if it invokes negative effects like self-doubt, low self-esteem and depression. Expose the fear Scott Hansleman spoke at the DeveloperUG meetup on Thursday 9 February. For 25 years he has been struggling with Type 1 Diabetes and he is trying to tackle the problem with software. He also hinted at the fears he has of talking in front of an audience. I really appreciated him openly sharing his struggles. The behind the scenes of any successful individual can be quite messy. It's entangled with doubt, fear and struggles. Fear can hold us back from doing amazing things and experiencing what life has to offer us. We all have fears and we should talk about it. My final thoughts If we succeed in something, talking about the fears and struggles that happened prior to the outcome can expose others to a completely different perspective which could be quite empowering. If we have these conversations and understand that it is not just us who feel scared and vulnerable, then we can cultivate a culture of bravery within our industry and encourage people to get out of their shells. This can lead to more valuable perspectives and experiences shared in our community."},{"slug":"/blog/discovering-yourself/","title":"Discovering yourself","tags":["Mindset","Communication","Relationships"],"html":" ‚ÄúKnowing yourself is the beginning of all wisdom.‚Äù ‚Äï Aristotle  Sometimes I struggle to consciously understand my actions. This makes it hard for me to find out why I react the way I do in certain situations. In some cases I am proud of how I act but other cases I feel bad and wish I didn't say or do something in that moment. If I can't consciously identify the trigger, I have less control of my behavior which is often driven by an automated response. Introspection Introspection is a good way to become aware of your behavior. This is where you take time to think about your mental and emotional processes. It can help you identify triggers that cause you to act the way you do. You can become self-aware and consciously change your behavior with time, patience and practice. Although I believe it is a good daily practice to incorporate in ones life, it can take a lot of time to figure out who you are and what drives your behavior. Journaling Another technique is to capture specific moments, reactions and feelings in a journal each day. It can improve your introspection over a longer period of time. I struggle to keep a journal but do see the value in doing so as it documents your personality whereby you could draw interesting conclusions to what triggers your behavior over time especially when you have difficulty remembering things.  How to Journal for Therapy from wikiHow 10 Journaling Tips to Help You Heal, Grow and Thrive from the Tiny Buddha The Power in Writing About Yourself from The Atlantic  Personality tests I generally don't buy into personality tests and quizzes but I was recently exposed to two tests that yielded eerie results - capturing my core personality traits in words that I strongly relate to.  Enneagram 16Personalities  Having taken the tests I have been exposed to a better understanding of myself - a stepping stone to self awareness - which would have taken much longer to achieve through introspection and journaling. The combination of reports provide information relating to:  What makes you tick Your strengths and weaknesses Why and how you behave in different relationships and situations Your behavior in teams, leadership and management Your career paths and workplace habits Your growth paths Your blind spots How you deal with conflict How you make decisions How to attain Mastery in your profession  Enneagram According to Integrative, a South African-based company that provides Enneagram Solutions, the Enneagram is an archetypal framework that offers in-depth insight to individuals, groups and collectives. It consists of three centres of intelligence, nine main Enneagram types, 18 wings, and three subtypes and Triadic styles. They go on to say that it does not box in people, but rather opens a pathway to self-discovery and greater personal awareness.  The Integrative Enneagram Questionnaire draws on the collective body of knowledge and experience from many pioneers in the Enneagram field and as the developers of the iEQ9 we would like to acknowledge the experts, philosophers and practitioners for their contribution to the development and application of the model as we understand it today. ~ Dirk Cloete, Founder Integrative9 Enneagram Solutions  There are places where you can take the test for free however the Integrative test is paid for. They offer three reports at different costs depending on how much information you want to gain from the test. The nine Enneagram types include:  Strict Perfectionist: The Rational, Idealistic Type: Principled, Purposeful, Self-Controlled, and Perfectionistic Considerate Helper: The Caring, Interpersonal Type: Demonstrative, Generous, People-Pleasing, and Possessive Competitive Achiever: The Success-Oriented, Pragmatic Type: Adaptive, Excelling, Driven, and Image-Conscious Intense Creative: The Sensitive, Withdrawn Type: Expressive, Dramatic, Self-Absorbed, and Temperamental Quiet Specialist: The Intense, Cerebral Type: Perceptive, Innovative, Secretive, and Isolated Loyal Sceptic: The Committed, Security-Oriented Type: Engaging, Responsible, Anxious, and Suspicious Enthusiastic Visionary: The Busy, Fun-Loving Type: Spontaneous, Versatile, Distractible, and Scattered Active Controller: The Powerful, Dominating Type: Self-Confident, Decisive, Willful, and Confrontational Adaptive Peacemaker: The Easygoing, Self-Effacing Type: Receptive, Reassuring, Agreeable, and Complacent  They are labelled differently depending on the institute but revolve around the same principles. The above are labelled by Integrative while the descriptions come from enneagraminstitute.com. 16Personalities This test is free but has premium content that you can pay for if you so choose. The free content is extensive, very informative and eerily accurate. In fact, at the time of writing they actually mention that you get a 'freakishly accurate' description of who you are and why you do things the way you do. As the name suggests there are 16 personality types each with its own acronym broken down into 4 categories: Note for the acronyms: These are the five personality aspects. They define the personality type when they are combined.  Mind - Introversion (I) or Extraversion (E) Energy - Intuition (N) or Sensing (S) Nature - Thinking (T) or Feeling (F) Tactics - Judging (J) or Perceiving (P) Identity - Assertive (-A) or Turbulent (-T)  The Identity aspect underpins all personalities, showing how confident we are in our abilities and decisions. They elaborate on this in their theory. Analysts  Architect: (INTJ Personality) Imaginative and strategic thinkers, with a plan for everything. Logician: (INTP Personality) Innovative inventors with an unquenchable thirst for knowledge. Commander: (ENTJ Personality) Bold, imaginative and strong-willed leaders, always finding a way ‚Äì or making one. Debater: (ENTP Personality) Smart and curious thinkers who cannot resist an intellectual challenge.  Diplomats  Advocate: (INFJ Personality) Quiet and mystical, yet very inspiring and tireless idealists. Mediator: (INFP Personality) Poetic, kind and altruistic people, always eager to help a good cause. Protagonist: (ENFJ Personality) Charismatic and inspiring leaders, able to mesmerize their listeners. Campaigner: (ENFP Personality) Enthusiastic, creative and sociable free spirits, who can always find a reason to smile.  Sentinels  Logistician: (ISTJ Personality) Practical and fact-minded individuals, whose reliability cannot be doubted. Defender: (ISFJ Personality) Very dedicated and warm protectors, always ready to defend their loved ones. Executive: (ESTJ Personality) Excellent administrators, unsurpassed at managing things ‚Äì or people. Consul: (ESFJ Personality) Extraordinarily caring, social and popular people, always eager to help.  Explorers  Virtuoso: (ISTP Personality) Bold and practical experimenters, masters of all kinds of tools. Adventurer: (ISFP Personality) Flexible and charming artists, always ready to explore and experience something new. Entrepreneur: (ESTP Personality) Smart, energetic and very perceptive people, who truly enjoy living on the edge. Entertainer: (ESFP Personality) Spontaneous, energetic and enthusiastic people ‚Äì life is never boring around them.  Labels and descriptions taken from 16personalities.com. My final thoughts As I have been experiencing Imposter Syndrome it has been difficult to internalize my accomplishments, acknowledge my strengths and weaknesses and understand why I act the way I do in certain situations. Having done both personality tests I am one step closer to understanding myself more. I believe that discovering myself is a life-long journey but this stepping stone is a true eye-opener and very useful for self improvement. There are certain personality traits that I have that highly affect my experiences of Imposter Syndrome and being conscious about it I can make more rational and deliberate decisions when I put my mind to it. I believe that if you are able to understand why you do things the way you do, you can deliberately improve your behavior especially in pressured situations. It can improve your productivity, the way you communicate with other personality types, team dynamics and leadership qualities. Amongst other things. Taking the test alone won't yield much results. It just highlights possible triggers and can make you more aware. It is a good guidance report to get you on the path to self-awareness. Daily introspection is still important and journaling could aid as improvement documentation."},{"slug":"/blog/words-define-your-reality/","title":"Words define your reality","tags":["Mindset","Relationships"],"html":" \"Words are free. It's how you use them, that may cost you.\" - KushandWizdom  How often do you listen to yourself when you speak? Not just hear your own voice but actually listen to the words that you use. Do you carefully choose the words you use? This can be in ordinary conversations, debates, heated arguments or even in the way you describe yourself. I struggle to choose my words wisely. I speak freely and sometimes I fail to properly convey what I am trying to say. It's something I am actively trying to work on which is why I am writing about it. The language you use to describe your thoughts, feelings, circumstances and experiences can ignite certain emotions in yourself and others. These emotions range in the spectrum of positive and negative. In certain cases it can be quite damaging and toxic (overly negative) or delusional or blinding (overly positive) to a work environment. Therefore, it's important to consider the affects the words you use have on yourself and others.Emotion reacts to language. So be careful what you say to others.Be even more careful what you say to yourself.&mdash; Tim Kight (@TimothyKight)November 16, 2016  Absolute language  ...But the human tongue is a beast that few can master. It strains constantly to break out of its cage, and if it is not tamed, it will run wild and cause you grief. ~ Unknown  As I have been experiencing Imposter Syndrome I came to realize that I have a voice inside my head,‚Äã and that voice can be really mean.‚Äã It sometimes puts me down and I believe it.‚Äã It's like having the voice of Marvin the robot from Hitchhiker's Guide to the Galaxy inside my head - ‚Äãonly less funny.‚Äã When I first spoke about my experiences of Imposter Syndrome I used absolute language to describe it. When we use terms like always, never, everyone, no one, constantly, none, anything, everything, nothing and so forth, we describe things that have no exceptions. That's simply the way it is.  There is no ... Everyone is ... No one is ... They always ... We are constantly ...  We are probably just trying to convey the intensity of the thing that we are describing through the usage of absolute language because that is how we are feeling at the time. But what is the reality really? Do we take the time to pause and logically think it through - or are we driven by an emotional response at that time? We are human though after all. Things are rarely absolute and if we get sucked into the abyss of speaking in absolutes, we are blinded by contradicting truths. Not only do we believe what we say but we affect the perception of others too.  Be careful with your words. Once they are said, they can be only forgiven, not forgotten. ~ Unknown  Perspective When you wake up in a bad mood, have you noticed how the universe continues to throw curve balls your way? Negative events compound throughout the day which simply fuels to your building frustrations until you burst at the seams. When you wake up in an exceptionally good mood, have you noticed how you let certain negative things that happen to you slip by without hindering on it? Have you ever been in a meeting where you noticed two polar opposite effects? Some people found the meeting super productive while some people found the meeting a complete waste of time? While others found the meeting just okay? Have you become more attuned to what that one person has kept telling you and made a concrete case to support their hypotheses? When you are in a particular mood or mindset, you are most likely more sensitive to things surrounding that mood or mindset - a sense of confirmation bias.  The tendency to search for, interpret, favor, and recall information in a way that confirms one's preexisting beliefs or hypotheses, while giving disproportionately less consideration to alternative possibilities. ~ Wikipedia on Confirmation Bias  Ask yourself, \"is it really as bleak and negative as I believe it to be?\" In the same light, \"is it really as positive and awesome as it seems?\" From what perspective are you describing this thing? Have you questioned or scrutinized the thing you are talking about? Are you influenced by how you are currently feeling? Should you wait a bit before you passionately talk about it? I don't think anything is ever black and white. Surely there is a gray area to most of the things we perceive. How will you describe this thing if you were in a different mood such as happier or more content? What you feel today is not necessarily how you will feel tomorrow. Words can damage relationships and the perspective of yourself. That doesn't mean you can't talk about it. It just means that you need to be conscious of the vocabulary used to convey the message in your current stete of mind.  Be mindful when it comes to your words. A string of some that don't mean much to you, may stick with someone else for a lifetime. ~ Rachel Wolchin  Bigger picture Do you have enough information to make the conclusions that you are making right now? Is there a bigger part of the picture that you are not exposed to or not seeing in your current state of mind? Be aware of making absolute conclusions and sticking to them when you aren't aware of the bigger picture. Your perspective should be variable to the information you gather from this bigger picture over time. Let that reflect in the words that you use.  Handle them carefully, for words have more power than atom bombs. ~ Pearl Strachan Hurd  My final thoughts I fall victim to using absolute language, my words reflect my current state of mind and I am not always aware of the bigger picture. When I am negative my tone tends to be negative and the same goes for positive. Now that I am conscious of it, I can try my best to influence the way I speak. Not only will this have an impact on those around me but it will affect the way I perceive myself. I believe that this is essential for the culture within an organization and how you perceive yourself. Negativity is toxic and can spread like a virus. Be conscious of the words you use to explain your thoughts, feelings, circumstances and experiences. If you get it wrong, don't be hard on yourself and don't ground yourself on the beliefs you speak of. Let them be variable while you keep building that bigger picture.  Additional material  26 Brilliant Quotes on the Super Power of Words from Inc.com 3 Reasons Why We Should Be Careful When Using Absolutes from MTN Universal  "},{"slug":"/blog/change-starts-with-you/","title":"Change starts with you","tags":["Mindset","Comfort Zone","Relationships"],"html":" Mahatma Gandhi says to start changing yourself if you want to change the life around you.  \"Change starts with you\"... how clich√© Clarice. Thanks for that one. Okay, I really feel I need to deep dive into this topic to make my intentions clear. It is common knowledge yet subtly and very challenging to apply in both personal and professional relationships. So why did I choose a depressed lady sitting in the corner of her room moping for the hero of this post? Well...  If you are a people-pleaser, you want to keep everyone around you happy. This isn't possible as we know. People like different things and behave differently in the same situation to others. This may unsettle you especially in conflict. If you are someone who wants to get things done and notice that people are working too meticulously or what you may deem to be \"snails-pace\", you may get frustrated. If you are methodical and meticulous, you may feel anxious around someone who is rushing you or hounding you for deadlines or progress status updates.  You get my point. No matter who you are, there will be some form of conflict contributed by an external factor that you cannot control. This can make us sad and could lead to depression. You may feel the need to walk into a building and tell people exactly how they need to act and work in order to create synergy for you. Effectively this could cause chaos for them. Granted a company culture where people buy into is most likely an effective umbrella of action-oriented behavior but what about on a personal level? You cannot change other people. You can't change the way they think, what they believe, how they act or what they say. It's just not possible. You can share insights and influence others through your behavior but they choose how they react and interpret what you do and say. This is why change starts with you. It doesn't mean you are going to change the world. It just means that you change your world.  You decide how to perceive what is happening around you. You get to choose what impacts you (broadly) and how. You have control over how you react to other's words and behavior. You decide what consequences and trade-offs you are willing to take for whatever decision or situation that arises. You become the creator of your life instead of fall victim to society.  Easy? No. Possible? Yes - with a lot of hard work and dedication. Have I mastered this? No. I am struggling my backside off trying to implement this in my life, which is why I write about it. To remind me and share what I have learned with others. Gandhi has 10 Rules for Changing the World:  Change yourself You are in control. Forgive and let it go. Without action you aren‚Äôt going anywhere. Take care of this moment. Everyone is human. Persist. See the good in people and help them. Be congruent, be authentic, be your true self. Continue to grow and evolve.  The road to self-discovery is a long-winded topsy-turvy journey. I've been on this journey for a while now and have written much on it. Feel free to explore some of the highlights of my \"journal\":  Discover who you are Be mindful Rethink how you speak Try to live sustainably Know when to take a break Cope with unknown outcomes Step out of your comfort zone Remember that nothing is perfect   If you are also on this journey, I wish you the best of luck. If you are eager to contribute, start a discussion. I am eager to hear what you have to say."},{"slug":"/blog/know-your-limits/","title":"Know your limits","tags":["Mindset","Comfort Zone"],"html":" \"Know your limits, know when to give, know when to demand, know when to say no, know when enough is enough\"  Face your fears, get out of your comfort-zone, do something that you won't normally do. Yes, this is maybe great advice until it becomes debilitating and you falter under the pressures of this \"anomaly\". Identify your limits I know this because I've succumbed to it. That is why I believe that it is important to know your limits. You won't know if you don't try though. So go ahead and try. If it does cause such intense anxiety and debilitates you to the point of no return, you've most likely reached a limit and know to avoid it for next time. You can choose to follow through or escape the situation. The choice is yours for the making - no one else's. Is it worth my while? Ask yourself if you can really cope with this or if you need to back out:  Which is more detrimental to me? What is the impact on my lifestyle, relationships and wellbeing? What are the consequences of both? Are there trade-offs or compromises that can be made? Is it just fear or real debilitation in my day-to-day functioning?  If it becomes so debilitating you may end up misusing or turning to mood altering substances, become obsessive and create unhealthy relationships. This is what you want to avoid. The most debilitating experience I can share is speaking in front of an audience where I was filmed in a room with about 200 people. I now know, although I did do it, that I will most likely not do public speaking on that level again. Say no This is a hard one, especially for a people-pleaser who takes on more than they can chew. If you can't do something, you are not compelled to do it. Just say no. Be the FIRST beneficiary for anything you do. If you are not benefiting from a particular task, function or activity then you are losing your precious time you have on this earth.  You need to put yourself first. Understand your roles and responsibilities. Know your capabilities and strengths. Avoid burnout and being overwhelmed.  Saying no gives you a way out of doing something outside of your limits. Assertive demands Sometimes you need to make demands. This could be something drastic as a salary adjustment, asking a colleague to stop showing up late for important meetings or something as simple as getting green sticky notes to help your productivity. Whatever your demand is you can vigilantly communicate them without regret or guilt. Express your point of view while respecting the rights and beliefs of the other person. This form of communication does not offer a no response but a compromise can be made. It can help you boost your self-esteem and respect with others. Assertive demands can help you manage people who often push you to do things outside of your limits. You will be able to sternly but respectfully communicate the reasoning behind the lack of enthusiasm you do not share with regards to the situations and activities in question. Boundaries Draw invisible lines where things make you feel inferior, uncomfortable or \"dirty\". There are probably other reasons for creating boundaries but the point is to communicate these boundaries and have consequences for the person overstepping a boundary - not empty threats. Push back or you'll be taken advantage of. These boundaries tied to your limits can help you identify where you wish to draw the line personally with certain situations and activities. It can also help you manage the expectations of others who want you to do things you know you cannot achieve without falling apart. My final thoughts I still choose to live outside my comfort-zone. I don't know many of my limits yet I do tend to push myself quite far. I have come to learn that I need to put my needs before my aspirations and successes as to not burn out and over extension."},{"slug":"/blog/who-are-you-and-where-are-you-going/","title":"Who are you and where are you going?","tags":["Mindset"],"html":" Nathaniel Hawthorne says that happiness is a butterfly, which when pursued, is always just beyond your grasp, but which, if you will sit down quietly, may alight upon you.  I've been plagued for years for trying to find purpose in life. This desperation has left me exhausted as I a played a cyclic game. I tormented myself because purpose is a person's sense of resolve or determination and I felt I had none. While talking to a very good friend of mine, I came to realize that I want to intentionally contribute in order to add value. Well now, there's a bunch of complicated and overloaded words that require some unpacking. At least it's more elaborate than purpose. Each statement in the unpacking process requires its own why and what does it mean to me in order to get to the bottom of our complex desires, or at least get close enough to fulfillment. I had an epiphany a few weeks ago. What's the point of finding a purpose if I don't know who I am? I need to discover myself first - a journey I've been on for quite some time now. Maybe that is my purpose? Who knows. The information I wish to share with you today, is information I gathered during a self-healing process on my road to self-discovery. Personal identity  No one saves us but ourselves. No one can and no one may. We ourselves must walk the path. ~ Buddha  As much as I kick and scream and tantrum, life is just going to keep happening to me. Nature doesn't stop living when I am happy or when I am sad. The world just keeps turning and people just keep peopling. I can really start to listen to life. I can see it's story as it happens to me. I can figure it out day by day and decide what it is that I want that will make me happy or improve my sense of self-worth. Sure life can really suck and as I know I can't control it and it doesn't care about my logic or rationality, I can just let it happen to me. Accept it. I know I have the capacity to go anywhere and do whatever I want. I just need to live with consequences of whatever actions I choose. Are the consequences destructive or rewarding? Is the choice feasible? A quick rationalization hardly does any harm. I'm so sucked in by my self-limiting beliefs and poor perspective that I don't realize that I am in control of my life, my thoughts, my feelings and my behavior. I have power over me - even though I rarely believe it. Suffering We get hurt by people, circumstances and all the things that hurt us that are outside of our control. This leads to suffering...  Fear is the path to the dark side. Fear leads to anger. Anger leads to hate. Hate leads to suffering. ~ Yoda (George Lucas)  When we are in the dark side (which is neither good nor bad), it becomes hard to realize that people act differently within their own parameters of limitations, insecurities, needs, finances, concerns, emotions, environments and circumstances. This is when we may experience unhealthy levels of fear, anger, hurt, sadness, pain and suffering. We can spiral downward into a chaotic emotional mess if we allow it to happen. Sometimes we are not aware of these parameters because we are the hero's or lead actors/actresses in our own lives. This can be confusing. Understanding the logic but implementing in action are two different things. In the heat of the moment it is easy to lose control and lash out as an emotional defense.  You will not be punished for your anger, you will be punished by your anger. ~ Buddha  I learned that I need to heal my perception of the people who have hurt me. I need to heal the person within me. \"I love you. I forgive you. I thank you. I am sorry.\" We all have our own stories to tell. We desire healing at an emotional level. We can start by being compassionate and caring. Give to others rather than hoping to get something back. In the moment  Do not dwell in the past, do not dream of the future, concentrate the mind on the present moment. ~ Buddha  The past is something that cannot be changed, the future is influenced by the choices and actions that you make in the present moment. To balance who we are we need to fulfil some needs which are independent of time and space (place / circumstances / environment)  Acceptance Contentment Excitement Happiness Health Love Peace Stability Success Wealth  As we require mental nourishment, we can find it through Mindfulness practices by being present in the moment and allowing thoughts to come and go with acceptance and without judgement. Outcome  What we think, we become. ~ Buddha  Your mindset is powerful. You have the power to decide how you will feel in a situation. You should be aware of the circumstances and decide how to act.  What are the dangers of the situation? What are the consequences of my actions? Will it make me depressed or not depressed?  Depressed If we choose to be depressed about something we tend to blame. We become a victim. Other people are accused and held responsible for our thoughts and feelings. They did this to me. They could have handled the situation better. Not depressed If we choose not to let the situation get us down we can own the situation. We become the creator. This makes us a facilitator of our own destiny. We realize that we are not responsible for anyone's thoughts and feelings other than our own. My final thoughts  Today you are You, that is truer than true. There is no one alive who is Youer than You. ~ Dr. Seuss  It is important to discover who you are. You need mental nourishment and to look after yourself. Be aware of your situations and how you wish to react. Set personal boundaries for people around you. You can choose to give in spite of the situation but be aware of the circumstances. Transcend the situation. Be mindful and live in the moment instead of dwelling on the past or future."},{"slug":"/blog/practice-what-you-preach/","title":"Practice what you preach","tags":["Mindset","Communication","Relationships"],"html":" \"Your beliefs don't make you a better person, our behavior does.\"  I have a far way to go on my journey. My journey of self-discovery and healing. It's a life-long journey and sometimes it's a real battle. Yes, it becomes absolutely exhausting. I struggle - so many times, yet I push through as best I can. I try. Often I find myself in conversation giving insights or advice that could actually be benefiting me directly. I have WOAH! moments of epiphanies where I realize that I have so many of the answers to challenges that I face yet struggle to incorporate them into my own life. Why? Maybe it's because:  I am not yet ready myself Probably because it's not that simple I don't fully understand how I can implement it I am scared or too tired to try I give up or give in too easily to old ways  So if that is the case, is it really fair that I share my insights, opinions, beliefs and perspectives if I don't fully practice what I preach? The saying Firstly, that saying bothers me. I don't like it: practice what you preach. I don't feel like I am really preaching. Rather, I share. I share what I believe in a particular point in time. So maybe, practice what you believe? My beliefs are also variable. They change, evolve and adapt over time as I learn new ways and discover things that are new to me. So maybe, practice your present beliefs? What happens if I know something? It's good advice. I trust it but I am not yet ready to apply it to my own life. It's knowledge but not something I yet believe. How about practice the knowledge you trust in today? Pursue Whatever you decide to call it, talking to someone experiencing similar challenges positively impacts me and may you:  I don't feel so alone in the circumstances or situation anymore I can relate and empathize with the person The more I talk about possibilities, the more it reinforces personally over time I get exposed to alternate options, thought patterns, perspectives and possibilities I get inspired, motivated and can learn to apply it I have a sense of worth in helping someone else  Winging it We're all living this thing called life. It doesn't come with a handbook instead it has tons of philosophies, religions, spiritual beliefs, inspirational and self-help books, motivational quotes, perspectives, you name it. It all comes from people over decades of trying to figure this shit out. I feel like we are winging it. Some people are further along in their journey than others. Some fall back decades because of some traumatic event or whatever the case. Some leap beyond because something just clicked. I think the best we can do is just talk about what we learn to others. Share. Unwelcomed Sometimes we speak with such conviction. Someone has a crisis and we climb straight into our skin tight super-hero outfit with cape, external undies and mask to save the catastrophic day by offering our solution-mode super-power capabilities. The worst thing we can do is to instill information on deaf ears who just want to be heard or vent. WOAH! a bit on trying to save their world for a moment. Before going into solution-mode it is probably best to ask:  Are you seeking advice for your situation or do you just want to be heard?  You should know. Sometimes you just want to shout, vent, rant, anything to get whatever is bothering you off your chest. If the person starts offering all sorts of advice it could just aggravate the situation... right? Well it doesn't harm anyone in asking that question as far as I can see. Manipulate and intimidate Has anyone ever given you advice in which you turned down and the reaction was that they try to manipulate or intimidate you into taking their advice? \"If you don't do xyz then I can't give you abc because that is not acceptable. You are only going to end up in Hell.\" There are scenarios where this form of behavior could be acceptable but I can't think any. I also don't advocate it although I do fall victim to doing this myself to get my way. I am actively trying to stop this behavior. For the purposes of sharing life-coaching information, insights and advice, it is most advisable to avoid getting frustrated when someone doesn't take it. People should choose to listen and believe what they want and in no way should you ever take this personally. Your advice is most likely great; you just need to remember that everyone is on a different path / journey and therefore have different perspectives. Your advice may or may not work for them but who cares? My final thoughts Your life is the most important of all. Don't feel bad when people don't take your advice. Don't feel compelled to give advice and don't force advice on others. If you can get yourself to believe and trust the knowledge you share so that you can fully integrate and implement it into your own life then you have done good. Try to practice the knowledge you trust in today. And share it."},{"slug":"/blog/rewire-your-brain-part-1-introduction/","title":"Rewire your brain (Part 1) - Introduction","tags":["Mindset","Productivity"],"html":" John Medina said, \"what you do and learn in life physically changes what your brain looks like - it literally rewires it.\"  You are learning something new everyday. Whether it be a new skill, new way of doing something, discovering something you haven't encountered before, exploring a new area or meeting new people and learning about their lives and behaviors. This started from birth and will follow you through your adult years. The plasticity of your brain is stronger as a child but remains plastic in your adult years. Your brain is not static or rigid thus keeps changing as it absorbs more information. When you think, a chemical reaction occurs in your brain. The more you think, feel and act in the same way, the more it will stick. So as your days increment, you add on to old behaviors, thought patterns, feelings and beliefs. You can cling to them subconsciously making you unaware of your behavior as it is a reflex - an automatic response. Our brains become fragmented and filled with spam and malware which we need to defragment and clean up to keep our precious hardware safe. How about the idea of rewiring the way our brain works to change our behaviors so that we can live healthier lives. I use the term healthier in the sense that we are able to get out of depression easier and cope better with anger, stress and anxiety. We let go of unhealthy behaviors. The idea is to make us healthier so that we can be more productive, approachable and calmer. I don't think it's healthy being overly positive or overly negative. We need to balance the spectrum - yin and yang - synergy. That is why I prefer the term healthier over positive. If you have ever tried to break a habit like smoking, drinking, biting your nails, whatever your flavor; you will know how hard it is. The idea behind this series of articles called Rewire Your Brain is to document and share some of the techniques and models available to help you successfully (hopefully) break bad habits and behaviors. I want to get out of the victim role where there is blame and disadvantage and into the creator role where I use my circumstances to my advantage to control my present destiny. I will be exploring concepts like activating neuro pathways, the Satir Change Model, Neuroplasticity and more. A lot of concepts overlap which deepens the ideas behind these techniques and models. I have a deep personal interest in this topic as I desperately want to rewire my brain for a healthier approach to life. I do hope you benefit from this too.  References  After watching this, your brain will not be the same, Lara Boyd at TEDxVancouver 5 Ways To Rewire Your Brain For Meaningful Life Changes, MindBodyGreen, Dr. Hilary Stokes "},{"slug":"/blog/rewire-your-brain-part-2-activate-neuro-pathways/","title":"Rewire your brain (Part 2) - Activate neuro pathways","tags":["Mindset","Productivity"],"html":" Dr. Hilary Stokes says that we have trillions of brain cells, resulting in thousands (if not millions) of strings of lights (chemical reactions) correlating with our habits in all areas of our life.  In part one, the introduction, we looked at why we need to explore the idea of rewiring the brain. In my opinion I want to be able to get out of depression easier and cope better with anger, stress and anxiety. I want to let go of unhealthy behaviors. The idea is to make me healthier so that I can be more productive, approachable and calmer. I want to get out of the victim role where there is blame and disadvantage and into the creator role where I use my circumstances to my advantage to control my present destiny. I was captivated by an article titled \"5 Ways to Rewire Your Brain for Meaningful Life Changes\". It's about activating neuro pathways to create new neural networks in the brain. My article is a summary of the original for documentation purposes and adaptation of my understanding of the content as best I can.  Activate pathways Dr. Hilary Stokes wrote that Neuroscientists have discovered the strategy for rewiring the brain. According to her post five neuro pathways must be activated in order to create new neural networks in the brain. 1. Identify the beliefs that support your intention You need to believe that it is actually possible to change your behavior in a certain way. If you don't believe it is possible, you cannot change.  What are your beliefs regarding the particular behavior? Identify the beliefs that make it possible to change your behavior. Make these beliefs your intention.  Example: When someone is questioning Jane, she gets defensive because she feels interrogated and makes her feel threatened. Those are her beliefs. She could identify that not all questions are interrogations and that she doesn't have to feel threatened. She can use this to her advantage and as her intention to not get defensive the next time she is questioned but she must believe it. 2. Embrace your strong positives emotions Neutral emotions don't have enough power to induce change. If you are feeling a strong enough emotion, use it as fuel to change your behavior.  What emotions do you feel that drive the need to change your behavior? Why is this meaningful to you? Spend time with the emotion while you focus on your intention.  Example: Jane feels embarrassed by her defensive reaction. She gets angry, lashes out which only results in negative responses back at her. It's meaningful to her to change her behavior because she wants to be more approachable, calm and relaxed in a conversation. She can reflect on this meaning with her emotions so that she can reinforce her intention. 3. Visualize Your brain is awesome but filled with trickery. Imagination can become reality. You can use this to your advantage to train your brain into new habits by mentally rehearsing them. This strengthens the ability to form new habits.  What imagery aligns with changing your behavior? Visualize them daily  Example: Jane could imagine being questioned by a colleague. She could imagine different types of questioning styles specifically the ones that make her defensive. She could visualize scenes where she responds to these questions in a more approachable manner. 4. Take actions that support your intention Your behavior must align with your vocabulary. You need to fully believe your actions. You need to identify what actions are aligned with your thoughts and emotions. Example: Jane cannot say that she will be approachable but when asked questions become defensive. Her behavior must mimic her intention through practice. If she gets it wrong, she can reflect and introspect to determine what she needs to do to get it right. 5. Repeat, repeat, repeat You need to practice your new habit daily or you will fall back to your old ways.  Do this consciously (mindfully) and daily Practice thinking, feeling, visualizing and acting in alignment  Example: Jane needs to be fully present in the moment of the conversation. She needs to be aware of her body language, posture, vocabulary and tone. Her responses need to be as calm as possible and she must be aware of the triggers that induce her rage. Through activating the different pathways and by practicing her intent she could succeed at breaking away from this behavior she chooses to change.  Dr. Hilary Stokes continues to say that the key is to activate as many of these pathways as possible given they work synergistically. One pathway is not enough to rewire your brain. You need to repeatedly align your beliefs, feelings, vision, and actions to experience lasting changes in your brain. My final thoughts Dr. Hilary Stokes' article is powerful and elaborate. I encourage you to read it. Using the techniques could be beneficial although I have not yet tried them consciously myself. I see the five steps in the form of questions that I can use to explore and activate my own pathways.  What do I believe about my current behavior? How do I leverage strong associated emotions to make a change? What can I visualize to integrate this change into my life? What must I actually do to integrate this change? How can I fully believe in this change and repeatedly practice it?   References  5 Ways To Rewire Your Brain For Meaningful Life Changes, MindBodyGreen, Dr. Hilary Stokes "},{"slug":"/blog/rewire-your-brain-part-3-distress-tolerance/","title":"Rewire your brain (Part 3) - Distress tolerance","tags":["Mindset","Productivity"],"html":" Oliver Goldsmith says that the mind is ever ingenious in making its own distress.  In Part 2 we looked at how we can activate five neuro pathways in order to create new neural networks in the brain. This technique helps us rewire the brain to change our behavior. In Part 3 we will focus on Distress Tolerance. This skill also helps to improve our behavior by introducing skills that help us cope under distress. It is useful in a crisis or bad situation where emotions are overwhelming. The skills help us cope and survive the situation so that we can tolerate both the physical and emotional pain that we experience. Distress Tolerance is a module in Dialectical Behavior Therapy (DBT). According to behavioraltech.org, DBT is a cognitive behavioral treatment that was originally developed to treat chronically suicidal individuals diagnosed with borderline personality disorder (BPD) and it is now recognized as the gold standard psychological treatment for this population. They go on to say that research says it is effective in treating other disorders such as substance dependence, depression, post-traumatic stress disorder (PTSD), and eating disorders.  I believe that Distress Tolerance offers essential life skills. It empowers you to cope with simple or complex day-to-day challenges. It is a great tool to use on your self improvement journey.  These skills don't teach us to change the situation. We just accept that it is the way it is because of a lot of shit that happened leading to that moment. We learn to tolerate the overwhelming emotions and minimize the suffering. Through deliberate practice, I believe that the more this skill is exercised, the more automatic it becomes, thus our brains are rewired to minimize suffering.  We don't know when we are going to hurt and sometimes it's outside our control. Let's see how we can cope with the bullshit that comes our way. Firstly, from my perspective, if you ever played Diablo 3, you will be familiar with the Inferno level‚Äî the hardest difficulty level in the game. Well, I experience my pain on Inferno level. My physical and emotional pain is so overwhelmingly painful that I obviously can't think straight in that mindset. This leads to the inability to create solutions to the challenges I am facing. It also leads to awkward reactions and regrettable behavior. Self-destructive coping mechanisms Self-destructive coping mechanisms is not how we should deal with the bullshit that comes our way, but in many times it's the only way we know how to cope. Let's make up a scenario. Alex gets into a fight at work about something miniscule. This fight leaves him drained and desperately wanting to binge on some crisp beers in his fridge at home. He drives home thinking about how he could have changed Ryan's perspective or how he could have handled the situation better. Alex is still angry and traffic is a bitch. He curses, swears and flips off other drivers while he critically dwells on the situation. He starts to fear that it may impact his position at work and gets anxious for the next day. Finally he gets home and hits the wall as hard as he can with his fist. The wall doesn't crack under his force and he starts drinking beer after beer alone at home not wanting to see other people. Now he has a semi-broken fist and a monstrous hangover to start a new day.  Strategies such as dwelling on the past, being anxious about the future, isolation from others, taking frustrations out on others, substance abuse, self-harm, and so on, are all self-destructive coping mechanisms. These mechanisms only deepens the pain both physically and emotionally and come at a negative cost. Think about it. If you are obsessively dwelling on the past, you are missing out on what is happening right now. You miss out on all the good things happening at this moment. You stay stuck and depressed on past things that you cannot change and later regret that you got stuck and depressed and missed out on now. It's a negative reinforcing loop. What are your self-destructive coping mechanisms? Think about the cost it has on your relationships, career, health, wealth and your mindset. Become aware of the dangers that unfold when leveraging these self-destructive coping mechanisms. We need to replace these bad coping mechanisms with something more healthy. Radical acceptance We can cope with the bullshit that comes our way by changing our attitude. Instead of reacting by getting angry, upset, blaming someone or something, or criticizing yourself for causing pain; you can radically accept the situation. That means that:  You should acknowledge the situation you currently find yourself in. Don't judge the event or criticize yourself. Recognize that the situation exists because of a lot of shit that happened in the past leading up to this moment.  You cannot change what is outside of your control. You can control your actions, behavior and attitude. Blaming others or the situation and getting angry doesn't alleviate your pain and suffering. It just makes it worse because you can't change it. Another negative reinforcing loop exists here. Poor solutions come from being blinded by rage. It doesn't mean that you agree with or condone the bad behavior of others or the circumstances, it just stops you from trying to change what you cannot. You minimize the suffering by refocusing your attention on what you can do now. This can help you think more clearly and figure out a better way to cope. Tell yourself phrases like:  This is the way it has to be It's no use fighting the past The present is the only moment I have control over This moment is exactly as it should be, given what‚Äôs happened before  Distraction plan You can temporarily distract yourself from the overwhelming pain. Focus on something that can help you calm down. It's like those silly calm down posters, like the one on the left. Distraction skills can help you formulate a plan to deflect the pain and discomfort you feel at that time. Choose activities that work for you so that you can use them when you find yourself in dire straits. The idea is not to avoid the challenges you are facing, rather to get your mind to a place of clarity and focus. This will help you find better solutions to the challenges and behave or react in a healthier way.   Distract yourself from self-destructive behaviors Instead of hurting yourself try techniques like squeezing an ice-cube, screaming into a pillow or while you're alone in your car, snap a rubber band on your wrist, write hate letters to people and throw them away, throw socks or paper balls as hard as you can on a wall or cry. Try any technique that you can think of, or Google, that will alleviate the pain without you physically harming yourself.   Distract yourself with pleasurable activities Do something that makes you feel good such as exercise, a walk in the park, stretch your muscles, play video games, go to the movies, make your favorite food, watch something silly on YouTube, get a massage, sit in the garden, read a good book, do something nice that you have been putting off, take a bubble bath. Whatever your flavor of pleasurable things to do, try doing one to take your mind off things allowing yourself time to cool down.   Distract yourself by paying attention to someone else Do something for someone else like seeing if a friend or family member needs help with something or volunteer somewhere. Take the attention off yourself. You can be creepy and go to a public place like a mall and watch what other people are doing, what they're wearing, how they are walking and what they are saying. Think about someone you care about. If you had to talk to them now, what would they say to you?   Distract your thoughts We can't control what thoughts our brains conjure up for us. The more attention we give it, the more it stays. The harder we try to forget about it, the same applies. When we get stuck in a negative thought pattern it keeps us stuck. We want to get out of the unhealthy beliefs of ourselves, others and the world. To distract our thoughts we can try think of other memories or creative images. Try picture pleasant events from the past or imagine a calming fantasy place. Do this in detail. What detailed imagery do you see? What does it look like? What colors do you see? Who is with you? What do they look like? What smells are there? What sensations are you experiencing?   Distract yourself by leaving Sometimes we forget that we can exit a situation. If it is a heated conversation with a colleague or loved one and you aren't coping, tell the person that you need to step out. Give them an idea when you will be back so that you manage their expectations. If you are in a meeting and your emotions are flaring up, your contribution won't be healthy. Politely excuse yourself from the meeting and return when you have calmed down. If you are working on code that isn't compiling or working the way you intended and find yourself getting frustrated, get up and clear your mind. It's also wise to get two or more developers to work with you so that you can conquer the problem as a collective. If you are in a place waiting for service which is taking too long, instead of getting angry, simply leave. You can always come back later if you so choose.   Distract yourself with tasks and chores Take the time to complete chores or things on your TODO list like doing the dishes, cleaning your room, redecorating, cleaning out your closet, organizing or calling someone you haven't called in a while.   Distract yourself by counting This is a simple skill that can keep your mind busy. You can count your breaths by breathing deeply; count cars, people, sounds, sensations, clouds; or count or subtract in increments of a number greater than 1.   Relaxation plan When you are relaxed, your body feels good. Your heart beats slowly and your blood pressure is reduced. You are no longer in survival mode or in a state of emergency panicking about facing or fleeing the situation. When you are relaxed, your brain is in a healthier state to cope with the challenges that you face. The activities below are indented to relax and soothe you. Find what works for you with your senses: smell, sight, hearing, taste and touch; it needs to introduce peace and serenity in that moment. The activities you choose will formulate your relaxation plan that you can refer to when you find yourself in a pickle. It's wise to formulate two: one for at home and one outside of home.   Smell Find smells that trigger good memories or make you feel good. You can burn scented candles or incense; use scented oils; perfumes/colognes; go somewhere with pleasing scents; bake; lie down in the park; buy flowers; or hug someone who smells good.   Sight Apparently a large portion of our brain is devoted solely to our sense of sight so what you look at can have powerful effects on you. That means that you can soothe yourself by finding images that have that effect on you. You can find them in magazines, go to places, draw or paint your own or use a photograph. You can also use cards with meaningful quotes or text on them. Some key rings come in the form of small booklets with inspirational messages in them.   Hearing Listen to music that soothes you, not music that reinforces how you are currently feeling. It creates a negative reinforcing loop which sucks you in deeper. You can listen to white noise; classical, relaxation or meditative music; music for developers; coffee shop noises; go to a place with peaceful sounds like the Botanical Gardens or a day spa; nature sounds or ambiance.   Taste Get in touch with tastes that ignite pleasant memories or make you feel good. Try not to over-indulge as it may result in regret, guilt and shame. Eat your favorite meal or snack; carry your favorite sweets with you; eat ice cream, chocolate, pudding, fruit; or have a soothing hot beverage. Taste each bite (or sip) as you chew (or sip) slowly to enjoy it to its fullest.   Touch We touch a lot of things each day. As our largest organ is our skin we can use this to our advantage when we need to soothe ourselves. Carry something you enjoy the touch of like something soft, fluffy or velvety; enjoy a hot or cold shower where the water trickles on your skin; have a warm bubble bath with scented oils, candles and dimmed lights where you enjoy the bubbles popping gently on your skin; get a massage and enjoy the sensation that activate and relax your muscles; or simply wear clothes that you feel comfortable in.   My final thoughts Through Radical Acceptance, Distraction Plans and Relaxation Plans we are one step closer to properly coping. DBT offers other modules that cover coping mechanisms such as emotion regulation skills, mindfulness skills, and interpersonal effectiveness skills. Identify negative coping mechanisms and avoid self-destructive behaviors so that you break the negative reinforcing loop. Accept that you can't change the past - radically accept the situation for what it is and come to terms with the fact that you can't change what has happened leading up to the situation. You can only control how you react in the circumstances. Distract. Relax. Cope.  Distract yourself temporarily from the overwhelming emotional pain. Relax and soothe yourself so that you are in a better frame of mind. Cope with the emotion to influence healthy behavior or reaction.  The more these steps are followed the more I believe our brains will be rewired to better deal with painful situations thus lowering the amount of suffering that we typically endure.  Credit: This post is a summary of the Distress Tolerance chapter in The Dialectical Behavior Skills Workbook listed in the references below. You can buy it on Amazon and Google Books.  References  DBT, What is DBT?, The Linehan Institute, Behavioral Tech Research Behavioral Tech, The Linehan Institute, Behavioral Tech Research The Dialectical Behavior Therapy Skills Workbook, Practical DBT exercises for learning Mindfulness, Interpersonal Effectiveness, Emotion Regulation and Distress Tolerance by Matthew McKay, PH.D, Jeffrey C. Wood, Psy.D, Jeffrey Brantley, MD The Secret of Becoming Mentally Strong, Amy Morin, TEDxOcala Music for developers, musicForProgramming.net - A series of mixes intended for listening while '+task+' to aid concentration and increase productivity (also compatible with other activities). Coffee shop noises, Coffitivity recreates the ambient sounds of a cafe to boost your creativity and help you work better. Nature sounds or ambiance, Calmsound - Free nature sounds, the oasis of relaxation. "},{"slug":"/blog/rewire-your-brain-part-4-childhood-survival-rules/","title":"Rewire your brain (Part 4) - Childhood survival rules","tags":["Mindset","Productivity"],"html":" Virginia Satir says that you have learned what you have learned very well. It has helped you survive.  In Part 3, Distress Tolerance, we learned how to \"Distract. Relax. Cope.\" We identify negative coping mechanisms and avoid self-destructive behaviors so that you break the negative reinforcing loop. Through Radical Acceptance, Distraction Plans and Relaxation Plans we are one step closer to properly coping.  Parents aren't handed instruction manuals. They just have to try. They need to do the best they can, the way they know how, and with all the help they can get.  Feelings of worth can flourish only in an atmosphere where individual differences are appreciated, mistakes are tolerated, communication is open and rules are flexible - the kind of atmosphere that is found in a nurturing family. ~ Virginia Satir  I believe there will always be some form of dysfunction in a child's upbringing no matter how hard a parent tries to save their child from emotional harm. There will be arguments, disagreements, fights. Not only parents impact a child. School peers and friends, bullying and other outside influences all play a role.  Every word, facial expression, gesture, or action on the part of a parent gives the child some message about self-worth. It is sad that so many parents don't realize what messages they are sending. ~ Virginia Satir  While growing up we form our own identity with thoughts and feelings that malleably take shape and change as we age. I believe that subconsciously they become concrete and automatically interact with us daily. Childhood survival rules As we grow up, we learn to do things that help us survive like double checking the road for cars before crossing. At one stage we need to hold the hand of an adult. Later we grow to realize that we can cross on our own. As adults, we may discover behaviors, thoughts, beliefs and relationships that are detrimental to our well-being. Perhaps it was through a realization, an introspection or a significant event causing immense emotional pain. Maybe we believe these are vital to our survival until we start questioning if these beliefs are actually still valid. We may need to make changes which can be hard for us because change doesn't always come easy. We may resist and want to go back to a place of familiarity where we are comfortable even if there is pain involved. Assessment Recently I noticed that when I am eating, I need to finish everything on my plate, even if I am full. I started interrogating this belief and realized that it stems from childhood where my parents told me how other people are starving in this world so I must finish my food. This was causing me to overeat especially if I did not dish up for myself. I decided to change the rule. If I didn't dish up myself, I will not force myself to finish the plate of food. So watch out for these, often subtle, childhood survival rules, and decide if it still applies to you in you current day. Maybe it's something small or maybe the behavior is actually self-destructive or causing self-harm. These behaviors will be controlled by the automatic part of your brain so you may not be consciously aware of it. When you are, you can start to actively work on it by rewiring you brain into a new habit or replacement behavior to break the feedback loop. Change 1. Identify it When you do something try question it and see if it is still a relevant behavior you need to continue. Perhaps you work really long hours at work and you are not getting enough rest. You could be burning out. 2. Analyze it Consider why you are doing it. Where does this behavior come from? Is it harming you in some way? As software developers we do need to work extra hours. When you do it out of your own free will, what are you trying to achieve? Perhaps you grew up believing that the harder you work the more successful you become. 3. Is it a harmful response? Scrutinize the dangers of the behavior. Does it negatively affect you or people around you? Downtime is essential to productivity and you are missing out on it. Is it really constructive to continue working to your own detriment? 4. Does it benefit you today? Perhaps there was a time that this was working really well for you and you could see the benefits even if it was harmful to you. Let's say you were studying and put in as many hours as you could to come out top of your class. This was beneficial to you but you were probably left feeling exhausted. In your current space, working longer hours probably doesn't benefit you much now because you are tired for work, your social life takes strain and it can impact your close personal relationships not to mention your own productivity, physical and psychological well-being. 5. How can you change it, if you need to? If you are serious about improving your well-being and see a need to change this behavior, think of ways that you could change it. They can be subtle changes over time to improve yourself. Drastic changes may cause anxiety and make you relapse to old ways. Perhaps you could start working an hour less a day for a week or so and reduce it further until you get to the standard working hours. With extra time on your hands you need to find something that you enjoy doing in your spare time so that you don't get frustrated. You also need to learn how to relax in your spare time and really rejuvenate yourself.  Problems are not the problem; coping is the problem. ~ Virginia Satir  My final thoughts We learn things to survive over time which won't always apply to our current day. Back in the day we needed to learn how to flee from scary beasts and fend for ourselves by hunting for food and keeping warm. Nowadays we need to survive in a digital age where we are all connected and need to learn how we can survive in a world of business which can be just as cutthroat as the wilderness. Identifying childhood survival rules, analyzing them and deciding if they are beneficial today and changing them is an interesting way of rewiring your brain to change behaviors of things that simply no longer apply."},{"slug":"/blog/rewire-your-brain-part-5-the-satir-change-process-model/","title":"Rewire your brain (Part 5) - The Satir Change Process Model","tags":["Mindset","Productivity"],"html":" Virginia Satir says that we can learn something new anytime we believe we can. Therefore we can learn to cope with what we are dealing with by readjusting the way we think.  In the part 4, Survival Rules, we look at how we can identify childhood survival rules, analyze them and decide if they are beneficial today. Changing them is an interesting way of rewiring your brain as we change old behaviors as these rules no longer apply to the current day.  This model was developed by the \"Mother of Family Therapy\": Virginia Satir 1. It can improve your life by transforming the way you see and express yourself 2. This model shows how you will predictably move through different stages as you cope with unexpected and significant or major changes 3. It also describes the effects each stage has on your feelings, thinking, performance and physiology. The principles in this model can help you improve how you process change 2. Source of image: Flicker. This illustration is adapted from the book Management 3.0.  Life is not what it's supposed to be. It's what it is. The way you cope with it is what makes the difference. ~ Virginia Satir  The Late Status Quo This stage describes your ordinary day-to-day. Although your feelings can fluctuate you are still in familiar territory like pieces of a puzzle fitting together. You are used to how things work and flow in this stage. Emotions may be fluctuating from comfort, contentment, happiness, excitement, to discomfort, dissatisfaction, unhappiness and depression or anxiousness. The Foreign Element All of a sudden something needs to change. Your expectations are challenged. Your familiarity is now shaken up due to unexpected information, a significant event, invalidated assumptions or maybe the realization that something you have been doing your whole life needs to change. Chaos Now you are outside your comfort zone in a big unknown mysterious place. You are in an unpredictable unfamiliar territory. This can be very scary by also offer some creativity. So it may feel unsafe. You may feel strong emotions which may confuse you:  Stress Confusion Discomfort Pain Fear Excitement Euphoria Strong sense of urgency  You could behave in ways that are unfamiliar to you:  Trying to stay in control Disengaging and retreating to some familiar activity Focusing on one small part of the problem Ignoring the chaos happening around you Scrambling to find information about what is going on  This stage is vital to the transformation process so acknowledge your feelings and build and use support systems. It can be very creative and a lot of ideas can be generated here. The Transforming Idea A powerful idea generated in the Chaos stage could lead to the transformation process which sheds light on the change and helps you understand it more and cope with it. This is the AHA! moment. You may not know it is a transforming idea so just try it and see what happens. If it's not, try something other AHA! Practice and Integration The more you practice this new behavior extracted from your transforming idea the more you integrate it into your life. It is a learning phase that allows for mistakes so your progress may ebb and flow. You have the opportunity to decide what is working and what isn't which makes you more skilled and hopeful as you continuously learn. The New Status Quo Once you have fully absorbed the change you become more healthier, calmer and alert. You need to continue feeling safe in this space by practicing. Emery sums it up elegantly by saying that:  You feel good about how rapidly you are learning. You turn your attention toward other important areas of your life, armed with new skills, knowledge and confidence. Eventually these new skills become second nature. Your learnings become assumptions and expectations. With time, the newness fades, and the New Status Quo becomes a Late Status Quo. And the change cycle begins again. Source of image: Corporate Programmer My final thoughts This model can be used for any self-improvement need. Instead of tracking performance, you could be tracking quality of life over time. Our survival rules are deeply ingrained into us and we can pinpoint them, analyze them and decide if we still need it or not. If we don't need it, we can change it and this is just one model of how we can do so through reflection. We don't want behaviors that cause:  Exhaustion Misery Lack of focus and concentration Lack of self-care Lack of social interaction Lack of physical activity Problems with relationships Impending burn-out  There is a lot of material out there describing the model in detail. I just wanted to document the idea as a model to help rewire the brain to transform unhealthy behaviors to more positive behaviors. These stages show how a change can impact us and how we can get to a point where we can thrive.  References  Virginia Satir, Wikipedia (Navigate back) The Satir Change Model, Steven M. Smith, Accelerating Team Productivity (Navigate back) Managing Yourself Through Change, Dale H. Emery, Consultant to Software Teams and Leaders (Navigate back)  Resources  Framework 59 Virginia Satir Change Process, Organisational Change Management Volume 1, Bill Synnot and Associates Virginia Satir Change Curve, Flicker, Jurgen Appelo says this illustration is part of the book Management 3.0 Chaos during change ‚Äì don‚Äôt try to avoid it, manage it You Can't Fight Change Stress Is Needed For Success In NYC Think Visually When Building an Agile Enterprise Change Plan  Icons made by Freepik from www.flaticon.com is licensed by CC 3.0 BY"},{"slug":"/blog/rewire-your-brain-part-6-neuroplasticity/","title":"Rewire your brain (Part 6) - Neuroplasticity","tags":["Mindset","Productivity"],"html":" Lara Boyd challenges us by asking how do we learn? And why does some of us learn things more easily than others?  In the part 5, The Satir Change Process Model, we looked at how the model can help transform unhealthy behaviors to more positive behaviors by working through the different stages of how we cope with change. These stages show how a change can impact us and how we can get to a point where we can thrive.  Neuroplasticity1 is the ability of the brain to form and reorganize synaptic connections, especially in response to learning or experience or following injury. ‚ÄòNeuroplasticity offers real hope to everyone from stroke victims to dyslexics‚Äô If we look at the term plasticity on it's own it means that something can easily be shaped or moulded. In biology, it means that organisms can change in its environment or different various habitats. Debbie Hampton defines it as the umbrella term referring to the ability of your brain to reorganize itself, both physically and functionally, throughout your life due to your environment, behavior, thinking, and emotions 2. She further shares her understanding by stating that the adult brain isn't a static or hard-wired organ. This means that you are not \"stuck\" with the brain that you are born with 3. She mentions that it helps people recover from:  A stroke, injury and birth abnormalities Improve symptoms of autism Improve ADD and ADHD Helps with learning disabilities and other brain defects Pull you out of depression and addictions Reverse obsessive-compulsive patterns   Among other things, neuroplasticity means that emotions such as happiness and compassion can be cultivated in much the same way that a person can learn through repetition to play golf and basketball or master a musical instrument, and that such practice changes the activity and physical aspects of specific brain areas. ~ Andrew Weil, Spontaneous Healing  She has discovered the powers of it first-hand by performing her own home-grown, experience-dependent neuroplasticity-based exercises for years to recover from her trauma. She also incorporated extensive practices to encourage neuroplastic change:  Cognitive Behavioral Therapy (CBT) 4 Meditation 5 Mindfulness 6  Fundamentals This list is merely a paraphrased summary of Debbie Hampton's list as I am new to this concept. For a more elaborate scientific list check out her article Ten Fundamentals Of Rewiring Your Brain 2.   Be in the right frame of mind to make a change. Your mood affects the brain release of neurochemicals. If you are in the right frame of mind then you would probably be actively engaged in what you are doing.   Focus intensely By actively being engaged in what you are trying to master, you need to focus intensely on what you are doing to help you experience a greater change.   Practice. The more you practice this change, moment by moment, in time, the more you strengthen the connections of your neurons.   Learning-driven changes. Cell-to-cell cooperation is crucial for increased reliability. Learning- driven changes increases this cooperation. Merzenich says that the more powerfully coordinated your nerve cells are, the more powerful and more reliable their behavioral productions.   Create a conscious flow of behavior. The brain strengthens its connections between teams of neurons representing separate moments of successive things that reliably occur in serial time. This allows your brain to predict what happens next and have a continuous ‚Äúassociative flow‚Äù instead of a series of separate, stagnating events.   Initial changes are temporary. Your brain experiences that change and decides if it must be permanent but it only does this if the experience is fascinating or novel enough.   Mentally rehearse your change. The brain is changed by internal mental rehearsal in the same ways and involving precisely the same processes that control changes achieved through interactions with the external world. According to Merzenich, ‚ÄúYou don‚Äôt have to move an inch to drive positive plastic change in your brain. Your internal representations of things recalled from memory work just fine for progressive brain plasticity-based learning.‚Äù   Memory guides and controls most learning. As you learn a new skill, your brain takes note of and remembers the good attempts, while discarding the not-so-good tries. Then, it recalls the last good pass, makes incremental adjustments, and progressively improves.   Take time to learn. Every movement of learning provides a moment of opportunity for the brain to stabilize ‚Äì and reduce the disruptive power of ‚Äì potentially interfering backgrounds or ‚Äúnoise.‚Äù Each time your brain strengthens a connection to advance your mastery of a skill, it also weakens other connections of neurons that weren‚Äôt used at that precise moment. This negative plastic brain change erases some of the irrelevant or interfering activity in the brain.   It can be healthy and unhealthy. Brain plasticity is a two-way street; it is just as easy to generate negative changes as it is positive ones. You have a ‚Äúuse it or lose it‚Äù brain. It‚Äôs almost as easy to drive changes that impair memory and physical and mental abilities as it is to improve these things. Merzenich says that older people are absolute masters at encouraging plastic brain change in the wrong direction.    Pushing our self past our boundaries of limitation and extreme, sometimes to something that knocks off our comfort zone, it creates new neuro pathways with our brain, we become smarter, wiser, more clarity, our life becomes more fulfilling. Only because we have a totally new experience. We get a new brain with that. Neuroplasticity ~ Angie karan  My final thoughts Here we can see how the chemicals of the brain can change. Changes can be short-term (chemical), medium term (structural) and long term (functional) 7 and the effects can be introduced in many ways to make these changes. I specifically focused on Debbie Hampton's research and knowledge on this topic as this topic is exceptionally broad and offers a variety of techniques to rewire one's brain. References  Neuroplasticity, English Oxford Dictionaries Ten Fundamentals Of Rewiring Your Brain, The Best Brain Possible, Debbie Hampton, October 4, 2015 You‚Äôre Not Stuck With The Brain You Were Born With, The Best Brain Possible, Debbie Hampton, September 14, 2014 Can We Talk?, The Best Brain Possible, The Best Brain Possible, Debbie Hampton, September 8, 2014. Focusing on Cognitive Behavioral Therapy. You Are Not Your Thoughts, The Best Brain Possible, The Best Brain Possible, Debbie Hampton, September 8, 2014. Focusing on Meditation. The Meaning Of Mindfulness, The Best Brain Possible, The Best Brain Possible, Debbie Hampton, September 8, 2014. Focusing on Mindfulness.  7 After watching this, your brain will not be the same TEDxVancouver, Lara Boyd, Brain Researcher"},{"slug":"/blog/rewire-your-brain-part-7-our-habits/","title":"Rewire your brain (Part 7) - Our habits","tags":["Mindset","Productivity"],"html":" Germany Kent says that it's a funny thing about life, once you begin to take note of the things you are grateful for, you begin to lose sight of the things that you lack.  In the part 6, Neuroplasticity, we looked at how the chemicals of the brain can change. Changes can be short-term (chemical), medium term (structural) and long term (functional) and the effects can be introduced in many ways to make these changes. I specifically focused on Debbie Hampton's research and knowledge on this topic as it is exceptionally broad and offers a variety of techniques to rewire one's brain.  Our actions create reinforcing loops through our behavior. In this post I want to focus on unhealthy loops and what habits we can implement in order to improve our quality of life and help break these loops. Prioritize sleep This is probably the most important habit as it impacts our health and well-being. According to the National Heart, Lung and Blood Institute (in Feb 2012), ongoing sleep deficiency is linked to an increased risk of heart disease, kidney disease, high blood pressure, diabetes, and stroke. Let's take a simple example. I have a fear of missing out or what people these days call FOMO. So I tend to fight sleep. Obviously I wake up feeling exhausted the next day and don't get to enjoy it to its fullest because I'm tired. Source of image: Corporate Programmer Sleep should be a priority. It affects physical health and daytime performance and safety. It's suggested that adults get at least 7 to 8 hours sleep a day with a proper sleep-wake rhythm, so in other words a proper sleep routine that is consistent. This will make you feel more refreshed and allow you to enjoy your day better. I use a really cool Android app called Sleep as Android to monitor my sleeping patterns and play a lullaby (thunderstorms) to help me fall asleep. Make good life choices Another example can be the struggle to make good decisions. You're indecisive so you go back and forth trying to make a decision. The decision you make, you overthink thus ending up overwhelmed and then following the herd instead of going on what you think is right. It's important to be objective and look at the facts - consider all angles but make a choice. Source of image: Corporate Programmer  Formulate your own opinions and decisions Don't mistake opinions as facts  Exercise regularly Apart from improving quality of life, physical activity has immediate and long-term health benefits like reducing the risk of developing several diseases. Source of image: Corporate Programmer Aim for at least 30 minutes of physical activity every day. See everyday activities as a good opportunity to be active. Try to find the time for some regular, vigorous exercise for extra health and fitness benefits. Minimize the amount of time spent in prolonged sitting and break up long periods of sitting as often as possible. Other habits Over and above negative reinforcing loops it's important to  Drink water Set up a routine Self reflect Journal Be mindful - don't focus on the past problems or future worries Meditate Practice gratitude Read Listen when people are talking Practice self control Try to achieve your goals even when you hit a roadblock Value solitude Learn to say \"no\" Create a balance in your life   References  Why Is Sleep Important?, NHLBI, NIH (National Institutes of Health, National Heart, Lung and Blood Institute). Last updated February 22, 2012. Strategies for Getting Enough Sleep, NHLBI, NIH (National Institutes of Health, National Heart, Lung and Blood Institute). Last updated February 22, 2012. Sleep as Android, Google Play Store. Urbandroid Team. Editors' Choice. Smart alarm clock with sleep cycle tracking. Wakes you gently in optimal moment for pleasant mornings. If You Have These 8 Habits, You're More Likely to Make Terrible Decisions Than Others, Lifehack, Ryan Ayers The Habits Of Supremely Happy People, The Huffington Post, Kate Bratskeir. Last updated October 7, 2015 22:59 SAST. Everyday Tips for Living With Bipolar Disorder, WebMD Medical Reference. Reviewed by Joseph Goldberg, MD on September 16, 2016. 10 Life-Chaning Reasons to Drink More Water, Breaking Muscle HQ Physical activity - it's important, BetterHealth Channel 18 habits of highly successful people, Business Insider, Shana Lebowitz, December 30, 2016 "},{"slug":"/blog/rewire-your-brain-part-8-conclusion/","title":"Rewire your brain (Part 8) - Conclusion","tags":["Mindset","Productivity"],"html":" Page 172 of the book Rewire: Changing Your Brain to Break Bad Habits, Overcome Addictions, Conquer Self-Destructive Behavior written by psychotherapist Richard O‚ÄôConnor says that whatever we pay attention to determines how our brain grows.  This post concludes the series \"Rewire Your Brain\". What a journey. I originally started this series to help me overcome some pressing personal issues. A lot of what I have written and researched has given me hope. What I can say is that it is tremendously &#x3C;insert profanity here> difficult to practice this. With time and practice I believe that it can be very helpful in creating a healthier brain overall. A summary of the series includes: Introduction We looked at why we need to explore the idea of rewiring the brain. In my opinion I want to be able to get out of depression easier and cope better with anger, stress and anxiety. I want to let go of unhealthy behaviors. The idea is to make me healthier so that I can be more productive, approachable and calmer. I want to get out of the victim role where there is blame and disadvantage and into the creator role where I use my circumstances to my advantage to control my present destiny. I was captivated by an article titled ‚Äú5 Ways to Rewire Your Brain for Meaningful Life Changes‚Äù. It‚Äôs about activating neuro pathways to create new neural networks in the brain. My article is a summary of the original for documentation purposes and adaptation of my understanding of the content as best I can. Read more Activate Neuro Pathways We looked at how we can activate five neuro pathways in order to create new neural networks in the brain. This technique helps us rewire the brain to change our behavior. Read more Distress Tolerance We learned how to ‚ÄúDistract. Relax. Cope.‚Äù We identify negative coping mechanisms and avoid self-destructive behaviors so that you break the negative reinforcing loop. Through Radical Acceptance, Distraction Plans and Relaxation Plans we are one step closer to properly coping. Read more Childhood Survival Rules We look at how we can identify childhood survival rules, analyze them and decide if they are beneficial today. Changing them is an interesting way of rewiring your brain as we change old behaviors as these rules no longer apply to the current day. Read more The Satir Change Process Model We looked at how the model can help transform unhealthy behaviors to more positive behaviors by working through the different stages of how we cope with change. These stages show how a change can impact us and how we can get to a point where we can thrive. Read more Neuroplasticity We looked at how the chemicals of the brain can change. Changes can be short-term (chemical), medium term (structural) and long term (functional) and the effects can be introduced in many ways to make these changes. I specifically focused on Debbie Hampton‚Äôs research and knowledge on this topic as it is exceptionally broad and offers a variety of techniques to rewire one‚Äôs brain. Read more Our Habits We looked at how our actions create reinforcing loops through our behavior. In this post I wanted to focus on unhealthy loops and what habits we can implement in order to improve our quality of life and help break these loops. I also summarized some of the habits successful people incorporate in their lives. Read more I do hope this series has provided some value in your life as it has in mine."},{"slug":"/blog/defusing-stressful-emotions/","title":"Defusing Stressful Emotions","tags":["Mindset"],"html":" Mark Twain said, \"I am an old man and I have known a great many troubles, but most of them never happened.\"  It‚Äôs unsustainable to experience many days feeling exhausted, uninspired and anxious. I believe the biggest contributing factor is superficial stress. Stress that is self-made and becomes unbearable because we make it so. Let‚Äôs say you need to take your car for a service but you are running late because there is a queue. Your anxiety starts shooting up because you are running late for work. The attendant slowly checks the car for scratches and your patience is thinning. You become snappy and have to wait for a way back to the office. After getting stuck in five minutes traffic you are fuming and want to loose your shit. Maybe you do. Maybe you don‚Äôt. The thing is, you could have avoided the stress and anxiety in many ways. Contact your boss or manager to let them know the situation. You can make alternate arrangements for time off work. That one event can set the tone of the rest of your day. I have gathered some techniques which I try incorporate in my personal and work life to defuse and better handle stressful emotions. Question the unknown When dealing with unknown situations I ask myself three simple questions: What do I think is the worst possible realistic outcome of the situation? How will I feel about it? What will I do about it? Present in the moment I practice mindfulness by focusing on the present so that my intentions are deliberate and I am not thinly spread. I am more focused, productive and have more time. Aware of triggers Being aware of my reactions empowers me to discover triggers which I can use to break the negative reinforcing loop. This improves the behavior over time giving me more control over it. Distract When things are going south fast, a distraction can always help clear my thoughts. I can politely walk away from a conversation or step out of a meeting: breathe, take a walk, read an article, listen to music, wash my face or grab a cup of coffee. I can re-enter the scenario once I have cooled down. Staying is just going to cause more harm than good. As software developers we have a lot of things that can stress us out from working with different types of people, dealing with conflict (people and merges) and the need to constantly manage expectations to technical related stresses like choosing the right technology, supporting unfamiliar projects and fighting fires in production. When we become stressed and our survival-mode kicks in, our judgements are often flawed and unnecessary mistakes are made. The same can apply for constant worrying as our thoughts take us on a journey of many paths constantly ripping us away from the present. My final thoughts Stress doesn‚Äôt have to consume you. There are simple techniques that we can apply to our daily lives to minimize the impact that it can have on us. Many stressful situations can be defused by taking a breath and objectively thinking about the situation without judgment on yourself or those around you. By being more present in our day, we can be deliberate with our intentions which can make you more productive and aware of the beautiful things around you. By being mindful in my day, I am more at peace. I am more relaxed. I am more awake. I have more time. I am more productive. I am more free. And this makes me happy. References  Headspace, a meditation app Five steps to mindfulness by Thich Nhat Hanh 12 Techniques to stop worrying by Cindy Holbrook Meditation isn‚Äôt about suppressing your thoughts and emotions by J. D. Andre "},{"slug":"/blog/sayonara/","title":"Say≈çnara","tags":["Relationships","Comfort Zone","Personal Brand"],"html":"I've been very quite. A year's worth of quiet to be exact. I'm sorry. I'm still here. I still plan on blogging, just a little differently now and maybe shorter posts.  Writing is hard. Saying goodbye is harder. Writing to say goodbye, for me, is downright a terrible combination. People are like wood, drifting in the rivers of life. We stick together and sometimes drift apart in times of heavy currents. Some confluences we reach in our lives bring about spine-chilling adventures. This is where I courageously doggy paddle with a thumping heart towards my next destination. After spending 4 years at DStv it is with a heavy heart that I say goodbye to - friendly, smart, quirky, silly, funny, sometimes creepy (in a good way of course!), extremely serious and very professional - an array of different types of characters whom I'll miss dearly. I wish you all the best! With over 11 years of .NET experience I leap outside my comfort zone. I will be writing code in a dialect of LISP. A language I wanted to hack around in since 1999. Booya! That said, I leave the corporate world behind embarking on a Clojurist voyage at CloudAfrica (a company that really does do affordable cloud hosting). I am immensely anxious yet fired up by this amazing opportunity I was given. Let the games begin! Kon'nichiwa ‚ô•  Fail! After I got this domain, only then did I Google its name. Obviously it is being used by a few programmers. The funny thing is that I want to focus a lot on Clojure here to document what I am learning along the way. What are the odds: Juraj Martinka beat me to it being the author of Curious (Clojure) Programmer? Sigh! But check it out, it's pretty cool!"},{"slug":"/blog/my-first-week-at-cloud-africa/","title":"My First Week at CloudAfrica","tags":["Mindset","Comfort Zone","Clojure"],"html":"Stay tuned if you are interested to know what I learned, did and achieved in the past week. Maybe something I did could be of interest to you. Only time will tell. Read on. Monday I started the week by saying my goodbyes to the lovely people at MultiChoice. I have learned a great deal over the past four years in the familiar territories of OOP, .NET and Microsoft. I used to be shy nestled away in my own corner building software for small companies. Joining MultiChoice opened me up to working with a diverse crowd of professionals. I became curious about how pieces fit into place so I would visit different teams to find out more. By doing this, I formed strong relationships and got a basic systematic overview of the entire solution and knew who was responsible for what. This gave me the ability to help members of the team to get support for failing systems from the right people. My natural leadership skills started to shine - something I never knew was in me. After a while I needed a change in technology. I started dabbling in Linux and was offered a new challenge in Clojure. So I packed my bags, said my goodbyes and stared my adventure on Tuesday. Tuesday  Knowing that I have to climb a steep mountain, I have been both eager and anxious about going into a domain I know nothing about. I joined CloudAfrica and started the ramp up process. We started setting up my laptop until my hard drive slowed down to a halt because it's old and giving up on life. We sudo'ed into my laptop remotely to copy my /home/ directory over the network hoping that the hard drive wouldn't give in. It worked. I couldn't believe that my entire setup was there just like that. Linux for the win! We got IntelliJ running with the Cursive plugin and then Datomic for the database. We then pulled the project from git, installed its dependencies, setup postgres and got ready to start tinkering. Wednesday On Wednesday I started looking at the website. I stared blankly at libraries and patterns new to me materializing on the screen. I noticed that the powerful thing about these libraries is that I will write them all in Clojure. I don't have to switch between different contexts and languages. Starting with Reagent, I have a library that will let me create React components. It's written in a hiccup-like syntax. Hiccup is just a nifty rendering library converting ClojureScript to HTML. (defn simple-component [][:div[:p \"I am a component!\"][:p.someclass\"I have \" [:strong \"bold\"][:span {:style {:color \"red\"}} \" and red \"] \"text.\"]]) On top of Reagent is the re-frame pattern which is used for writing SPAs. They say that being a functional framework, it is about data, and the functions which transform that data. To make life easier as a developer, Figwheel will build the ClojureScript code and hot reload the browser while coding. As one would want, the browser state is maintained - the page is not refreshed. I spent the day reading up on the technologies and tinkering with the website. I changed some buttons and tried to move a horizontal menu to a left vertical menu. That was more complicated than I originally anticipated. In fact, it felt downright impossible. I dabbled in Semantic UI which is just a development framework to make pretty things. This is what the UI is written in so I had to use the right structure and classes to move the menu into the right position. I got somewhere. I was happy. Thursday I was determined to get that menu to the left! I managed to get it there by moving around a few divs and adding classes where necessary after I knew what I needed to do in the HTML after creating a prototype. I was still playing around when a PINE ROCK64 was placed on my desk and I was asked to set up a monitoring display on a 4K screen. I'll post about those learnings soon but that's not something that happens everyday. That was a lot of fun! At lunch time we attended Jozi Lunch and Learn and got to spend time with Danie Roux and other interesting technologists. Friday I tried to figure out why the PINE was going into power saving mode and why I couldn't change it as I didn't have the privileges to change it. This is still a mystery to me. I also watched two really great Clojure videos:  Introduction to ClojureScript and Reagent Tim Ewald: Clojure - Programming with Hand Tools  Rounding it off That about sums up my first knowledge-packed week. Exhausting. Exhilarating! I look forward to many such weeks ahead."},{"slug":"/blog/my-nomadic-lifestyle/","title":"My Nomadic Lifestyle","tags":["Comfort Zone","Productivity"],"html":"My goal for the next two months is to maximize my learning time and try to keep my anxiety as low as possible by stripping out unnecessary concerns. I made some changes that ripped me outside of my comfort zone that initially made me anxious. This is what I did: Stay closer to work I live in an area where it seems as though the traffic is generated by a large factory producing a massive amount of very slow vehicles. I don't like to drive in traffic. If you do then tell me your secret. I estimated a 40 to 60 minute commute one way because I add drama to my estimates although there could be some truth to it. I'll have to see in the months to come. I decided to trial a variable renting arrangement through an Airbnb solution only minutes away from the offices from Sundays to Thursdays. What a good idea that was! I could wake up much later, get ready and be at work on time - not easy for me to do - to soak up as much knowledge as I can. I'd leave a little later in the evenings but not get home late. I was maximizing my day and getting to do some really cool stuff! Get someone else to drive I get anxious driving in unfamiliar territory. Trying to find parking in a massive parking lot is unpleasant. There are many different parking entrances and I don't know which is which. I still need to explore it. Worrying about the possibility that I forget where I parked my car was another trigger. I chose to Uber on day one. This was luxury. Yes. Luxury. I kind of got addicted so I Uber'ed every day that week. Snap back to reality This nomadic lifestyle is ridiculously awesome but financially unsustainable for me. It's winter. It's cold. I don't have to wake up early to miss the rush hour to get to work on time. I can't leave after rush hour because I will lose out on valuable ramp up time. For now, this solution is spot on! After these two months are up, life goes back to normal. I'll be back at home and joining the daily commute. Until then, I'll enjoy my vacation-like nomadic lifestyle and enjoy less anxiety."},{"slug":"/blog/building-a-monitoring-display-with-a-rock-64/","title":"Building a Monitoring Display with a Rock64","tags":["Technical","Hardware"],"html":"There is a page that we want to monitor. It has a lot of valuable information on it and fits nicely on a 4K screen. A ROCK64 device will power this display. The use case is simple: when the device turns on, the user must log in automatically. A browser must open in full screen mode displaying the page. The screen and device should stay on until manually turned off. Simple right? Not quite. My techie luck brings about numerous adventitious complexities that bounce obtrusively into existence at undesirable times: things just don't go according to plan. I've come to terms with it. Obstacles will be obstacles and they will be overcome. These obstacles were awesome little challenges. I got to hack and ticker away at a little device to achieve something useful and meaningful. I got exposure to the ROCK64, Linux and searching for support for both. Here's what I learned: The ROCK64 device The ROCK64 is a small computer like a Raspberry Pi, Arduino and a gazillion others. It is manufactured to be affordable and extendable. It started in December 2015 as a Kickstarter project. These guys wanted to bring the first 64-bit expandable Quad Core 1.2Ghz board to the market. Initially there were hiccups but they eventually shipped the ROCK64 and a few others. SpecificationsImage from Ping64.org  It has a 4K60P HDR Media Board Computer powered by Rockchip RK3328 Quad-Core ARM Cortex A53 64-Bit Processor and support up to 4GB 1600MHz LPDDR3 memory. It provides eMMC module socket, MicroSD Card slot, Pi-2 Bus, Pi-P5+ Bus, USB 3.0 and many others peripheral devices interface for makers to integrate with sensors and devices. Various Operating System (OS) are made available by open source community such Android 7.1, Debian, Yocto and many more to come. System information While trying to get support and not knowing what the hell I was doing, I needed to learn more about the device, it's kernel, OS and how to use Linux. Here is how I got all that information. Kernel $ uname -a # print all system information > Linux rock64 4.4.77-rockchip-ayufan-136 #1 SMP Thu Oct 12 09:14:48 UTC 2017 aarch64 GNU/Linux  Kernel name: Linux Network node hostname: rock64 Kernel release: 4.4.77-rockchip-ayufan-136 Kernel version: #1 SMP Thu Oct 12 09:14:48 UTC 2017 Hardware platform: aarch64 Operating system: GNU/Linux  Operating System distribution LSB (Linux Standard Base and returns the distribution information): $ lsb-release -a # print distribution specific information > Debian GNU/Linux 9.4 (stretch)  Distributor ID: Debian Description: GNU/Linux Release: 9.4 Codename: (stretch)  Want more? Some tips and tricks can be found here, here and here. Graphical User Interface Going to the about splash screen in the GUI, I could see that it was running the MATE Desktop Environment 1.16.2 - It is a continuation of GNOME 2 providing a cool desktop environment using traditional desktop metaphors for Linux and other Unix-like operating systems. Essentially desktop metaphors mean that the objects such as windows, cabinets, files, trash cans etc are named after items we understand in the real world, typically found in an office it would seem. The idea was so that users could easily interact with computers systems. Did you know? Desktop metaphors were first introduced in 1970 by Alan Kay at Xerox PARC. Boot up the device I gave the device power and plugged in the HDMI. No signal. I checked the source. No signal. I tried other ports, changing the source. No signal. I tried a different HDMI cable. No signal. This was the first part of my task and it wasn't going well. I was about to try it using my monitor when someone else came along to help me, plugged in the HDMI cable and it just worked. Obviously. Well, at least I knew it was working. Damn gremlins in my techie pocket. Login to the ROCK64 The first time It all starts with a login - and I didn't have one. I asked around. I Googled. I tried the obvious ones I could think of: root, debian, user and admin. I was staring blankly at a very demanding and restricting screen when I saw the word rock64 on the top left. That was my next attempt. So obvious. So simple. So authorized. So admin. Here is how I verified it: $ cat /etc/passwd | grep rock64‚ùå1 > rock64‚ùå1... Automatically I found a script that configures the LightDM (display manager) to log the user in automatically. I had to edit the /etc/lightdm/lightdm.conf file: $ sudo vi /etc/lightdm/lightdm.conf  [SeatDefaults] autologin-user=rock64 autologin-user-timeout=0 Who is root? I wanted to reset the root password. I pressed all the keys I knew I should during boot up to get into GRUB. I guess there is no GRUB. I learned how to reset the account as an admin user: $ sudo /etc/passwd root $ cat /etc/passwd | grep root‚ùå0 > root‚ùå0... Show the web page Open the browser in full screen I needed to manipulate a window and in order to do that I had to install a library that could do that for me. xdotool will will fake keyboard, mouse input, window management and such. It activates the browser and fakes a keyboard press for full screen mode. $ sudo apt-get install xdotool Open the browser automatically After that I could create a script that would open my webpage in Firefox ESR and force the window to full screen mode. I added this script to my startup applications. $ sudo vi /etc/init.d/open_firefox  #!/bin/bash firefox -url \"&lt;URL>\" &amp; xdotool search --sync --onlyvisible --class \"Firefox\" windowactivate F11  $ sudo chmod +x /etc/init.d/open_firefox Want to know more? If you want to know more about the switches: xdotool search. --sync will wait until a search result is found, --onlyvisible matches only windows currently visible and --class checks a regular expression pattern against the window class. Examples: jordansissel has created a few examples showing you some possibilities to use the tool. Hide the cursor The cursor bothered me. It just sat there waiting to be moved. No one was going to move it. Why would we? It should move away or hide or something. I found a library that hides cursors after a specified amount of time. This is especially useful for POS systems on touch screens. $ sudo apt-get update $ sudo apt-get install clutter $ unclutter -idle 0.1 -root I added the unclutter -idle 0.1 -root script to the startup applications. The cursor will disappear every 1/100 second. This can be annoying while working on the device. Just run the script again with the value of 1 to get your cursor back. Do not restore browser tabs on login I was doing a lot of research on the device. It kept all the tabs when I restarted it. I didn't want that as they all started up again and were assumed to be a crash, which I guess they were. I stopped this by changing a flag in Area51 of Firefox. Type config:about as the URL, accept the warning if you so dare, type browser.sessionstore.resumefromcrash in the search bar. Click on it. It should go bold because it becomes a custom setting and should now be disabled. Keep the display on I searched the GUI for an interface where I could change the screen saver and power saver settings. Someone forgot to add it because it was nowhere to be found using both the rock64 and root accounts. I tried a number of suggestions from the web here, here and many elsewhere. Some were to set systemctl and gsettings. sudo systemctl unmask sleep.target suspend.target hibernate.target hybrid-sleep.target  gsettings set org.gnome.desktop.session idle-delay 0 gsettings set org.gnome.desktop.screensaver lock-enabled false As promising as these settings looked, they didn't work on the ROCK64. Later I came across the xset command which - EUREKA! - it worked! $ sudo vi /etc/init.d/prevent_blank  #!/bin/bash xset s off xset s noblank xset -dpms  $ sudo chmod +x /etc/init.d/prevent_blank With xset above we are changing the user preferences. According to the manual the s option lets you set the screen saver parameters. off turns the screen saver off. noblank sets the preference to display a pattern rather than blank the video. The -dpms disables the DPMS (Energy Star) features. Magic! I added the script to the startup applications. What's next? More screens I suppose. There are extensions like Tab Rotator which automatically switches between open tabs. Just configure the extension and amend the /etc/init.d/open_firefox script to take in multiple URLs and you should have a rotating display. Sounds simple right? Bring it on!#post .body img {max-width: 600px;} "},{"slug":"/blog/a-trilogy-about-the-chrome-dev-tools-in-many-parts/","title":"A Trilogy About the Chrome DevTools in Many Parts","tags":["Technical","Chrome DevTools"],"html":" Don't take your knowledge for granted. Share it. Someone could learn something new. It also helps you remember it. Keep a record of what you learn in a blog, memo or even a paperback book. Whatever you choose, jot it down and help your future self and others.   Features! It's all about the features. They make my life easier. üòÑ There are so many unforgettable features. Here are the top few I want to document today. More to come in future posts and articles. First, my article I got published on Offerzen with my article titled Quick front end bug-fixes. It's a good starting point for anyone familiarizing themselves with the tool.  Debugging is an art form. Often, it feels like you need a series of serendipitous insights to fix a complicated bug. In reality, you need two things: technical knowledge to spot broader patterns and connections, and data on the bug itself to understand the problem.  Yay! After a lot of writing (and learning) and fun, my @ChromeDevTools article is published on @OfferZen! This is my first technical article and I do focus on the basics but I hope you can learn a thing or two https://t.co/idrQKMZVew. Let me know what you think.&mdash; Clarice Bouwer (@cbillowes) July 20, 2018 What's new? Chrome releases major updates automatically about every six weeks. As much as I love exploring and discovering on my own, Chrome offers a quick and easy way to get up to speed. They release a video with articles and these highlights are accessible directly within the tool. The What's New panel shows these highlights and I know of three ways to access it.  Press ESC in any panel. The drawer will pop up. Simply click on the What's New panel in the drawer. If you have lost the panel for some reason then resurrect it by clicking on the left side kebab button (it's like the hamburger but healthier). Click on the What's New menu item at the bottom of the menu. Top right kebab button of the tool > More tools > What's New. This menu has other nifty options so be sure to look into them.  Tips and Tricks by @flaviocopes &quot;Cool Chrome DevTools tips and tricks you wish you knew already&quot; by @flaviocopeshttps://t.co/G2ReQ7xrvw&mdash; Chrome DevTools (@ChromeDevTools) July 18, 2018 The color picker  Add a background or foreground color using the kebab button on a selector. Change the colors by using swatches, dragging bars, pasting colors... Use the color picker to pick colors from a web page. Undo all changes using Command+Z or Ctrl+Z. Note: In Chrome 67, CSS variable colors (color: var(--main-color)) now have color blocks / indicators next to them like normal colors would. Backtracking and fast-forwarding In @ChromeDevTools, if you&#39;ve made changes to elements and CSS, instead of refreshing to reset the page you can just undo using Ctrl+Z and redo using Ctrl+Y.&mdash; Clarice Bouwer (@cbillowes) July 16, 2018 JavaScript Snippets If you need to run a repetitive script as a utility or debugging mechanism, you can save it as a snippet. Go to Sources > click on the show navigator button >> and select Snippets. I pasted the following code into my snippet. ;(function() {var greetings = [\"Galaxy\", \"World\", \"Moon\", \"Exception\"]greetings.map(function(greeting) {greet(greeting)}) })()  function greet(greet) {switch (greet) {case \"World\":console.log(\"Hello World!\")breakcase \"Exception\":throw \"Simulating that something went horribly wrong.\"default:console.warn(`I want Hello World not Hello ${greet}.`)} } Screenshots Open the Command Menu Command+Shift+P or Ctrl+Shift+P and type in screenshot.  Capture screenshot: Screenshot the page as you see it. Capture node screenshot: Find an element you like and screenshot the node. Capture full size screenshot: Take a screenshot of how the entire page looks. Uber search across resources Open the Search tab using Command+Option+F or Ctrl+Shift+F or access the drawer by pressing ESC, go to the kebab and click on search. Type in what you are looking for and the tools will search through the text of all your your JavaScript, CSS and HTML files. Stop and think about this for a second. I was completely ecstatic when I found this by chance. :hover element In @ChromeDevTools you can toggle the :hover element state to display it on the screen without having to hover over each time while inspecting the CSS. The same applies for active, focus, focus-within and visited. Neat hey! pic.twitter.com/Em3dcjgpAI&mdash; Clarice Bouwer (@cbillowes) July 16, 2018 Shortcuts I mention a few shortcuts. They are useful. The DevTools have many that you can learn in three ways.  By chance. Play mortal combat with your keyboard in the tools and you are bound to discover something cool. Go to the settings from the main kebab > Settings > Shortcuts. Access the full list of DevTools keyboard shorcuts and gestures.  Random! @adriancooney created console.image, \"the one thing Chrome Dev Tools didn't need\" - images in the console. It even supports gifs. ;-). console.meme(upper text, lower text, meme type|url, width, height) console.meme(\"Not sure if memes in dev tools is stupid\", \"or disastrous.\", \"Not Sure Fry\", 400, 300);"},{"slug":"/blog/learning-linux/","title":"Learning Linux","tags":["Technical","Linux"],"html":"I have used Windows for over twenty years. Oh my goodness that's a long bloody time. Now I've joined the Linux world. It's thrilling. I'm loving it, learning, sharing (and as always - documenting) what I love and learn.  Ubuntu's APT (Advanced Packaging Tool) gives you access to some cool software that you can install . Run man apt for all available options. Examples are always useful. Want to know what you can download? apt-cache search java | grep sdk-  That brings me to pipe | Sheesh this thing is cool. It takes the output stream of the first command, sends it to the next command which does something radical with it, or maybe not, it depends on the command I guess and these commands can chain! Here are some examples. # command_1 | command_2 | command_3 | .... | command_N ls -a | more sort awesome.txt | uniq cat awesome.txt | head -7 | tail -5 cat awesome.txt | grep \"value\" | tree file2.txt | wc -lm  tree - It displays an indented directory tree. In your console. In color. So cool. I didn't have it installed by default so I installed it from apt. apt-cache search \"tree-\" sudo apt update sudo apt install tree  grep - It stands for Global regular expression print and its an UBER plain-text search utility | grep &lt;something to search for&gt; apt-cache search java | grep sdk man apt | grep update ps -ef | grep zsh cat /etc/hosts | grep 127  Copy public key after generating one.  Add it to the known_hosts on a server so that you can authenticate to it. Add it to your repo for SSH authentication.  sudo apt install clipit # Send data to the clipboard sudo apt install libcanberra-gtk-module libcanberra-gtk3-module # dependencies ssh-keygen cat ~/.ssh/id_rsa.pub | clipit  Get system and distro information - especially useful for online support. $ lsb_release -a # (Linux Standard Base) - prints all distribution specific information  Distributor ID:\tUbuntu Description:\tUbuntu 18.04 LTS Release:\t    18.04 Codename:\t    bionic  $ lsb_release -a | grep 18.04  $ uname -a # prints all system information Linux oxygen 4.15.0-29-generic #31-Ubuntu SMP Tue Jul 17 15:39:52 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux  htop - its like top but hotter. It shows you processes. Interact with them by scrolling through them or selecting them. You can sort, tag, untag, trace, kill. Options! It comes with options!  shutdown from the console. sudo shutdown now # Shutdown now | /sbin/shutdown now man shutdown OPTIONS The following options are understood:  --helpqPrint a short help text and exit.  -H, --haltHalt the machine.  -P, --poweroffPower-off the machine (the default).  -r, --rebootReboot the machine.   whoami prints the effective user name.  Check user roles: cat /etc/passwd | grep clarice‚ùå1 # admin cat /etc/passwd | grep root‚ùå0 # root    chmod changes the file mode bits so you can set a file to read-only, executable and so forth. sudo chmod +x awesome.sh # executable ./awesome.sh # open in that directory /path/to/awesome.sh # open from another directory  sudo nautilus opens the file manager in admin mode giving me uber rights like being able to create folders and other admin stuff I am yet to explore. This is dangerous territory so tread with caution.  Chromium is on the Ubuntu Software centre, but Chrome is not. Download it from their website. I needed flash and it only worked when I installed Chrome. I installed oh-my-zsh for a better shell experience. Settings are found in ~/.zshrc ZSH_THEME=\"powerlevel9k/powerlevel9k\" POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir rbenv vcs) POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status root_indicator background_jobs history) POWERLEVEL9K_SHORTEN_DIR_LENGTH=2 POWERLEVEL9K_SHOW_CHANGESET=true POWERLEVEL9K_MODE='awesome-fontconfig' POWERLEVEL9K_SHORTEN_DIR_LENGTH=1 POWERLEVEL9K_SHORTEN_STRATEGY=truncate_from_right_ POWERLEVEL9K_VCS_HIDE_TAGS=true POWERLEVEL9K_SHOW_CHANGESET=true POWERLEVEL9K_VCS_SHORTEN_LENGTH=10 POWERLEVEL9K_VCS_SHORTEN_MIN_LENGTH=11 POWERLEVEL9K_VCS_SHORTEN_STRATEGY=\"truncate_from_right\" POWERLEVEL9K_VCS_SHORTEN_DELIMITER=\"..\" POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status)  export NVM_DIR=\"$HOME/.nvm\" [ -s \"$NVM_DIR/nvm.sh\" ] &amp;&amp; \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm [ -s \"$NVM_DIR/bash_completion\" ] &amp;&amp; \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion  # place this after nvm initialization! autoload -U add-zsh-hook load-nvmrc() {local node_version=\"$(nvm version)\"local nvmrc_path=\"$(nvm_find_nvmrc)\"if [ -n \"$nvmrc_path\" ]; thenlocal nvmrc_node_version=$(nvm version \"$(cat \"${nvmrc_path}\")\")if [ \"$nvmrc_node_version\" = \"N/A\" ]; thennvm installelif [ \"$nvmrc_node_version\" != \"$node_version\" ]; thennvm usefielif [ \"$node_version\" != \"$(nvm version default)\" ]; thenecho \"Reverting to nvm default version\"nvm use defaultfi }  Freaking sound! If I ever lose my sound card association again - because that happened üò¢ - I can test my sound using aplay /usr/share/sounds/alsa/Front_Center.wav then install a bunch of drivers sudo apt-get update; sudo apt-get dist-upgrade; sudo apt-get install pavucontrol linux-sound-base alsa-base alsa-utils lightdm ubuntu-desktop  linux-image-`uname -r` libasound2; sudo apt-get -y --reinstall install linux-sound-base alsa-base alsa-utils lightdm ubuntu-desktop  linux-image-`uname -r` libasound2; killall pulseaudio; rm -r ~/.pulse*; ubuntu-support-status; sudo usermod -aG  cat /etc/group | grep -e '^pulse:' -e '^audio:' -e '^pulse-access:' -e '^pulse-rt:' -e '^video:' | awk -F: '{print $1}' | tr '\\n' ',' | sed 's:,$::g'  whoami  I got to play around with Linux on a Rock64. So much fun!  Playing around to get a monitoring display set up on a Rock64 device @cloudafrica pic.twitter.com/TQ0gXEiFzi&mdash; Clarice Bouwer (@cbillowes) July 5, 2018 I can get used to using htop! sudo apt-get install htop or use Do Not Forget (rather Dandified YUM) on Fedora ;) sudo dnf htop. It`s an uber top. https://t.co/JrmuwcguJH pic.twitter.com/HP1fggrTdH&mdash; Clarice Bouwer (@cbillowes) July 9, 2018 In Linux the &amp; makes the command run in the background. I never knew that until last week.&mdash; Clarice Bouwer (@cbillowes) July 9, 2018 How To Install and Secure Memcached on Ubuntu 16.04 https://t.co/TldVw1TCmf&mdash; Clarice Bouwer (@cbillowes) July 14, 2018"},{"slug":"/blog/an-iterative-approach-to-my-blog/","title":"An Iterative Approach to My Blog","tags":["Productivity","Mindset"],"html":"I was leaving the corporate world behind and needed to rebrand. I had a hard deadline. I had a new job, a new domain and new hosting, I needed a new blog. I could have rebranded my old blog but I didn't take that approach. In retrospect, it wouldn't have been a bad idea to have done that. Oh well. I still love the idea of a database-free blog. All my content is kept in markdown files. I started using Gatsby instead of Jekyll. It's a site generator that uses React - so that I could learn React, at the worst possible time. üòÇ The learning curve was a mountain. That lead to some pressure. Features were missing; components didn't work, some were buggy; styling and usability needed tweaking. I put something together. I PAUSED! If there is one thing I learned from corporate programmer is that it doesn't have to be perfect! It worked. It looked good. There was content. The core of the \"product\" was there and ready to be shipped. And so it launched. As I keep writing, I keep fixing and tweaking small things. Disqus is now working, the dates should be less wonky, animated gifs have a loading, stop and start state. There are actually animated gifs. I am writing more technical articles that before (yup, I was scared to). There's more I need to do. There will always be more. And that's what makes it exciting! What on earth does this have to do with me? Probably nothing, unless you want it to mean something. üòâ In my opinion, perfection can result in a stagnated delivery process which could possibly render the product redundant when it ships to market too late. We keep hearing about iterative this and iterative that so it's not a new concept to launch something and iteratively apply changes with a quick feedback loop from anyone using the product. It's what I did, it worked and it's still working. The core is there. People can read the stuff I write. The rest of it is just attractive fluff."},{"slug":"/blog/clojure-buzzwords-i-am-learning/","title":"Clojure Buzzwords I am Learning","tags":["Technical","Comfort Zone","Clojure"],"html":" When I first started with Clojure, my mind was foggy and filled with a swarm of buzzwords. There were tools, plugins, libraries, patterns and frameworks with names that were all new to me. This is a blog post of all the buzzwords that I am learning. I have been a .NET and SQL web developer for the last decade. I now find myself in the land of Infrastructure as a Service (IaaS) as a senior systems and web/full stack developer in completely new paradigms. I am writing production and utility software in Clojure(Script) integrating with Datomic. I also have SysAdmin responsibilities where I configure monitoring, manage and provide support for our systems. I've migrated to Ubuntu after twenty years of using Windows so it is safe to say that all these changes have stretched me outside my comfort zone - and I am absolutely loving it! Disclaimer: I am only sharing my understanding of each. If I have misunderstood something, please jump in and submit a pull request. Leiningen (Build automation)Leiningen, pronounced (LINE-ing-en ['la…™n…™≈ã…ôn], is a tool created by Phil Hagelberg. He wanted to simplify the complexities involved in creating a project with Apache Maven. lein was born as a Clojure build automation and dependency management tool that can accept input from the terminal. You can create projects, fetch dependencies, run tests, create a REPL and do other cool things. lein new app awesome-app lein update lein test lein repl On the front end, lein is used to replace JavaScript tooling such as:    Build step Tools     Project scaffolding Grunt, Slush, Yeoman   Build tools Webpack, Grunt, Gulp, Browserify   Package managers npm, yarn, bower    This table is adapted from Why I chose ClojureScript over JavaScript by akiroz. ClojureScript (Clojure to JavaScript) Clojure targets platforms like the JVM and .NET CLR. ClojureScript is just a Clojure (without Java API calls) compiler targeting JavaScript. The JavaScript is compiled in such a way that it can be optimized using the Google Closure compiler. Google Closure (JavaScript optimizer) JavaScript libraries can become bloated with dead code, comments and require dependency management. Google Closure compiles JavaScript code with an optimization algorithm creating compact and high-performance code. The compiler inspects variable references, checks syntax, types and warnings along with other common JavaScript idiosyncrasies. It then strips away dead code, rewrites what's left, minifies and packages a file that can be quickly downloaded and executed. Datomic (Database) Datomic is a non-traditional distributed database with ACID transactions, joins and a logical query language. Datomic is a set of datoms which are atomic facts. They say if the relation between an entity, an attribute, a value, and a transaction has been added or retracted. A datom is expressed as a five-tuple:  entity id (E) attribute (A) value (V) transaction id (Tx) addition / retraction boolean (Op)     E (ntity) A(ttribute) V(alue) Tx Op     42 :user/first-name \"Douglas\" 1234 true   42 :user/last-name \"Adams\" 1234 true   42 :user/favorite-color :emerald 1234 false   42 :user/favorite-color :teal 1235 false   42 :user/favorite-color :crimson 1236 true    That can translate to the following point-in-time view as only a three-tuple with Tx and Op omitted:    E (ntity) A(ttribute) V(alue)     42 :user/first-name \"Douglas\"   42 :user/last-name \"Adams\"   42 :user/favorite-color :crimson    {:db/id 42:user/favorite-color :crimson:user/first-name \"Douglas\":user/last-name \"Adams\"} Reagent (React framework) Reagent is a minimalistic ClojureScript interface to React.js. HTML components are represented as Clojure data following a hiccup-like syntax and is compiled to React components. Pssst. No more JSX files. (defn home-panel [][:div.hello-world[:p[:b \"Hello World\"]]]) &lt;div data-reactroot=\"\" class=\"hello-world\">&lt;p>&lt;b>Hello World&lt;/b>&lt;/p> &lt;/div> re-frame (React pattern) re-frame is a Reagent Framework pattern for writing SPAs (Single Page Applications) in ClojureScript. It is built on the same principles of Redux. It's a loop of what they refer to as dominoes. One domino triggers the next until it is ready for the next iteration of the same cascade.  Figwheel (Hot reloader) Figwheel, a lein plugin, is a ClojureScript auto builder/server which pushes changed files to the browser. Cutting some fruit, it says on load, it detects changes in the code, reloads the screen and keeps all the glorious state in the application at that time. lein new figwheel hello-world -- --reagent  #for a reagent based project Garden (ClojureScript to CSS) Garden generates CSS from ClojureScript data structures. As I write this I am imagining a garden with ornamental green grasses, thick green plants and maybe a few flowers here and there. This beautiful garden seems symbolic of styling. This imagined outdoor beauty can be digitized into Clojure vectors and maps written in a Hiccup inspired syntax to generate CSS to beautify your website. (require '[garden.core :refer [css]]) (css [:body {:font-size \"16px\"}]) body {font-size: 16px; } Compojure (Server-side routing) Compojure is a small server-side routing library for Ring that allows web applications to be composed of small, independent parts. lein new compojure hello-world cd hello-world lein ring server-headless (ns hello-world.core(:require [compojure.core :refer :all][compojure.route :as route]))  (defroutes app(GET \"/\" [] \"&lt;h1>Hello World&lt;/h1>\")(route/not-found \"&lt;h1>Page not found&lt;/h1>\")) Secretary (Client-side routing) Secretary is a client-side router for ClojureScript. It is built to create route matchers and dispatch actions. (ns app.routes(:require [secretary.core :as secretary :refer-macros [defroute]]))  (defroute \"/users/:id\" {:as params}(js/console.log (str \"User: \" (:id params))))  (secretary/dispatch! \"/users/gf3\") Pushy (HTML5 pushState) Pushy is used for HTML5 pushState and can be integrated with routing libraries such as Secretary, Bidi, Silk, Router and Sibiro. Here's an example implementation of an integration with Secretary: (ns foo.core(:require [secretary.core :as secretary :include-macros true :refer-macros [defroute]][pushy.core :as pushy]))  (secretary/set-config! :prefix \"/\")  (defroute index \"/foo\" [](.log js/console \"Hi\"))  (def history (pushy/pushy secretary/dispatch!(fn [x] (when (secretary/locate-route x) x))))  ;; Start event listeners (pushy/start! history) Bouncer (Validation) Bouncer is a validation DSL. (ns some.ns(:require [bouncer.core :as b][bouncer.validators :as v]))  (def person {:name \"Leo\"})  (b/validate person:name v/required:age  v/required)  ;; [{:age (\"age must be present\")} ;;  {:name \"Leo\", :bouncer.core/errors {:age (\"age must be present\")}}] Inflections (Word manipulation) Inflections is a rails-like inflection library. Inflection: A change in the form of a word (typically the ending) to express a grammatical function or attribute such as tense, mood, person, number, case, and gender. (use 'inflections.core)  (plural \"word\") ;=> \"words\"  (plural \"virus\") ;=> \"viri\"  (pluralize 12 \"virus\") ;=> \"12 viri\"  (singular \"apples\") ;=> \"apple\"  (singular \"octopi\") ;=> \"octopus\"  (underscore \"puni-puni\") ;=> \"puni_puni\"  (ordinalize \"52\") ;=> \"52nd\"  (capitalize \"clojure\") ;=> \"Clojure\" Humanize (Word manipulation) Humanize produces human readable strings and dates. user> (numberword 3567) => \"three thousand five hundred and sixty-seven\"  user>  (clojure.contrib.humanize/intcomma 1000) => 1,000  user>  (clojure.contrib.humanize/intword 2000000000) => 2.0 billion  user>  (clojure.contrib.humanize/ordinal 111) => 111th  user>  (clojure.contrib.humanize/filesize 3000000 :binary true) => 2.9MiB  user> (clojure.contrib.humanize/truncate \"abcdefghijklmnopqrstuvwxyz\" 10 \"...xyz\") => \"abcd...xyz\"  user> (clojure.contrib.humanize/oxford [\"apple\" \"orange\" \"mango\" \"pear\"]:maximum-display 2:truncate-noun \"fruit\") => \"apple, orange, and 2 other fruits\"  user> (clojure.contrib.inflect/pluralize-noun 6 \"buzz\") => \"buzzes\"  user> (clojure.contrib.humanize/datetime (plus (now) (years -7))) => \"7 years ago\"  user> (clojure.contrib.humanize/duration 325100 {:number-format str}) => \"5 minutes, 25 seconds\" URL (URL Library) URL is a library that makes working with URLs easier. => (url \"https://api.twitter.com/\") #cemerick.url.URL{:protocol \"https\", :username nil, :password nil,:host \"api.twitter.com\", :port -1, :path \"/\", :query nil,:anchor nil} => (url \"https://api.twitter.com/\" \"1\" \"users\" \"profile_image\" \"cemerick\") #cemerick.url.URL{:protocol \"https\", :username nil, :password nil,:host \"api.twitter.com\", :port -1,:path \"/1/users/profile_image/cemerick\", :query nil, :anchor nil} => (str *1) \"https://api.twitter.com/1/users/profile_image/cemerick\" => (str (url \"https://api.twitter.com/1/users/profile_image/cemerick\" \"../../lookup.json\")) \"https://api.twitter.com/1/users/lookup.json\" Sente (WebSockets) Sente is a real time web communications library the does bidirectional async comms over WebSockets (AJAX as fallback) working with auto keep-alives, buffering, protocol selection and reconnects. Slingshot (try/throw) Slingshot provides try+ and throw+ which is compatible with Java's native exception handling and a power-up to Clojure's native try and throw behavior.  throw+ can throw any Java object, not just classes derived from java.lang.Throwable. catch will catch Java objects thrown by throw+, map passed ex-info thrown by throw, throw+ or any Throwable thrown by Clojure or Java's throw.  (ns math.expression(:require [tensor.parse][clojure.tools.logging :as log])(:use [slingshot.slingshot :only [throw+ try+]]))  (defn read-file [file](try+[...](tensor.parse/parse-tree tree)[...](catch [:type :tensor.parse/bad-tree] {:keys [tree hint]}(log/error \"failed to parse tensor\" tree \"with hint\" hint)(throw+))(catch Object _(log/error (:throwable &amp;throw-context) \"unexpected error\")(throw+)))) Timbre (Logging) Timbre is a logging library for Clojure(Script). It offers full support for v4+ with no XML or properties files. Create a single config map and you're good to go. Add the dependency to your project and then setup your namespace imports. (ns my-clj-ns ; Clojure namespace(:require[taoensso.timbre :as timbre:refer [log  trace  debug  info  warn  error  fatal  reportlogf tracef debugf infof warnf errorf fatalf reportfspy get-env]]))  (ns my-cljs-ns ; ; ClojureScript namespace(:require[taoensso.timbre :as timbre:refer-macros [log  trace  debug  info  warn  error  fatal  reportlogf tracef debugf infof warnf errorf fatalf reportfspy get-env]])) You can call (timbre/refer-timbre) to configure the Clj namespace referrals automatically. Basic println and js/console (v4+) output at a :debug level is given by default. (info \"This will print\") => nil %> 15-Jun-13 19:18:33 localhost INFO [my-app.core] - This will print  (spy :info (* 5 4 3 2 1)) => 120 %> 15-Jun-13 19:19:13 localhost INFO [my-app.core] - (* 5 4 3 2 1) => 120  (defn my-mult [x y] (info \"Lexical env:\" (get-env)) (* x y)) => #'my-mult (my-mult 4 7) => 28 %> 15-Jun-13 19:21:53 localhost INFO [my-app.core] - Lexical env: {x 4, y 7}  (trace \"This won't print due to insufficient log level\") => nil Other Shadow CLJS Shadow CLJS is a ClojureScript development tool. I haven't used this library. By the looks of it, it compiles ClojureScript code with little configuration. It does this in a specific build order like what you would do in Grunt and Gulp. It has reliable npm integration and some other cool stuff that can be investigated in the guide. DevCards  DevCards is a ClojureScript library. You can experiment and inspect your ClojureCode from the REPL-like feature in the browser. This REPL is powered by data in the source files. Code examples can be executed and changes can be inspected directly in the DOM. Ring Ring is a low-level interface and library for building web applications in the Clojure programming language. This abstracted HTTP API allows web applications to be constructed of modular components. These components can be shared among applications, web servers and web frameworks. re-frisk re-frisk creates a little button on the screen that lets you visualize re-frame pattern data; you can see the reagent ratom as a tree structure; watch re-frame events and export the state in the debugger.  CIDERCIDER is a Clojure(Script) Interactive Development Environment that Rocks! CIDER extends Emacs with support for interactive programming in Clojure. Resources Learn Clojure  Clojure for the Brave and True by Daniel Higginbotham can be read online for free. clojuredocs.org has documentation and examples contributed by the community. Clojure TV is a YouTube channel with Clojure talks and presentations. Other video gems are available in YouTube when searching for Clojure. The Re-frame Building Blocks Guide Learn Reagent Free  Interesting articles  A Noob's Walkthrough of a re-frame Application Why I chose ClojureScript over JavaScript 6 mistakes that Reacters do that re-framers avoid  Referenced links  Leiningen ClojureScript Google Closure Datomic Reagent re-frame Figwheel Garden Compojure Secretary Pushy Bouncer Inflections Humanize URL Sente Slingshot Timbre Shadow CLJS DevCards Ring re-frisk CIDER "},{"slug":"/blog/behind-the-scenes-my-blog/","title":"Behind the Scenes: My Blog","tags":["Technical","Personal Brand"],"html":"I developed corporate programmer using a Ruby-based static-site generator called Jekyll. It transforms Markdown, Liquid, HTML and CSS to a static website so that no is database required. While I was planning to leave the corporate world, I started rebranding. I wanted a change. A new look. A new tech. A new name. My blog.st0{fill:#fff}.st1{fill:#639}  I wanted a new blog. I was introduced to Gatsby, a blazing fast static site generator for React. This was handy as I wanted to learn React. Off I went to implement it using the Gatsby Advanced Starter, because why start small? This starter kit has a lot of features including offline support and web sockets which I think is rad. I must admit that it tricky for me, as a beginner, to implement - but I came right and the site came out better than I expected it to. I still have a few features that are outstanding. My brand  I wanted a new name. I settled on curious programmer after a lot of different ideas that came to mind. I chose the name because I am curious about how things work and what is in store for me in my Clojure and Cloud infrastructure journey. It is also happens to be similar to my former brand. I visited GoDaddy to secure the curiousprogrammer.io domain and had to work extra hard to get my blog ready. Hosting  I wanted new hosting. I used to host at BlueHost but I was stuck with an FTP and cpanel approach which wasn't ideal for me. Somehow I stumbled across Netlify. It lets me build, deploy and manage my blog automatically. When I push my changes to my public GitHub repo, the Netlify hook detects the change and builds it automatically for me. With Gatsby's web sockets, the web pages refresh over time as changes are detected. Code quality I am interested in knowing what the quality of my code is and found websites that verify it automatically on build. I registered with both Code Climate and Codacy to get these insights. After each deployment, I get a report telling me what standard my code is in. I seem to have some work to do üòâ  I enjoy writing and sharing what I learn. My blogging platform makes this possible and I am proud of its outcome. I hope that some of these technologies can be useful to you when developing a blog or any other website of your own. If you have any other technologies that you use, please share it with me.  Resources  Jekyll Gatsby GoDaddy BlueHost Netlify GitHub Code Climate Codacy "},{"slug":"/blog/datomic-cheat-sheet-series-getting-started/","title":"Datomic Cheat Sheet Series - Getting Started","tags":["Technical","Datomic","Database","Cheat sheet"],"html":" Get started with the essentials of Datomic from installing Datomic, running a transactor, working with the Datomic console, running the Datomic REPL, creating and restoring a database, creating a schema and furnishing it with data. The goal of this series is to expose a collection of queries that I find useful that can be conveniently referenced in projects. Overview (more) In a nutshell, Datomic is a distributed database and implementation of Datalog, a declarative logic programming language often used as a query language for deductive databases. Datomic has ACID transactions, is immutable, queryable and flexible. It's important to note that this cheat sheet series focuses on using the Datomic On-Prem solution with the Peer Library and Dev Storage components. Getting started (more)  Datomic requires the Java 7 or 8 SDK. Register a My Datomic account. Download the free version for testing. Extract the copy to a local path. Use the license sent to you via email.  cd /path/to/datomic/datomic-pro-0.9.5561 Run a transactor (more) # Create a properties file from the template /path/to/dev-transactor.properties config/samples/dev-transactor-templates.properties  # Add the license key sent to you via email vi /path/to/dev-transactor.properties license-key=&lt;INSERT HERE>  # Start the transactor with dev storage # Keep this process running bin/transactor path/to/dev-transactor.properties Datomic Console (more) # New shell /path/to/datomic/bin/console -p 8080 dev datomic:dev://localhost:4334/ Browse to http://localhost:8080/browse/. Run the REPL (more) /path/to/datomic/bin/repl #./repl # Exit with CTRL + D For an interactive REPL, create and run a new project. lein new oxygen vi oxygen/project.clj # use your favorite editor  :dependencies [[org.clojure/clojure \"1.9.0\"][com.datomic/datomic-pro \"0.9.5703\"]] :repositories [[\"my.datomic.com\" {:url      \"https://my.datomic.com/repo\":username \"&lt;username>\":password \"&lt;uuid>\"}]]  lein repl # Exit with CTRL + D Use pro to access the dev protocol. Create a database (more) ; Create a connection to an anonymous to an in-memory database ; https://github.com/Datomic/day-of-datomic/blob/master/src/datomic/samples/repl.clj (require '[datomic.api :as d]) (def db-uri-base \"datomic:mem://\") (let [uri (str db-uri-base (d/squuid))](d/delete-database uri)(d/create-database uri)(d/connect uri))) ; Create a connection to a local storage database (require '[datomic.api :as d]) (def db-uri \"datomic:dev://localhost:4334/oxygen\") (d/create-database db-uri) (def conn (d/connect db-uri)) Restore a database (more) Grab a copy of the mbrainz 1968-1973 sample set to follow along with some of the examples throughout the cheat sheet series. wget http://s3.amazonaws.com/mbrainz/datomic-mbrainz-1968-1973-backup-2014-10-15.tar -O mbrainz.tar tar -xvf mbrainz.tar pwd # get path/to/backup bin/datomic restore-db file:///path/to/backup/mbrainz-1968-1973 datomic:dev://localhost:4334/mbrainz-1968-1973 Create a schema (more) (require '[datomic.api :as d]) (def db-uri \"datomic:dev://localhost:4334/oxygen\") (d/create-database db-uri) (def conn (d/connect db-uri))  (def schema[{:db/ident :movie/reference:db/valueType :db.type/uuid:db/cardinality :db.cardinality/one:db/doc \"uuid reference\"}{:db/ident :movie/title:db/valueType :db.type/string:db/cardinality :db.cardinality/one:db/doc \"The title of the movie\"}{:db/ident :movie/genre:db/valueType :db.type/string:db/cardinality :db.cardinality/one:db/doc \"The genre of the movie\"}{:db/ident :movie/release-year:db/valueType :db.type/long:db/cardinality :db.cardinality/one:db/doc \"The year the movie was released in theaters\"}])  ; Make sure the transactor is running before transacting on a connection. @(d/transact conn schema)  ; Verify the database schema (def db (d/db conn)) (d/q '[:find ?e ?doc:where [?e :db/doc ?doc]] db) Schema attributes (more) Attributes    Attribute Description     :db/ident Unique namespaced keyword &#x3C;namespace>/&#x3C;name>   :db/valueType Expressed keyword type value    Type values    Value type Description     :db.type/keyword Value type for keywords. Keywords are used as names, and are interned for efficiency. Keywords map to the native interned-name type in languages that support them.   :db.type/string Value type for strings.   :db.type/boolean Boolean value type.   :db.type/long Fixed integer value type. Same semantics as a Java long: 64 bits wide, two's complement binary representation.   :db.type/bigint Value type for arbitrary precision integers. Maps to java.math.BigInteger on Java platforms.   :db.type/float Floating point value type. Same semantics as a Java float: single-precision 32-bit IEEE 754 floating point.   :db.type/double Floating point value type. Same semantics as a Java double: double-precision 64-bit IEEE 754 floating point.   :db.type/bigdec Value type for arbitrary precision floating point numbers. Maps to java.math.BigDecimal on Java platforms.   :db.type/ref Value type for references. All references from one entity to another are through attributes with this value type.   :db.type/instant Value type for instants in time. Stored internally as a number of milliseconds since midnight, January 1, 1970 UTC. Maps to java.util.Date on Java platforms.   :db.type/uuid Value type for UUIDs. Maps to java.util.UUID on Java platforms.   :db.type/uri Value type for URIs. Maps to java.net.URI on Java platforms.   :db.type/bytes Value type for small binary data. Maps to byte array on Java platforms. See limitations.    Cardinality Specifies whether an attribute associates a single value or set of values with an entity.  :db.cardinality/one :db.cardinality/many  Adding data (more) (require '[datomic.api :as d]) (def db-uri \"datomic:dev://localhost:4334/oxygen\") (def conn (d/connect db-uri))  (def movies [{:movie/reference (d/squuid):movie/title \"The Goonies\":movie/genre \"action/adventure\":movie/release-year 1985}{:movie/reference (d/squuid):movie/title \"Commando\":movie/genre \"action/adventure\":movie/release-year 1985}{:movie/reference (d/squuid):movie/title \"Repo Man\":movie/genre \"punk dystopia\":movie/release-year 1984}])  (d/transact conn movies)"},{"slug":"/blog/datomic-cheat-sheet-series-queries-part-1/","title":"Datomic Cheat Sheet Series - Queries (Part 1)","tags":["Technical","Datomic","Database","Cheat sheet"],"html":" In this post I work through querying the Datomic MusicBrainz sample database. The example queries are grabbed from the Datomic Docs. If you want to get started with Datomic, check out the previous post in the series. Create a new project lein new beryllium vi beryllium/project.clj # use your favorite editor  # add the following snippet to your project.clj file :dependencies [[org.clojure/clojure \"1.9.0\"][com.datomic/datomic-pro \"0.9.5703\"]] :repositories [[\"my.datomic.com\" {:url      \"https://my.datomic.com/repo\":username \"&lt;username>\":password \"&lt;uuid>\"}]]  lein repl # Exit with CTRL + D Get your credentials from your My Datomic Account. Create a database connection Create an inline database connection (require '[datomic.api :as d]) (def db-uri \"datomic:dev://localhost:4334/mbrainz-1968-1973\") (def conn (d/connect db-uri)) (def db (d/db conn)) Create a database connection as a function (ns beryllium.core(:require [datomic.api :as d]))  (defn new-db [](let [db-uri \"datomic:dev://localhost:4334/mbrainz-1968-1973\"conn (d/connect db-uri)db (d/db conn)]db)) Query entities(d/q '[:find ?e:where [?e :track/name]] db);=> #{[17592186050536];     [17592186050537];     [17592186050538];     ...}(d/q '[:find [?e ...]:where [?e :track/name]] db);=> [17592186050536;    17592186050537;    17592186050538;     ...](d/q '[:find [(sample 10 ?e) ...]:where [?e :track/name]] db);=> [[17592186052808;     17592186070900;     17592186170898;     ...]](def release (d/entity db 17592186089442))(d/touch release);=> #:db{:id 17592186089442}(def release (d/entity db 17592186089442))(def media (:release/media release))(map #(println (:medium/tracks %)) media);#{#:db{:id 17592186089445} #:db{:id 17592186089447} #:db{:id 17592186089444} #:db{:id 17592186089446}} Get values from entities(def release (d/entity db 17592186089442))(:release/name release);=> \"Banished Bridge\"(d/q '[:find ?release-name:where [?e :release/name ?release-name]] db);=> #{[\"Osmium\"];     [\"Hela roept de akela\"];     [\"Ali Baba\"];     ...}(d/q '[:find [?release-name ...]:where [?e :release/name ?release-name]] db);=> [\"Osmium\";    \"Hela roept de akela\";    \"Ali Baba\";    ...] Multiple inputs (more) (d/q '[:find [?release-name ...]:in $ ?artist-name:where[?artist :artist/name ?artist-name][?release :release/artists ?artist][?release :release/name ?release-name]] db \"John Lennon\");=> [\"Power to the People\";    \"Unfinished Music No. 2: Life With the Lions\";    \"Live Peace in Toronto 1969\";    ...] Tuple binding (more) (d/q '[:find [?release ...]:in $ [?artist-name ?release-name]:where[?artist :artist/name ?artist-name][?release :release/artists ?artist][?release :release/name ?release-name]] db [\"John Lennon\" \"Mind Games\"]);=> [17592186157686 17592186157672 17592186157690 17592186157658] Collection binding (more)(d/q '[:find [?release-name ...]:in $ [?artist-name ...]:where[?artist :artist/name ?artist-name][?release :release/artists ?artist][?release :release/name ?release-name]] db [\"Paul McCartney\" \"George Harrison\"]);=> [\"My Sweet Lord\";    \"Electronic Sound\";    \"Give Me Love (Give Me Peace on Earth)\";    ...] Relation binding (more)(d/q '[:find [?release ...]:in $ [[?artist-name ?release-name]]:where[?artist :artist/name ?artist-name][?release :release/artists ?artist][?release :release/name ?release-name]] db [[\"John Lennon\" \"Mind Games\"][\"Paul McCartney\" \"Ram\"]]);=> [17592186157686 17592186157672 17592186157690 17592186157658 17592186063566] Find specifications (more)(d/q '[:find ?artist-name ?release-name:where[?release :release/name ?release-name][?release :release/artists ?artist][?artist :artist/name ?artist-name]] db);=> #{[\"George Jones\" \"With Love\"];     [\"Shocking Blue\" \"Hello Darkness / Pickin' Tomatoes\"];     [\"Junipher Greene\" \"Friendship\"];     ...}(d/q '[:find [?year ?month ?day]:in $ ?name:where[?artist :artist/name ?name][?artist :artist/startDay ?day][?artist :artist/startMonth ?month][?artist :artist/startYear ?year]] db \"John Lennon\");=> [1940 10 9](d/q '[:find ?year .:in $ ?name:where[?artist :artist/name ?name][?artist :artist/startYear ?year]] db \"John Lennon\")=> 1940"},{"slug":"/blog/datomic-cheat-sheet-series-queries-part-2/","title":"Datomic Cheat Sheet Series - Queries (Part 2)","tags":["Technical","Datomic","Database","Cheat sheet"],"html":" In this post I work through more querying capabilities using the Datomic MusicBrainz sample database. The example queries are grabbed from the Datomic Docs. If you want to get started with Datomic, check out the first post in the series. If you want to see some basic queries, then check out part 1. Create a database connection Create an inline database connection (require '[datomic.api :as d]) (def db-uri \"datomic:dev://localhost:4334/mbrainz-1968-1973\") (def conn (d/connect db-uri)) (def db (d/db conn)) Create a database connection as a function (ns beryllium.core(:require [datomic.api :as d]))  (defn new-db [](let [db-uri \"datomic:dev://localhost:4334/mbrainz-1968-1973\"conn (d/connect db-uri)db (d/db conn)]db)) Not clauses (more) ; count all artists who are not Canadian (d/q '[:find (count ?eid) .:where [?eid :artist/name](not [?eid :artist/country :country/CA])] db)  ; => 4538 ; number of artists who didn't release an album in 1970 (d/q '[:find (count ?artist) .:where [?artist :artist/name](not-join [?artist][?release :release/artists ?artist][?release :release/year 1970])] db) ; the number of releases named 'Live at Carnegie Hall' ; that were not by Bill Withers (d/q '[:find (count ?release) .:where [?release :release/name \"Live at Carnegie Hall\"](not-join [?release][?release :release/artists ?artist][?artist :artist/name \"Bill Withers\"])] db) Or clauses (more) ; the number of vinyl media (d/q '[:find (count ?medium) .:where (or [?medium :medium/format :medium.format/vinyl7][?medium :medium/format :medium.format/vinyl10][?medium :medium/format :medium.format/vinyl12][?medium :medium/format :medium.format/vinyl])] db) ; => 9219 ; the number of artists who are either groups or females (d/q '[:find (count ?artist) .:where (or [?artist :artist/type :artist.type/group](and [?artist :artist/type :artist.type/person][?artist :artist/gender :artist.gender/female]))] db) ; => 2323 ; number of releases from 1970s or Canadian artists (d/q '[:find (count ?release) .:where [?release :release/name](or-join [?release](and [?release :release/artists ?artist][?artist :artist/country :country/CA])[?release :release/year 1970])] db) ; => 2124 Expression clauses (more) Predicate expressions ; get artists who started before 1600 (d/q '[:find ?name ?year:where [?artist :artist/name ?name][?artist :artist/startYear ?year][(&lt; ?year 1600)]] db) ; => #{[\"Choir of King's College, Cambridge\" 1441] ;      [\"Heinrich Sch√ºtz\" 1585]} Function expressions ; the minutes of each John Lennon track ; quot converts track lengths from milliseconds to minutes (d/q '[:find ?track-name ?minutes:in $ ?artist-name:where[?artist :artist/name ?artist-name][?track :track/artists ?artist][?track :track/duration ?millis][(quot ?millis 60000) ?minutes][?track :track/name ?track-name]] db \"John Lennon\") ;=> ;#{[\"Crippled Inside\" 3] ;  [\"Working Class Hero\" 3] ;  [\"Sisters, O Sisters\" 3] ;  ...} ; multi-step calculation for celsius (d/q '[:find ?celsius .:in $ ?fahrenheit:where[(- ?fahrenheit 32) ?f-32][(/ ?f-32 1.8) ?celsius]] db 212) ; => 212 Built-in expression functions and predicates (more) get-else ; show \"N/A\" when the artist's startYear is not in the database (d/q '[:find ?artist-name ?year:in $ [?artist-name ...]:where[?artist :artist/name ?artist-name][(get-else $ ?artist :artist/startYear \"N/A\") ?year]] db [\"Crosby, Stills &amp; Nash\" \"Crosby &amp; Nash\"]) ; => #{[\"Crosby &amp; Nash\" \"N/A\"] [\"Crosby, Stills &amp; Nash\" 1968]} get-some ; find :country/name for entity and then falls back to :artist/name (d/q '[:find [?e ?attr ?name]:in $ ?e:where[(get-some $ ?e :country/name :artist/name) [?attr ?name]]] db :country/US) ; => [:country/US 84 \"United States\"] missing ; all artists whose start year has not been recorded (d/q '[:find ?name:where [?artist :artist/name ?name][(missing? $ ?artist :artist/startYear)]] db)  ; => ; #{[\"Sigmund Snopek III\"] ;   [\"De Labanda's\"] ;   [\"Baby Whale\"] ;   ...} tx-ids ; all transactions from time t 1000 through 1050 (def log (d/log conn)) (d/q '[:find [?tx ...]:in ?log:where [(tx-ids ?log 1000 1050) [?tx ...]]] log)  ; => [13194139534340 13194139534312 13194139534313 13194139534314]) tx-data ; find entities referenced by the transaction id (def log (d/log conn)) (d/q '[:find [?e ...]:in ?log ?tx:where [(tx-data ?log ?tx) [[?e]]]] log 13194139534312)  ; => [13194139534312 63 0 64 65 66 67 68 69 70 71 ...] Calling Java methods (more) Static methods ; calls System.getProperties, binding property names to ?k and property values to ?v (defn get-props [] (System/getProperties))  (d/q '[:find ?k ?v:where [(user/get-props) [[?k ?v]]]]) ; => ; #{[\"java.vendor.url.bug\" \"http://bugreport.sun.com/bugreport/\"] ;   [\"sun.cpu.isalist\" \"\"] ;   [\"java.runtime.name\" \"OpenJDK Runtime Environment\"] ;   ...} Instance methods ; calls System.getProperties, binding property names to ?k and property values to ?v (d/q '[:find ?k ?v:where[(System/getProperties) [[?k ?v]]][(.endsWith ^String ?k \"version\")]]) ; => ; #{[\"java.class.version\" \"52.0\"] ;   [\"java.runtime.version\" \"1.8.0_20-b26\"] ;   [\"java.version\" \"1.8.0_20\"] ;   ...} Clojure functions (more) ; extract the first 5 letters of each word (d/q '[:find [?prefix ...]:in [?word ...]:where [(subs ?word 0 5) ?prefix]] [\"hello\" \"galaxy\"]) ; => [\"galax\" \"hello\"] ; gets all values in a range from 1 to 10 (d/q '[:find ?v:in [?v ...]]  (range 1 10)) ; => #{[1] [2] [3] [4] [5] [6] [7] [8] [9]} Aggregates (more) ; the number of heads possessed by a set of mythological monsters (d/q '[:find (sum ?heads) .:with ?monster:in [[?monster ?heads]]], [[\"Cerberus\" 3][\"Medusa\" 1][\"Cyclops\" 1][\"Chimera\" 1]]) ; => 6 Aggregates returning a single value (min ?xs) (max ?xs) (count ?xs) (count-distinct ?xs) (sum ?xs) (avg ?xs) (median ?xs) (variance ?xs) (stddev ?xs) ; finds the smallest and largest track lengths (d/q '[:find [(min ?duration) (max ?duration)]:where [_ :track/duration ?duration]] db) ; => [3000 3894000] ; sums the total number of tracks on all media (d/q '[:find (sum ?count) .:with ?medium:where [?medium :medium/trackCount ?count]] db) ; => 100759 ; counts the total number of artist names ; counts the total number of unique artist names (d/q '[:find (count ?name) (count-distinct ?name):with ?artist:where [?artist :artist/name ?name]] db) ; => [[4601 4588]] ; reports the median, avg and stddev of song title lengths (in characters), ; and includes year in the find set to break out the results by year (d/q '[:find ?year (median ?namelen) (avg ?namelen) (stddev ?namelen):with ?track:where [?track :track/name ?name][(count ?name) ?namelen][?medium :medium/tracks ?track][?release :release/media ?medium][?release :release/year ?year]] db) ; => ; [[1968 16 18.92181098534824 12.898760656290335] ;  [1969 16 18.147895557287608 11.263945894977246] ;  [1970 15 18.007481296758105 12.076103750401026] ;  ...] Aggregates returning collections (distinct ?xs) (min n ?xs) (max n ?xs) (rand n ?xs) (sample n ?xs) ; find distinct values in a collection (d/q '[:find (distinct ?v) .:in [?v ...]]  [1 1 2 2 2 3]) ; find all distinct start years (d/q '[:find (distinct ?start-year) .:where [?e :artist/startYear ?start-year]] db) ; => ; #{1858 ;  1903 ;  1952 ;  ...} ; find the five shortest and five longest track lengths (d/q '[:find [(min 5 ?millis) (max 5 ?millis)]:where [?track :track/duration ?millis]] db) ; => [[3000 4000 5000 6000 7000] [3894000 3407000 2928000 2802000 2775000]] ; returns two random and two sampled artist names ; rand - selects exactly n items with potential for duplicates ; sample - returns up to n distinct items (d/q '[:find [(rand 2 ?name) (sample 2 ?name)]:where [_ :artist/name ?name]] db) ; => [(\"Cl√©o\" \"Santana\") [\"Audience\" \"Dave Holland Quartet\"]] Custom aggregates (more) ; What is the most common release medium length, in tracks? (defn mode[vals](->> (frequencies vals)(sort-by (comp - second))ffirst))  (d/q '[:find (user/mode ?track-count) .:with ?media:where [?media :medium/trackCount ?track-count]] db) ; => 2"},{"slug":"/blog/datomic-cheat-sheet-series-queries-part-3-rules/","title":"Datomic Cheat Sheet Series - Queries (Part 3) - Rules","tags":["Technical","Datomic","Database","Cheat sheet"],"html":"In this post I work through the creation of rules using the Datomic MusicBrainz sample database. The example queries are grabbed from the Datomic Docs and the Datomic mbrainz sample GitHub pages. If you want to get started with Datomic, check out the first post in the series. If you want to see other queries, then check out part 1 and part 2. Create a database connection Create an inline database connection (require '[datomic.api :as d]) (def db-uri \"datomic:dev://localhost:4334/mbrainz-1968-1973\") (def conn (d/connect db-uri)) (def db (d/db conn)) Create a database connection as a function (ns beryllium.core(:require [datomic.api :as d]))  (defn new-db [](let [db-uri \"datomic:dev://localhost:4334/mbrainz-1968-1973\"conn (d/connect db-uri)db (d/db conn)]db)) Rules are a named group of clauses that can be used to create reusable logical components that can be slotted into multiple :where clauses. This binds portions of the query's logic at query time. Create rules (def rules ' [[(track-name ?e ?t)[?e :track/name ?t]]])  (d/q '[:find ?e ?artist-name ?track-name:in $ % ?track-name:where(track-name ?e ?track-name)[?e :track/artists][?a :artist/name ?artist-name]] db rules \"Can't Find a Reason\")  ; => ; #{[17592186149695 \"McCully Workshop\" \"Can't Find a Reason\"] ;   [17592186149685 \"Love\" \"Can't Find a Reason\"] ;   [17592186149685 \"Bakerloo\" \"Can't Find a Reason\"] ;   ...} (def rules ' [[(track-name ?e ?t)[?e :track/name ?t]]])  (d/q '[:find ?e ?track-name ?duration:in $ % ?track-name:where(track-name ?e ?track-name)[?e :track/duration ?duration]] db rules \"Can't Find a Reason\")  ; => #{[17592186149695 \"Can't Find a Reason\" 271506] ;      [17592186149685 \"Can't Find a Reason\" 270573]} (def rules ' [[(track-release ?t ?r)[?m :medium/tracks ?t][?r :release/media ?m]]])  (d/q '[:find ?title ?album ?year:in $ % ?artist-name:where[?a :artist/name   ?artist-name][?t :track/artists ?a][?t :track/name    ?title](track-release ?t ?r)[?r :release/name  ?album][?r :release/year  ?year]] db rules \"John Lennon\")  ;=> ;#{[\"Yer Blues\" \"Live Peace in Toronto 1969\" 1969] ;  [\"Isolation\" \"John Lennon/Plastic Ono Band\" 1970] ;  [\"Open Your Box\" \"Power to the People\" 1971] ;  ...}"},{"slug":"/blog/datomic-cheat-sheet-series-queries-part-4-pull/","title":"Datomic Cheat Sheet Series - Queries (Part 4) - Pull","tags":["Technical","Datomic","Database","Cheat sheet"],"html":"In this post I work through pull expressions using the Datomic MusicBrainz sample database. The example queries are grabbed from the Datomic Docs. If you want to get started with Datomic, check out the first post in the series. If you want to see other queries, then check out part 1 and part 2. If you want to set up query rules then check out part 3. Create a database connection Create an inline database connection (require '[datomic.api :as d]) (def db-uri \"datomic:dev://localhost:4334/mbrainz-1968-1973\") (def conn (d/connect db-uri)) (def db (d/db conn)) Create a database connection as a function (ns beryllium.core(:require [datomic.api :as d]))  (defn new-db [](let [db-uri \"datomic:dev://localhost:4334/mbrainz-1968-1973\"conn (d/connect db-uri)db (d/db conn)]db)) Example pull expressions (def artist-id (:db/id (first (d/q '[:find ([pull ?e [:db/id] ...]):in $ ?name:where [?e :artist/name ?name]] db \"The Jimi Hendrix Experience\")))) ; => #'user/artist-id  artist-id ; => 17592186048480 (d/q '[:find ([pull ?e [*] ...]):in $ ?artist:where [?e :release/artists ?artist]] db artist-id)  ; => ; [{:release/name \"1968-10-12: Winterland, San Francisco, CA, USA (Early Show)\", ;   :release/artists [#:db{:id 17592186048480}], ;   :release/country #:db{:id 17592186045504}, ;   ...}] (d/q '[:find ([pull ?e [:release/name] ...]):in $ ?artist:where [?e :release/artists ?artist]] db artist-id)  ; => [#:release{:name \"1968-10-12: Winterland, San Francisco, CA, USA (Early Show)\"}] (d/q '[:find ([pull ?e [{:release/country [*]}] ...]):in $ ?artist:where [?e :release/artists ?artist]] db artist-id)  ;=> [#:release{:country {:db/id 17592186045504, :db/ident :country/US, :country/name \"United States\"}}] (d/q '[:find ([pull ?e [{:release/artists [{:artist/country [*]}]}] ...]):in $ ?artist:where [?e :release/artists ?artist]] db artist-id)  ; => ; [#:release{:artists [#:artist{:country {:db/id 17592186045576, :db/ident :country/GB, :country/name \"United Kingdom\"}}]}] (d/q '[:find (pull ?e pattern):in $ ?artist pattern:where [?e :release/artists ?artist]] db artist-id [:release/name :release/status])  ; => ; [[#:release{:name \"1968-10-12: Winterland, San Francisco, CA, USA (Early Show)\", :status \"Bootleg\"}] ;  [#:release{:name \"Electric Ladyland\", :status \"Official\"}] ;  [#:release{:name \"Axis: Bold as Love\", :status \"Official\"}] ;  ...] (d/q '[:find (pull ?e [:release/name]):in $ ?artist-name:where[?e :release/artists ?a][?a :artist/name ?artist-name]] db \"Led Zeppelin\")  ; => ; [[#:release{:name \"Immigrant Song / Hey Hey What Can I Do\"}] ;  [#:release{:name \"Heartbreaker / Bring It On Home\"}] ;  [#:release{:name \"Led Zeppelin III\"}] ;  ...] (d/q '[:find (pull ?e [:release/name]) (pull ?a [*]):in $ ?artist-name:where[?e :release/artists ?a][?a :artist/name ?artist-name]] db \"Led Zeppelin\")  ; => ; [[#:release{:name \"Led Zeppelin II\"} ;   {:artist/sortName \"Led Zeppelin\", ;    :artist/name \"Led Zeppelin\", ;    :artist/type #:db{:id 17592186045746}, ;    :artist/country #:db{:id 17592186045576}, ;    :artist/gid #uuid\"678d88b2-87b0-403b-b63d-5da7465aecc3\", ;    :artist/endDay 25, ;    :artist/startYear 1968, ;    :artist/endMonth 9, ;    :artist/endYear 1980, ;    :db/id 17592186050305}] ;    ...] (d/q '[:find (pull ?e [:release/name :release/artists]):in $ ?artist-name:where [?e :release/artists ?a][?a :artist/name ?artist-name]] db \"Led Zeppelin\")  ;=> ; [[#:release{:name \"Immigrant Song / Hey Hey What Can I Do\", :artists [#:db{:id 17592186050305}]}] ;  [#:release{:name \"Heartbreaker / Bring It On Home\", :artists [#:db{:id 17592186050305}]}] ;  [#:release{:name \"Led Zeppelin III\", :artists [#:db{:id 17592186050305}]}] ;  ...]  (d/pull db '[*] artist-id)  ; => ; {:artist/sortName \"Hendrix, Jimi, The, Experience\", ;  :artist/name \"The Jimi Hendrix Experience\", ;  :artist/type #:db{:id 17592186045746}, ;  :artist/country #:db{:id 17592186045576}, ;  :artist/gid #uuid\"33b3c323-77c2-417c-a5b4-af7e6a111cc9\", ;  :artist/startYear 1966, ;  :artist/endMonth 6, ;  :artist/endYear 1969, ;  :db/id 17592186048480} (d/pull db '[:artist/name :artist/gid] artist-id)  ; => #:artist{:name \"The Jimi Hendrix Experience\", :gid #uuid\"33b3c323-77c2-417c-a5b4-af7e6a111cc9\"}"},{"slug":"/blog/datomic-cheat-sheet-series-queries-part-5-transactions/","title":"Datomic Cheat Sheet Series - Queries (Part 5) - Transactions","tags":["Technical","Datomic","Database","Cheat sheet"],"html":" In this post I work through transactions. The example queries are grabbed from the Datomic Docs. If you want to get started with Datomic, check out the first post in the series. If you want to see other queries, then check out part 1 and part 2. If you want to set up query rules then check out part 3. If you want to learn more about pull then check out part 4. Create a database connection Create an inline database connection (require '[datomic.api :as d]) (def db-uri \"datomic:dev://localhost:4334/oxygen\") (def conn (d/connect db-uri)) (def db (d/db conn)) Create a database connection as a function (ns beryllium.core(:require [datomic.api :as d]))  (defn new-db [](let [db-uri \"datomic:dev://localhost:4334/oxygen\"conn (d/connect db-uri)db (d/db conn)]db)) Transact (require '[datomic.api :as d]) (def txn ...) (:db-after @(d/transact [txn])) (let [tempid (d/tempid :db.part/user)txn {:db/id tempid :person/name name :person/email \"curious-programmer.io@gmail.com\"}{:keys [db-after tempids]} @(d/transact-async conn [txn])key-id (d/resolve-tempid db-after tempids tempid)](get-person-by-id db-after key-id))) Identifying entities You can specify an entity id in three ways by using a:   a temporary id for a new entity being added to the database [[:db/add \"jdoe\" :person/first \"Jan\"] [:db/add \"jdoe\" :person/last \"Doe\"]] (d/tempid :db.part/user)   an existing id for an entity that's already in the database For example, this query retrieves the id of an existing entity based on an email address. [:find ?e :in $ ?email :where [?e :person/email ?email]] If the entity id returned by the query is 17592186046416, the following transaction data will set the entity's customer status: {:db/id 17592186046416 :customer/status :active} If the entity in question has a unique identifier, you can specify the entity id by using a lookup ref. Rather than querying the database, you can provide the unique attribute, value pair corresponding to the entity you want to assert or retract a fact for. Note that a lookup ref specified in a transaction will be resolved by the transactor. {:db/id [:customer/email \"joe@example.com\"] :customer/status :active}   an identifier for an entity that's already in the database In the example below, the entity is specified by the ident :person/name: [:db/add :person/name :db/doc \"A person's full name\"]   Add data transactions New entity [{:person/name \"Bob\":person/email \"bob@example.com\"}] Entity reference [{:db/id \"bobid\":person/name \"Bob\":person/spouse \"aliceid\"}{:db/id \"aliceid\":person/name \"Alice\":person/spouse \"bobid\"}] Cardinality many transactions [{:db/id #db/id[:db.part/user]:person/name \"Bob\":person/email \"bob@example.com\":person/aliases [\"Robert\" \"Bert\" \"Bobby\" \"Curly\"]}] Nested maps in transactions [{:db/id order-id:order/lineItems [{:lineItem/product chocolate:lineItem/quantity 1}{:lineItem/product whisky:lineItem/quantity 2}]}] Retract transactions [[:db/retract person-id :person/email \"curious-programmer.io@gmail.com\"]] [[:db.fn/retractEntity id-of-jane][:db.fn/retractEntity [:person/email \"jdoe@example.com\"]]] Compare and swap transactions The following example transaction data sets entity 42's :account/balance to 110, if and only if :account/balance is 100 at the time the transaction executes: [[:db.fn/cas 42 :account/balance 100 110]]"},{"slug":"/blog/setting-up-my-environment-in-fedora/","title":"Setting up my environment in Fedora","tags":["Technical","Fedora","Linux"],"html":"I needed to format my HDD because ... reasons. üòÅ For a change, I decided to play around with Fedora instead of Ubuntu. The installation was painless and the user experience is much like what I am used to. I had a few hiccups on this journey mainly due to my ignorance in the Linux domain. It started with difficulties with backing up my home directory. Eventually I came right by creating a new directory and copying what I wanted into it. This came with the risk of losing data. Then I faced issues with my hidden files so I created a dotfiles directory and copied what I wanted to it and un-hid them using a script I wrote inspired by a TecMint post because they wouldn't tar.#!/bin/bash#print usage if [ -z $1 ];thenecho &quot;Usage :$(basename $0) parent-directory&quot;exit 1fifor name in $1/.*; doif [ $(dirname &quot;${name}&quot;) != &quot;.&quot; ]; then new_name=&quot;$(dirname ${name})/$(basename &quot;${name}&quot; | cut -c 2-)&quot;echo &quot;Renaming&quot; $(dirname ${name})/$(basename &quot;${name}&quot;) &quot;to&quot; ${new_name}mv &quot;${name}&quot; &quot;${new_name}&quot;fi      doneexit 0# inspired by https://www.tecmint.com/rename-all-files-and-directory-names-to-lowercase-in-linux/view rawunhide.shhosted with &#10084; by GitHub  I know I must have been doing something wrong but my approach worked for what I needed, it just took time and effort. I archived the folder using tar and copied it to a virtual machine I own using rsync and to an external HDD. The copies were slow and somehow the copy to the HDD failed and I didn't verify its existence. Of course, the only backup of my SSH key was in the archive on my server which only had SSH access at the time. That was an ice cold feeling that I got when I wanted to get my file back. I had to go into rescue mode on my VM and enable password access. I added my new SSH key ssh-keygen to the authorized_keys on the VM and used rsync to get my backup across to my machine. I installed and configured everything until I noticed something strange with my HDD and mindlessly deleted a partition which resulted in a glorious destruction of HDD accessibility and my machine would not boot when I restarted. Fresh format and install, again. The steps I took were fresh in my mind so I made a note to document it.  Making backups Creating a boot disk Customizing my shell Installing apps "},{"slug":"/blog/setting-up-my-environment-in-fedora-creating-backups/","title":"Setting up my environment in Fedora - Creating backups","tags":["Technical","Linux","Fedora"],"html":"I had to re-install so I documented my process. In this post, I focus on getting my data backed up so that I can restore it after the installation.  Whatever isn't in git gets archived. This is mainly my home directory. I want it backed up to my VM at CloudAfrica and to my external HDD. If I have learned anything in this process it is that my SSH keys are the most vital piece of bits that I own and that I need one copy in a safe location. Whatever safe means in this world. Archive tar cpzvf &lt;archive>.tar.gz /home/&lt;username>  -c, --create -p, --preserve-permissions, --same-permissions -z, --gzip, --gunzip, --ungzip -v, --verbose -f, --file=ARCHIVE  Copy to server rsync -avzh &lt;username>@&lt;host>:/path/to/copy/to/&lt;archive>.tar.gz /path/to/copy/from/&lt;archive>.tar.gz  -a, --archive -v, --verbose -z, --compress -h, --human-readable  I had a few permissions hiccups trying to tar my home directory so I took extra steps to tackle these problems. Remote Git Repository I use my own remote git repository for directories that contain sensitive information. I followed these instructions to get set up. Create a git user and allow ssh access to authorized users. On the local machine copy the public key cat ~/.ssh/id_rsa.pub (or whichever public key you use) and paste it into .ssh/authorized_keys after it has been created. ssh &lt;username>@&lt;host> sudo adduser git su git mkdir /.ssh &amp;&amp; chmod 700 /.ssh touch .ssh/authorized_keys &amp;&amp; chmod 600 .ssh/authorized_keys Create the .git project and initialize it. cd /srv/git mkdir project.git cd project.git git init --bare Configure the git repo locally and point to the newly created remote repository. cd /home/&lt;user>/path/to/project git init git add . git commit -m \"Initial commit\" git remote add origin git@&lt;host>:/srv/git/project.git git push origin master _If you have problems pushing, check that the directory permissions are not assigned to root ls -lah. Assign the files and folders to git using sudo chown git _* Global save-to-git script Let's take a practical example: I want to store my Gnote notes to my remote repository.  Create a bash script save-gnote and add it to git. Make it add all unstaged files in the gnote directory and commit them using a timestamp in the commit message then push to origin.  #!/bin/bash  cd /home/&lt;user>/.local/share/gnote git add . git commit -m \"Backup $(date +%s)\" git push origin master  Give the script execution rights chmod a+x save-gnote. Create a symlink to access the script from anywhere.  ln -s /home/&lt;user>/.local/share/gnote/save-gnote /usr/local/bin/save-gnote  Access save-gnote from any directory in the terminal. "},{"slug":"/blog/setting-up-my-environment-in-fedora-creating-a-boot-disk/","title":"Setting up my environment in Fedora - Creating a boot disk","tags":["Technical","Linux","Fedora"],"html":"I had to re-install so I documented my process. In this post, I focus on getting a Fedora 28 live media installation ready on a USB boot disk so that I can begin the installation process.  Note: I am using a Lenovo Ideapad 330. When the logo appears on boot I need to enter the BIOS using the F2 key. In order to boot from USB I need to enable legacy boot and move the USB boot option to the top of the list. I used the dd command to convert and copy the ISO to the USB drive.  Download the ISO. Check out LinuxLookup for other distros. Display all disk partitions to get the USB device.  fdisk -l  #results Disk /dev/sdc: 7.5 GiB, 8053063680 bytes, 15728640 sectors Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disklabel type: dos Disk identifier: 0x3a663a44  Copy the ISO to the USB drive.  dd if=/path/to/Fedora-Workstation-Live-x86_64-28-1.1.iso of=/dev/sdc  if = input file - read from file instead of stdin of = output file - write to file instead of stdin  Note that there are other methods to create live installation images in the terminal and the GUI."},{"slug":"/blog/setting-up-my-environment-in-fedora-customizing-my-shell/","title":"Setting up my environment in Fedora - Customizing my shell","tags":["Technical","Fedora","Linux"],"html":"I had to re-install so I documented my process. In this post, I focus on configuring my shell for a personalized experience.  Install Oh My Zsh zsh is an interactive shell with many features that improve the command line experience. Oh My Zsh is a very popular plugin framework for zsh which comes with its own set of plugins and themes. zsh installation instructions are simple. Below are the Red Hat-based linux system instructions. sudo yum upgrade sudo yum install zsh zsh --version which zsh Oh My Zsh works best on Linux and MacOS and can be installed using curl or wget. sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\" #or sh -c \"$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)\" Install the powerlevel9k theme I love this theme. All you have to do is clone the repo to your .oh-my-zsh custom themes directory and edit the ~/.zshrc file. git clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k  vim ~/.zshrc ZSH_THEME=\"powerlevel9k/powerlevel9k\" Install fonts Powerline fonts are pre-patched and adjusted fonts that are used with the Powerline statusline plugin. sudo dnf -y install powerline-fonts Fira Code gives you a monospaced font with programming ligatures. I now use this font in IntelliJ and VS Code. sudo dnf -y copr enable evana/fira-code-fonts sudo dnf -y install -y fira-code-fonts To display nifty symbols in the statusline, I use awesome terminal fonts. git clone https://github.com/gabrielelana/awesome-terminal-fonts.git cd awesome-terminal-fonts cp -r ./build ~/.fonts fc-cache -fv ~/.fonts vim config/10-symbols.conf # PragmataPro => choose a filename from the .build directory. # I chose fontawesome-regular. cp config/10-symbols.conf ~/.config/fontconfig/conf.d # You may need to create this directory vim ~/.zshrc  ZSH_THEME=\"powerlevel9k/powerlevel9k\" POWERLEVEL9K_MODE='awesome-fontconfig'  # Add to the bottom of the file source ~/.fonts/*.sh rm -rf awesome-terminal-fonts Customize oh-my-zsh ZSH_THEME=\"powerlevel9k/powerlevel9k\" POWERLEVEL9K_MODE=\"awesome-fontconfig\" POWERLEVEL9K_PROMPT_ON_NEWLINE=true POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(dir vcs) POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status background_jobs command_execution_time time context) POWERLEVEL9K_SHORTEN_DIR_LENGTH=1 POWERLEVEL9K_SHORTEN_DELIMITER=\"\" POWERLEVEL9K_SHORTEN_STRATEGY=\"truncate_from_right\" POWERLEVEL9K_SHOW_CHANGESET=true POWERLEVEL9K_CHANGESET_HASH_LENGTH=8  POWERLEVEL9K_RIGHT_SEGMENT_SEPARATOR='' POWERLEVEL9K_RIGHT_SUBSEGMENT_SEPARATOR=''  POWERLEVEL9K_TIME_FOREGROUND='245' POWERLEVEL9K_COMMAND_EXECUTION_TIME_FOREGROUND='245' POWERLEVEL9K_STATUS_OK_FOREGROUND='green' POWERLEVEL9k_STATUS_ERROR_FOREGROUND='red' POWERLEVEL9k_STATUS_ERROR_FOREGROUND='red'  POWERLEVEL9K_TIME_BACKGROUND='clear' POWERLEVEL9K_COMMAND_EXECUTION_TIME_BACKGROUND='clear' POWERLEVEL9K_STATUS_OK_BACKGROUND='clear' POWERLEVEL9K_STATUS_ERROR_BACKGROUND='clear' POWERLEVEL9K_STATUS_ERROR_BACKGROUND='clear' POWERLEVEL9K_CONTEXT_DEFAULT_BACKGROUND='clear' zsh-syntax-highlighting plugin This plugin highlights commands while typing into an interactive terminal. git clone https://github.com/zsh-users/zsh-syntax-highlighting.git echo \"source ${(q-)PWD}/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\" >> ${ZDOTDIR:-$HOME}/.zshrc  vim ~/.zshrc  plugins=(...zsh-syntax-highlighting... )  # Right at the bottom of the file source ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting  ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor) ZSH_HIGHLIGHT_STYLES[cursor]='bold'  ZSH_HIGHLIGHT_STYLES[alias]='fg=green,bold' ZSH_HIGHLIGHT_STYLES[suffix-alias]='fg=green,bold' ZSH_HIGHLIGHT_STYLES[builtin]='fg=green,bold' ZSH_HIGHLIGHT_STYLES[function]='fg=green,bold' ZSH_HIGHLIGHT_STYLES[command]='fg=green,bold' ZSH_HIGHLIGHT_STYLES[precommand]='fg=green,bold' ZSH_HIGHLIGHT_STYLES[hashed-command]='fg=green,bold' zsh-autosuggestions plugin This plugin suggests commands as you type based on the command history. git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions  vim ~/.zshrc plugins=(...zsh-autosuggestions... ) Other plugins # Which plugins would you like to load? # Standard plugins can be found in ~/.oh-my-zsh/plugins/* # Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/ # Example format: plugins=(rails git textmate ruby lighthouse) # Add wisely, as too many plugins slow down shell startup. plugins=(gitzsh-syntax-highlightingzsh-autosuggestionshistorylast-working-dirlein ) For more plugins, check out awesome-zsh-plugins."},{"slug":"/blog/setting-up-my-environment-in-fedora-installing-apps/","title":"Setting up my environment in Fedora - Installing apps","tags":["Technical","Fedora","Linux"],"html":"I had to re-install so I documented my process. In this post, I focus on the installation of my most used apps.  Get dnf ready dnf is Dandified YUM, a .rpm-based distribution package manager. To speed up the upgrade download times, try using fastest mirror. # Install the fastestmirror plugin to speed up the upgrade sudo yum install yum-plugin-fastestmirror sudo yum clean sudo yum update  sudo dnf upgrade Apps Here are some of the apps I use and where to download them from.  Chrome GNOME Tweaks IntelliJ VS Code Terminator VNC Viewer Slack Skype Datomic  IntelliJ Inotify watches limit  Add the following line to either /etc/sysctl.conf file or a new *.conf file (e.g. idea.conf) under /etc/sysctl.d/ directory:  fs.inotify.max_user_watches = 524288  Then run this command to apply the change:  sudo sysctl -p --system And don't forget to restart your IDE. Note: the watches limit is per-account setting. If there are other programs running under the same account which also uses Inotify the limit should be raised high enough to suit needs of all of them. No nREPL ack received The REPL is taking too long to connect and the timeout set in IntelliJ might be too low. Settings -&gt; Languages &amp; Frameworks -&gt; Clojure -&gt; REPL startup timeout You can bump that up while you investigate why the startup takes so long. Java SDK sudo dnf search openjdk | grep devel sudo dnf install -y java-1.8.0-openjdk-devel.x86_64 java -version which java Node.js sudo dnf search nodejs | grep \"nodejs\\.\" sudo dnf install -y nodejs.x86_64 node --version which node To get the latest version of nodejs (v.10.x): sudo dnf remove nodejs curl --silent --location https://rpm.nodesource.com/setup_10.x | sudo bash - sudo yum -y install nodejs node --version which node Leiningen Leiningen is the easiest way to use Clojure. Leiningen and Clojure rquire Java. OpenJDK version 8 is recommended at this time. curl -o lein https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein chmod a+x lein mv /usr/bin lein Gatsby I use Gatsby for my blog so I need to install it to build, test and deploy my website. sudo npm install --global gatsby-cli Vim sudo yum install -y vim Stopwatch#!/bin/bashecho &quot;Stopwatch&quot;date1=`date +%s`;while true; doecho -ne &quot;$(date -u --date @$((`date +%s` - $date1)) +%H:%M:%S)\\r&quot;;sleep 0.1done# chmod +x stopwatch# stopwatchview rawstopwatch.shhosted with &#10084; by GitHub  Countdown timer#!/bin/bashecho &quot;Countdown&quot;date1=$((`date +%s` + $1));while [ &quot;$date1&quot; -ge `date +%s` ]; doecho -ne &quot;$(date -u --date @$(($date1 - `date +%s`)) +%H:%M:%S)\\r&quot;;sleep 0.1done# chmod +x countdown# countdown 60view rawcountdown.shhosted with &#10084; by GitHub  Datomic  Add license-key to config/dev-transactor.properties which is copied and renamed from config/samples/dev-transactor-template.properties  Create console.sh #!/bin/bash ./bin/console -p 8080 dev datomic:dev://localhost:4334 chmod a+x console.sh sudo ln -s /home/&lt;user>/Workspace/datomic-pro-0.9.5703/console.sh /usr/bin/datomic-console   Create transactor.sh #!/bin/bash ./bin/transactor config/dev-transactor.properties chmod a+x transactor.sh sudo ln -s /home/clarice/Workspace/datomic-pro-0.9.5703/transactor.sh /usr/bin/datomic-transactor  "},{"slug":"/blog/logging-to-graylog-in-clojure/","title":"Logging to Graylog in Clojure","tags":["Technical","Clojure","Graylog","Logging"],"html":"It's simple. I wanted to log to Graylog from my Clojure application. I banged my head numerous times trying to figure out how and why it did't want to work. Here's what I did to complete my mission. Graylog Go to System > Inputs > Gelf UDP / TCP > Launch new input. By default that input will be created on port 12201. Using Timbre Add [com.taoensso/timbre &quot;4.10.0&quot;] to your project file. In the middleware or where you configure your logging on startup, add this configuration: (ns wildfire.logging(:require[taoensso.timbre :as timbre][taoensso.timbre.appenders.core :as appenders][taoensso.timbre.appenders.3rd-party.gelf :as gelf])) ; This configuration includes the console and file appenders (defn init [config](timbre/with-config(timbre/merge-config!{:level        :info:ns-blacklist [\"*datomic*\"]:output-fn    (partial timbre/default-output-fn {:stacktrace-fonts {}}):appenders    {:println (appenders/println-appender):spit    (appenders/spit-appender {:fname \"log/wildfire.log\" :append? true}):gelf    (gelf/gelf-appender \"graylog.example.com\" 12201 :udp)}}))) Using Logstash Gelf I chose to give mp911de/logstash-gelf a bash for now. Add a Gelf dependency to your project file [biz.paluch.logging/logstash-gelf &quot;1.12.0&quot;] Edit the configuration file: env > [dev | prod] > resources > logback.xml with the configuration for that Gelf dependency. &lt;appender name=\"gelf\" class=\"biz.paluch.logging.gelf.logback.GelfLogbackAppender\">&lt;host>udp:graylog.example.com&lt;/host>&lt;port>12201&lt;/port>&lt;version>1.1&lt;/version>&lt;facility>wildfire&lt;/facility>&lt;extractStackTrace>true&lt;/extractStackTrace>&lt;filterStackTrace>true&lt;/filterStackTrace>&lt;mdcProfiling>true&lt;/mdcProfiling>&lt;timestampPattern>yyyy-MM-dd HH:mm:ss,SSS&lt;/timestampPattern>&lt;maximumMessageSize>8192&lt;/maximumMessageSize>&lt;filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\">&lt;level>INFO&lt;/level>&lt;/filter> &lt;/appender> &lt;root level=\"INFO\">&lt;appender-ref ref=\"gelf\" /> &lt;/root> Things that went wrong  I was using the wrong Graylog input: I had setup a Syslog input on port 1514. I was connecting to that instead of a Gelf input configured in Graylog. The Gelf reference did not exist in my project: With Timbre working, I knew I was on the right track. Something was wrong with logback. An old appender existed in the configuration file and the namespace for that class was not referenced in the project. I found mp911de/logstash-gelf, updated my project.clj and it still didn't work. The configuration was invalid: RTFM! I updated the configuration to use the properties defined in the spec and it worked.  I am so new to configuring logging in Clojure that I confused myself silly. At least I now have a working implementation that makes me happy."},{"slug":"/blog/setting-up-solr-on-nginx-with-lets-encrypt/","title":"Setting up Solr on Nginx with Let's Encrypt","tags":["Technical","Solr","Nginx","Let's Encrypt"],"html":"I want to enable search on my blog. I started looking into different solutions. I started with ElasticSearch but came across too many issues to get it setup that I paused on that and moved on to Solr. I fully intend on working with ElasticSearch and Kibana soon. Setting up Solr comes with its own set of challenges, some blatantly obvious mistakes that I made and others that required a little bit of digging.  I configured my solution on a virtual server running Fedora 25.  Install Solr  Solr is an open source enterprise search platform, written in Java, from the Apache Lucene project. Its major features include full-text search, hit highlighting, faceted search, real-time indexing, dynamic clustering, database integration, NoSQL features and rich document handling.  Missing dependency The Solr installation guide is quite straightforward but I got an error because of a missing dependency. It wanted the lsof package which \"lists open files\". It can get a list of all open files and the processes that opened them. sudo dnf install lsof Install package I downloaded the package referenced in the installation guide using curl: curl http://mirror.za.web4africa.net/apache/lucene/solr/7.6.0/solr-7.6.0-src.tgz -o solr-7.6.0-src.tgz  tar xzf solr-7.6.0.tgz solr-7.6.0/bin/install_solr_service.sh --strip-components=2  ./install_solr_service.sh solr-7.6.0.tgz The solr user will be created by the installation script which will own /opt/solr and /var/solr. Once the script completes, Solr will be installed as a service and running in the background on your server on port 8983. sudo service solr status Open firewall I temporarily opened port 8983 while I was working on the project. I had to open the port on my server's firewall and through my hosting provider's firewall done through their admin interface. First, I need to ensure that the firewall is enabled on my server: sudo firewall-cmd --state I need to add the Solr port to the firewall: sudo firewall-cmd --zone=public --permanent --add-port=8983/tcp Once I have made a change to the firewall, I need to reload it for the change to take effect: sudo firewall-cmd --reload Verify that my changes took effect: sudo firewall-cmd --zone=public --list-ports Test connection Open a browser and browse to http://localhost:8983/solr or curl http://localhost:8983/solr. Test it remotely by accessing it with your public IP address. Reflection My connections were timing out and I had double checked my configuration. After Googling, the obvious answer hit me: firewall. I had made the changes but forgot to reload the firewall for the change to take effect. Add a Solr core  A Solr Core is a running instance of a Lucene index that contains all the Solr configuration files required to use it. We need to create a Solr Core to perform operations like indexing and analyzing. A Solr application may contain one or multiple cores.  Using the solr user created during the installation, I create a new core. su solr cd /opt/solr/bin ./solr create -c collection_name See the core now available in the web interface ready to index some data: http://localhost:8983/solr/#/~cores/collection_name Side note: You can delete a core using the delete command ./solr delete -c collection_name Curve ball: I received a warning about my ulimit settings *** [WARN] *** Your open file limit is currently 1024.It should be set to 65000 to avoid operational disruption.If you no longer wish to see this warning, set SOLR_ULIMIT_CHECKS to false in your profile or solr.in.sh I set it to the suggested amount. I am not sure if I did this correctly though. ulimit -a ulimit -n 65000 Reflection Don't be scared of creating, deleting and recreating things, especially in the beginning, while learning. Break it, fix it, understand it, learn it. Scrape Solr Solr needed some data and I found a really useful python tutorial to create a crawler for my blog which will be hosted on my Fedora server, a server not hosting my blog. Missing dependencies While setting up I came across the following missing dependencies  sudo dnf install python-devel :The libraries and header files needed for Python development   pip install twisted: An extensible framework for Python programming, with special focus on event-based network programming and multiprotocol integration.  Install Scrapy Prepare to run Scrapy in a python virtualenv: PROJECT_DIR=~/projects/scrapy mkdir $PROJECT_DIR cd $PROJECT_DIR virtualenv scrapyenv source scrapyenv/bin/activate pip install scrapy Create a Scrapy application: scrapy startproject blog cd blog Edit blog/items.py to indicate what needs to be indexed: from scrapy.item import Item, Field  class BlogItem(Item):title = Field()url = Field()text = Field() Create a spider to crawl my blog: from scrapy.spider import BaseSpider from scrapy.selector import HtmlXPathSelector from scrapy.http import Request from blog.items import BlogItem from scrapy.item import Item from urlparse import urljoin import re  class BlogSpider(BaseSpider):name = 'blog'allowed_domains = ['curiousprogrammer.io']start_urls = ['https://curiousprogrammer.io/']seen = set()def parse(self, response):if response.url in self.seen:self.log('already seen  %s' % response.url)else:self.log('parsing  %s' % response.url)self.seen.add(response.url)hxs = HtmlXPathSelector(response)if re.match(r'https://curiousprogrammer.io/blog/\\S.*$', response.url):item = BlogItem()item['title'] = hxs.select('//title/text()').extract()item['url'] = response.urlitem['text'] = hxs.select('//div[@id=\"post\"]//child::node()/text()').extract()self.log(\"yielding item \" + response.url)yield itemfor url in hxs.select('//a/@href').extract():url = urljoin(response.url, url)if not url in self.seen and not re.search(r'.(pdf|zip|jar|gif|png|jpg)$', url):self.log(\"yielding request \" + url)yield Request(url, callback=self.parse) Crawl the blog. An items.json file is generated. It will be appended to each time a crawl is processed outputting to the same file. scrapy crawl blog -o items.json -t json The tutorial showcases a index python script using pysolr but it didn't work for me. I indexed it directly through the Solr API using curl. curl \"http://localhost:8983/solr/collection_name/update/json/docs?commit=true\" -H \"Content-type:application/json\" --data-binary @items.json I set up a daily cronjob to index data using crontab through vim ~/projects/scrapy/blog/crawl-and-index: #!/bin/bash  echo \"Delete entries from Solr\" curl http://localhost:8983/solr/oxygen/update --data '&lt;delete>&lt;query>*:*&lt;/query>&lt;/delete>' -H 'Content-type:text/xml; charset=utf-8' curl http://localhost:8983/solr/oxygen/update --data '&lt;commit/>' -H 'Content-type:text/xml; charset=utf-8'  echo \"Remove existing scraped database\" cd /root/projects/scrapy/blog rm items.json  echo \"Enter they scrapy virtualenv\" source ../scrapyenv/bin/activate  echo \"Start crawling your blog...\" scrapy crawl blog -o items.json -t json  echo \"Index Solr with crawled database\" curl \"http://localhost:8983/solr/oxygen/update/json/docs?commit=true\" -H \"Content-type:application/json\" --data-binary @items.json  echo \"Bye!\" crontab -e @daily ~/projects/scrapy/blog/crawl-and-index Setup your hosting environment I no longer wanted to access the Solr API publically using the port. To achieve this, I had to configure a reverse proxy. A great benefit to using this approach is the usage of SSL. For me to get SSL to work, I had to start by getting a domain name. Get a domain name You can get a free domain name at freenom or other services that are available. To release your inner geek, you can update your host's name: sudo hostname new_host_name  sudo vim /etc/hostname Update your /etc/hosts to look something as follows: 127.0.0.1    new_host_name Add your nameservers that your domain registrar will provide to you: vim /etc/resolv.conf  # Generated by NetworkManager search new_host_name nameserver &lt;IP> nameserver &lt;IP> nameserver 8.8.8.8 #Google Create a webserver with Nginx  NGINX is a high-performance HTTP server and reverse proxy, as well as an IMAP/POP3 proxy server. NGINX is known for its high performance, stability, rich feature set, simple configuration, and low resource consumption.  sudo dnf install nginx # Start NGINX when system boots sudo systemctl enable nginx # Start NGINX sudo systemctl start nginx # Check NGINX Status sudo systemctl status nginx Create an SSL Certificate with Let's Encrypt Install certbot, configure it and then create a cron job to automatically renew the certificate every twelve months sudo dnf install certbot-nginx crontab -e 0 12 * * * /usr/bin/certbot renew --quiet Redirects Configure server on port 80 to redirect all traffic to SSL: server {listen       80 default_server;listen       [::]:80 default_server;server_name  *.example.com;root         /usr/share/nginx/html;# Load configuration files for the default server block.include /etc/nginx/default.d/*.conf;if ($scheme != \"https\") {return 301 https://$host$request_uri;} } Verify that port 443 is configured correctly: Configure server on port 443: server {listen       443 ssl http2 default_server;listen       [::]:443 ssl http2 default_server;server_name  *.example.com;root         /usr/share/nginx/html;ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem; # managed by Certbotssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem; # managed by Certbotinclude /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbotssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot# Load configuration files for the default server block.include /etc/nginx/default.d/*.conf;location / {} } Then add hosted applications underneath the last location statement. In this case I am directing all incoming /solr traffic to localhost:8983 so that I can run Solr on HTTPS. # This is our Solr instance # We will access it through SSL instead of using the port directly location /solr {proxy_set_header Host $host;proxy_set_header X-Real-IP $remote_addr;proxy_pass \"http://localhost:8983\"; }  error_page 404 /404.html;location = /40x.html { }  error_page 500 502 503 504 /50x.html;location = /50x.html { } Test this in a browser or by running a curl command. If connections time out, double check the firewall rules, this time making sure 443 is open on host and hosting provider and that the firewall has been reloaded. Dropping access to ports I no longer need to expose Solr's port so I can drop it from the firewall. sudo firewall-cmd --zone=public --permanent --remove-port=8983/tcp sudo firewall-cmd --reload sudo firewall-cmd --zone=public --list-ports Consume the API When ready to consume the API using a JavaScript application, it is highly likely that you encounter a Cross-Origin Resource Sharing error when trying to make calls to the remote server. The reverse proxy and the Solr application haven't been explicitly told to give you the resources you are requesting.  Cross-Origin Resource Sharing (CORS) is a mechanism that uses additional HTTP headers to tell a browser to let a web application running at one origin (domain) have permission to access selected resources from a server at a different origin. A web application makes a cross-origin HTTP request when it requests a resource that has a different origin (domain, protocol, and port) than its own origin.  The error goes along the lines of Access to XMLHttpRequest at 'https://example.com/solr/collection_name/select' from origin 'http://localhost:8081' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource. Reverse proxy To enable CORS on the reverse proxy we need to edit the /etc/nginx/nginx.conf file. In this example I configure Nginx CORS to support the reverse proxied Solr API. location /solr {proxy_set_header Host $host;proxy_set_header X-Real-IP $remote_addr;proxy_pass \"http://localhost:8983\";set $cors '';if ($http_origin ~ '^http(s)*?://(localhost|www\\.curiousprogrammer\\.io)') {set $cors 'true';}if ($cors = 'true') {add_header 'Access-Control-Allow-Origin' \"$http_origin\" always;add_header 'Access-Control-Allow-Credentials' 'true' always;add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;add_header 'Access-Control-Expose-Headers' 'Authorization' always;}if ($request_method = 'OPTIONS') {# Tell client that this pre-flight info is valid for 20 daysadd_header 'Access-Control-Max-Age' 1728000;add_header 'Content-Type' 'text/plain charset=UTF-8';add_header 'Content-Length' 0;return 204;} } Application layer It can also be applied on the Solr application layer as it ships with the Jetty servlet engine. cd /opt/solr/server/solr-webapp/webapp/WEB-INF/lib  curl \"http://search.maven.org/remotecontent?filepath=org/eclipse/jetty/jetty-servlets/8.1.14.v20131031/jetty-servlets-8.1.14.v20131031.jar\" -o jetty-servlets-8.1.14.v20131031.jar  curl \"http://search.maven.org/remotecontent?filepath=org/eclipse/jetty/jetty-util/8.1.14.v20131031/jetty-util-8.1.14.v20131031.jar\" -o jetty-util-8.1.14.v20131031.jar Edit server/solr-webapp/webapp/WEB-INF/web.xml&lt;filter>&lt;filter-name>cross-origin&lt;/filter-name>&lt;filter-class>org.eclipse.jetty.servlets.CrossOriginFilter&lt;/filter-class>&lt;init-param>&lt;param-name>allowedOrigins&lt;/param-name>&lt;param-value>http://localhost:8081,https://curiousprogrammer.io&lt;/param-value>&lt;/init-param>&lt;init-param>&lt;param-name>allowedMethods&lt;/param-name>&lt;param-value>GET,POST,OPTIONS,DELETE,PUT,HEAD&lt;/param-value>&lt;/init-param>&lt;init-param>&lt;param-name>allowedHeaders&lt;/param-name>&lt;param-value>origin, content-type, accept&lt;/param-value>&lt;/init-param>&lt;/filter>&lt;filter-mapping>&lt;filter-name>cross-origin&lt;/filter-name>&lt;url-pattern>/*&lt;/url-pattern>&lt;/filter-mapping> My final thoughts This exercise took me a day and a half to figure out. It took me another day to make sense of it all to write about it. I made a lot of silly mistakes that could have been avoided had I just taken a few extra breaks to clear my head. When something goes wrong and I am highly uncertain about the technology, domain or intricacies of the problem, it becomes extremely challenging to translate that into search terms. This is sometimes overwhelming. The best advice I can give is to break down the problem as much as possible and unpack logically how each component fits together and what could possibly be causing an issue. This could extract more useful search terms or actually help solve the problem. If it isn't that simple and you have error messages, copy them verbatim and read and re-read the errors and solutions presented to you, even if some of them might not seem related. Something might stand out or spark a thought. If you don't have error messages, spit ball with terms you do know that you are working with and problems you think you may be experiencing. Most importantly, make notes of what you are doing. You never know when you might need it again. You could also just jot it down and blog about it to help you and others experiencing the same challenges that you are facing regardless of how large or small.  With regards to Solr, it's early days. Looking back at the actual steps I had to take to install it, the setup and installation is really simple. It was finding that information that was the tricky part for me because there is a lot of information out there. The blog crawler was an interesting find and I am glad that it is in Python because it's a language I feel worthwhile learning. The crawler does a dandy job and exactly what I need it to do for now. I enjoy working with Nginx as I am now accustomed to it and Let's Encrypt was fairly straightforward to configure once the domain name was correctly configured. Next is actually configuring this solution into a React component on my Gatsby website. A tale for another day. References Solr  Taking Solr to Production Create a Core File Handles and Processes (ulimit settings) Going Cross-Origin with Solr  Scraping  Install Scrapy on Linux Scrapy installation guide Indexing websites in Solr with Python Crontab in Linux with 29 useful examples to schedule jobs StackOverflow: Match rest of string with regex Online regex tester and debugger: PHP, PCRE, Python, Golang and JavaScript  Hosting  Find a new free domain with freenom Ubuntu Linux Change Hostname (computer name) Nginx install Install Nginx Web Server on Fedora Getting started with Let's Encrypt Install Let's Encrypt using certbot with nginx on Fedora Cross-Origin Resource Sharing (CORS) Example Nginx configuration for adding cross-origin resource sharing (CORS) support to reverse proxied APIs "},{"slug":"/blog/a-service-has-gone-rogue-how-do-i-manage-it/","title":"A Service Has Gone Rogue. How Do I Manage It?","tags":["Technical","Linux","Fedora","Cheat Sheet"],"html":"Once I installed a development service on port 3000 and I forgot about it. When I ran my project I couldn't start it because the port was in use. Baffled. üòï  This post forms part of a sequence of command line references that I will be writing where I forget the command or its syntax. Although it is easily Google-able, there are usually a chain of commands that I want kept together for ease of use. The commands I use should be universal but just in case, I am running Fedora release 28 (Twenty Eight).  Also, if you want to contribute something interesting in any of my posts, please create a pull-request or write a comment below. üòÑ   Getting back to my forgetfulness. I wanted to know what was using that port. I'll get to that. First let's take a look at how I interrogate the system to get a list of running services. systemctl let's us query or send control commands to the systemd manager.systemd starts core programs, journal of system activity, the network stack, a cron-style job scheduler, user logins and other jobs. Find out more at ZDNet. If we want to find a list of installed programs and services (units) that are enabled: systemctl list-unit-files | grep enabled If we want to print out all services and see if they have been loaded or not: systemctl -l --type service --all What service is hogging my port? To get to the meat of the problem I interrogate the network, get a pid and kill it. I can also uninstall the service if I no longer want it to run. netstat prints network connections, routing tables, interface statistics, masquerade connections, and multicast memberships. When I run the below command, I can see the program name and pid sudo netstat -tulpn | grep 3000 Another command can be run using ss which is a utility to investigate sockets. sudo ss -lptn 'sport = :3000' Just stop the service for now sudo systemctl stop [servicename] sudo systemctl disable [servicename] Killing processes Once I have a pid for the process I want to shut down, I can kill it. First I query the process to make doubly sure ps -aux | grep 12345 Then I can kill it sudo kill 12345. In some cases, the kill doesn't want to play along in which case I need to force it, sudo kill -9 12345. Uninstall the service If I am adamant that the service should not exist, I can uninstall it. sudo systemctl stop [servicename] sudo systemctl disable [servicename] sudo rm /etc/systemd/system/[servicename] sudo rm /etc/systemd/system/[servicename] #symlinks that might be related sudo systemctl daemon-reload sudo systemctl reset-failed Summary systemctl list-unit-files | grep enabled systemctl -l --type service --all sudo netstat -tulpn | grep 3000 sudo ss -lptn 'sport = :3000' ps -aux | grep 12345 sudo kill 12345 sudo kill -9 12345 systemctl stop [servicename] systemctl disable [servicename] rm /etc/systemd/system/[servicename] rm /etc/systemd/system/[servicename] systemctl daemon-reload systemctl reset-failed References  Linus Torvalds and others on Linux's systemd - ZDNet How to remove systemd services - superuser "},{"slug":"/blog/checking-disk-usage-in-linux/","title":"Checking Disk Usage in Linux","tags":["Technical","Linux","Terminal","Cheat Sheet"],"html":"I had to find out much free space was available on a file system on a Linux server. Now getting this information on the GUI is simple - a few clicks, modals and stuff, but the server doesn't have a GUI so it's off to the terminal I go üòã The other scenario I faced was figuring out the disk usage of certain files and directories. I accumulated a bunch of commands through co-workers and Google, jotted them down and decided that this post will be my research and cheat sheet. I hope future me and you can benefit from this.  This post forms part of a sequence of command line references that I will be writing where I forget the command or its syntax or find it interesting enough to document. Although it is easily Google-able, there are usually a chain of commands that I want kept together for reference. The commands I use should be universal but just in case, I am running Fedora release 28 (Twenty Eight) and Zsh. Sometimes I will refer to server commands in which case I will specify the server OS.  Also, if you want to contribute something interesting in any of my posts, please create a pull-request or write a comment below. üòÑ    Just so by the way, I find this freakin' awesome: Use -- -x to grep anything starting with a -. I find this useful when looking up switches for programs in their manuals man sudo | grep -- -u. A more efficient way is to man sudo press / enter your search phrase, press n for next until you find your switch. You can read everything about the switch instead of one line.  Getting disk space for your file system df will show you the amount of disk space available on your file system. Blocks 1K-blocks     Used Available Use%8145968        0   8145968   0% Disk space is shown in 1K blocks unless its overridden when the environment variable POSIXLY_CORRECT is set. Then 512 byte blocks are used.  By the way, according to the GNU standards: \"GNU utilities mostly follow specifications of POSIX.2. POSIX.2 specifies that df and du must output sizes by default in units of 512 bytes. What users want is units of 1K, so that is what we do by default. If you want the ridiculous behavior ‚Äúrequired‚Äù by POSIX, you must set the environment variable POSIXLY_CORRECT (which was originally going to be named POSIX_ME_HARDER).\"  Sizes You can print sizes in a more human friendly way using the -h switch. df -h Size  Used Avail Use% 7.8G     0  7.8G   0% Usage reports Local mounted file systems When you run df -h you will get a usage report on all mounted file systems with human readable sizes. The -l switch will only print local file systems which excludes any remote file systems. df -lh ‚ûú  resources  ‚ûú df -lh Filesystem               Size  Used Avail Use% Mounted on devtmpfs                 7.8G     0  7.8G   0% /dev tmpfs                    7.8G  178M  7.7G   3% /dev/shm tmpfs                    7.8G  2.0M  7.8G   1% /run tmpfs                    7.8G     0  7.8G   0% /sys/fs/cgroup /dev/mapper/fedora_root   49G   18G   29G  38% / tmpfs                    7.8G   15M  7.8G   1% /tmp /dev/sda1                976M  242M  668M  27% /boot /dev/mapper/fedora_home  976G   68G  859G   8% /home tmpfs                    1.6G   16K  1.6G   1% /run/user/42 tmpfs                    1.6G  8.5M  1.6G   1% /run/user/1000 You can pass in paths and file names as arguments. You will get the disk space available for the file systems each one is on. df -lh / ~ ‚ûú  ~ ‚ûú df -lh / ~ Filesystem               Size  Used Avail Use% Mounted on /dev/mapper/fedora_root   49G   18G   29G  39% / /dev/mapper/fedora_home  976G   80G  847G   9% /home Pseudo, duplicate and inaccessible file systems There are also pseudo, duplicate and inaccessible file systems. You can get information on all of them using the all -a switch. df -lah ‚ûú  resources  ‚ûú df -lah Filesystem                Size  Used Avail Use% Mounted on sysfs                        0     0     0    - /sys proc                         0     0     0    - /proc devtmpfs                  7.8G     0  7.8G   0% /dev securityfs                   0     0     0    - /sys/kernel/security tmpfs                     7.8G  2.0M  7.8G   1% /run tmpfs                     7.8G     0  7.8G   0% /sys/fs/cgroup /dev/mapper/fedora_root    49G   18G   29G  38% / tmpfs                     7.8G   14M  7.8G   1% /tmp /dev/mapper/fedora_home   976G   80G  847G   9% /home ...  Pseudo file systems keep information about \"pretend\" file systems. It contains virtual entries which exist in RAM so it does not persist on reboots. Examples include /proc which is a procfs and dynamically generates directories for each process. /sys generates hardware layout for physical devices in the machine in a bunch of files and directories.   Getting disk usage for files and directories Usage estimation du estimates the disk usage of a bunch of files and directories that you choose. It will recursively calculate the usage of directories for you. The below command will operate on the current working directory. du -h ‚ûú  public  ‚ûú du -h 20K     ./html 28K     ./public/img 4.0K    ./public/js 8.0K    ./public/css 48K     ./public 8.0K    ./docs 80K     . The -s switch will only print out the summary of disk space used by each file and directory. du -hs ‚ûú  public  ‚ûú du -hs 80K     . You can pass in paths to directories and files to the get estimated disk usage for them. With -a you will get all files, not just directories. du -ah logos fonts ‚ûú public ‚ûú du -ah logos fonts 8.0K    logos/logo.png 4.0K    logos/128x128.png20K    logos/512x512.png 4.0K    logos/64x64.png 4.0K    logos/32x32.png44K    logos 4.0K    fonts/timeline.ttf 8.0K    fonts/timeline.svg12K    fonts/selection.json 4.0K    fonts/timeline.woff 4.0K    fonts/timeline.eot36K    fonts  du takes a shell pattern argument. This is not a regular expression. > ‚Ä¢ ? matches a single character. > ‚Ä¢ * matches any string.  Examples of how to use the file name shell pattern:  file.?ar will return files where the extension ends with a three letter extension ending in ?ar like tar and rar *.json will return all json files which you could also exclude using --exclude=&quot;*.json&quot;  Below I want all files excluding html and txt files. du -hs * --exclude=\"*.html\" --exclude=\"*.txt\" ‚ûú  public ‚ûú du -hs * --exclude=\"*.html\" --exclude=\"*.txt\" 4.0K\tfavicon.png 36K\t    fonts 13M\t    images 44K\t    logos Sorting results You can sort the output in reverse (-r) numerical order (-n) plus you can page through the results (less). du -h | sort -rn | less ‚ûú  resources  ‚ûú du -h | sort -rn | less 80K     . 48K     ./public 28K     ./public/img 20K     ./html 8.0K    ./public/css 8.0K    ./docs 4.0K    ./public/js Futhermore, you can print out 1 to the nth results. This includes the summary as it is part of the result set. du -h | sort -rn | head -n 3 ‚ûú  resources  ‚ûú du -h | sort -rn | head -n 3 80K     . 48K     ./public 28K     ./public/img Listing directories and files with their size Using the ls utility You can page through a column of all files and directories which include multiple attributes including the file size. This will include hidden files such as your dotfiles. ls -lah | less ‚ûú  imgs ‚ûú ls -lah | less total 48K drwxrwxr-x. 2 clarice clarice 4.0K Jan 12 06:05 . drwxrwxr-x. 7 clarice clarice 4.0K Jan 12 06:05 .. -rw-------. 1 clarice clarice 3.8K Jan 12 06:05 128x128.png -rw-------. 1 clarice clarice  989 Jan 12 06:05 32x32.png -rw-------. 1 clarice clarice  20K Jan 12 06:05 512x512.png -rw-------. 1 clarice clarice 1.9K Jan 12 06:05 64x64.png -rw-------. 1 clarice clarice 6.8K Jan 12 06:05 logo.png Note that there is a total on the top left showing how much space is being used. Sorting Use -S to sort by file size. The largest file size will be printed first. -r will reverse the sorting order. ls -lahS ls -lahSr Recursive listing Recursive directories are not supported by default. To list recursively add the -R switch but beware.  The buffer! Yeah, if you chose to run this command on / or any large project, you might not be able to see all your results. You could write your results to a file if you really need this information ls -lahR > space.out. If you notice that it is taking too long then you can tail -f space.out  ls -lahR ls -lahR > space.out tail -f space.out Using the tree utility tree is a utility that needs to be installed. It will recursively iterate and list your files in a really cool colored tree-like structure. No colors in the examples though üòî, so go on - use it. üòõ ‚ûú  public ‚ûú  tree . ‚îú‚îÄ‚îÄ favicon.png ‚îú‚îÄ‚îÄ fonts ‚îÇ   ‚îú‚îÄ‚îÄ selection.json ‚îÇ   ‚îú‚îÄ‚îÄ timeline.eot ‚îÇ   ‚îú‚îÄ‚îÄ timeline.svg ‚îÇ   ‚îú‚îÄ‚îÄ timeline.ttf ‚îÇ   ‚îî‚îÄ‚îÄ timeline.woff ‚îú‚îÄ‚îÄ google484846af030102e2.html ‚îú‚îÄ‚îÄ images ‚îÇ   ‚îî‚îÄ‚îÄ profile.jpg ‚îú‚îÄ‚îÄ index.html ‚îú‚îÄ‚îÄ logos ‚îÇ   ‚îú‚îÄ‚îÄ 128x128.png ‚îÇ   ‚îú‚îÄ‚îÄ 32x32.png ‚îÇ   ‚îú‚îÄ‚îÄ 512x512.png ‚îÇ   ‚îú‚îÄ‚îÄ 64x64.png ‚îÇ   ‚îî‚îÄ‚îÄ logo.png ‚îú‚îÄ‚îÄ manifest.webmanifest ‚îú‚îÄ‚îÄ render-page.js.map ‚îî‚îÄ‚îÄ robots.txt You can add file sizes to the tree by adding -s and combine it with -h to print out the human friendly file size next to each file and directory. tree -sh ‚ûú  public ‚ûú tree -sh . ‚îú‚îÄ‚îÄ [ 1.9K]  favicon.png ‚îú‚îÄ‚îÄ [ 4.0K]  fonts ‚îÇ   ‚îú‚îÄ‚îÄ [ 9.6K]  selection.json ‚îÇ   ‚îú‚îÄ‚îÄ [ 2.9K]  timeline.eot ‚îÇ   ‚îú‚îÄ‚îÄ [ 6.0K]  timeline.svg ‚îÇ   ‚îú‚îÄ‚îÄ [ 2.8K]  timeline.ttf ‚îÇ   ‚îî‚îÄ‚îÄ [ 2.8K]  timeline.woff ‚îú‚îÄ‚îÄ [   53]  google484846af030102e2.html ‚îú‚îÄ‚îÄ [ 4.0K]  images ‚îÇ   ‚îî‚îÄ‚îÄ [  35K]  profile.jpg ‚îú‚îÄ‚îÄ [ 1.7K]  index.html ‚îú‚îÄ‚îÄ [ 4.0K]  logos ‚îÇ   ‚îú‚îÄ‚îÄ [ 3.8K]  128x128.png ‚îÇ   ‚îú‚îÄ‚îÄ [  989]  32x32.png ‚îÇ   ‚îú‚îÄ‚îÄ [  20K]  512x512.png ‚îÇ   ‚îú‚îÄ‚îÄ [ 1.9K]  64x64.png ‚îÇ   ‚îî‚îÄ‚îÄ [ 6.7K]  logo.png ‚îú‚îÄ‚îÄ [  344]  manifest.webmanifest ‚îú‚îÄ‚îÄ [  97K]  render-page.js.map ‚îî‚îÄ‚îÄ [  122]  robots.txt  Cheat sheet Grep anything starting with - man sudo | grep -- -u Disk usage on file systems With human-readable sizes on all mounted file systems df -h Local file systems only df -lh For the file system each path/file specified is on df -lh / ~ For pseudo, duplicate and inaccessible file systems df -lah Disk usage of files Get estimated usage with human-readable sizes du -h Get a summary of disk space used du -hs Get all files for a give path du -ah public/logos Exclude files du -hs * --exclude=\"*.html\" --exclude=\"*.txt\" Sort du -h | sort -rn | less Get the top three sorted results du -h | sort -rn | head -n 3 Listing directories and files using ls Get a paged list of files and directories ls -lah | less Sort the results by file size ls -lahS | less Reverse the sorted results ls -lahSr | less Recursively list files and directories ls -lahR Print the output of a recursive list to a file ls -lahR > space.out Watch a file while it is being printed to tail -f space.out List a tree of files and directories with file sizes tree -sh Resources  man du man df man tree man ls Non-GNU Standards - gnu.org Differences between df, df-h and df -l - askubuntu What is a pseudo file system in Linux? - StackExchange Useful \"df\" Commands to Check Disk Space in Linux "},{"slug":"/blog/using-the-tar-command-in-linux/","title":"Using the tar Command in Linux","tags":["Technical","Linux","Terminal","Cheat Sheet"],"html":"I used to right-click on a zipped file and manage the archive using the GUI. Gone are those days. Now I mainly work with tar files and need a cheat sheet to remember the commands for the terminal. üòä You can find that at the end of this post.  This post forms part of a sequence of command line references that I will be writing where I forget the command or its syntax or find it interesting enough to document it. Although it is easily Google-able, there are usually a chain of commands that I want kept together for ease of use. The commands I use should be universal but just in case, I am running Fedora release 28 (Twenty Eight) and Zsh.  Also, if you want to contribute something interesting in any of my posts, please create a pull-request or write a comment below. üòÑ   Original post: 9 Jan 2019 Update: Covers the extraction of files without extracting the entire tar   List stuff Create Update Extract Compare to changes on the file system Using zip Cheat sheet  As far as I understand, tar files typically have the tar or tar.gz extensions. tar is the archive that can preserve permissions and directory structures and tar.gz is the compressed gzip-ed tar file. Listing the contents of an archive You can list the contents of an archive tar -tf archive.tar.gz without having to extract the data. When you want to see more information tar -tvf archive.tar.gz prints out details about the file including the permissions, owner, group, file size, modified date and time and the filename. Your can also run these commands as tar --file archive.tar.gz --list and tar --list --file archive.tar.gz --verbose What are all these switches?  t | -- list: tells tar to list everything in the archive v | -- verbose: verbose (optional), prints out as much information as it can for you f | -- file: specifies the file of the archive you want to list. (This must always be the last flag as it precedes the filename in the command unless you use --file)  Creating a new archive Archive Create a new archive for the awesome directory tar -cf archive.tar awesome or tar --create --file awesome. You can create an archive from any working directory tar -cf archive.tar /home/user/workspace/awesome tar -cvf archive.tar awesome or tar --create --verbose --file awesome will print out the files names that have been added to the archive. Compressed archive The same switches apply as above, however we include the -z or --gzip switches to indicate that the archive must be compressed. Create a compressed gzip tar archive tar -cvzf archive.tar.gz awesome.json or tar --create --verbose --gzip --file archive.tar.gz awesome.json for the awesome.json file. Create a compressed gzip tar archive tar -cvzf archive.tar.gz /path/to/awesome for the /path/to/awesome directory. If you want to archive and compress multiple members, chain the files and directories tar -cvzf archive.tar.gz /path/to/something another/awesome somewhere/sauce.json Exclusions In cases where you need to omit specific files or directories from an archive tar -czvf archive.tar.gz --exclude=\\*.gz /path/to/awesome will exclude any files with the .gz extension when creating the archive on path /path/to/awesome. To exclude multiple files and directions, exclusions can be chained tar -czvf archive.tar.gz --exclude=something.tar --exclude=somewhere /path/to/awesome The archive on path /path/to/awesome is created which excludes the something.tar file and somewhere directory. What are all these switches?  c | --create: tells tar to create a new archive v | --verbose: verbose (optional), prints out as much information as it can for you z | --gzip: compresses the archive using gzip (you can also use -j | --bzip2 for bzip2 compression) f | --file: specifies the file of the archive name that you want to create. (This must always be the last flag as it precedes the file name in the command unless you use the --file switch) --exclude: exclude files given as a pattern  Clean up Sometimes I need to clean up files in a directory once I have created the archive. An example is one of my logs directories. Once I have archived all the logs, I want to delete them but keep my archive and any existing archives. Using Zsh I run # In Zsh, you can use ^ to negate # a pattern with extendedglob enabled setopt extendedglob rm -- ^*.tar.gz Updating an archive tar cannot update compressed archives so you need to create an uncompressed archive. The -u or --update switch will append files newer than the copy in the archive. # Create a new archive without compression tar -cvf archive.tar /path/to/archive # Update or add files in /path/to/archive # tar will update and changed or added files tar -uvf archive.tar /path/to/awesome # You can then compress your archive gzip archive.tar.gz Extracting data Extract data tar -xf archive.tar or tar --extract --file archive.tar to its local directory. Extract a compressed archive tar -xvzf archive.tar.gz to its local directory. This extracts the files and decompresses them using gzip. Extract a compressed archive to another directory tar -xvzC /path/to/awesome -f sauce.tar The files in sauce.tar.gz are extracted to /path/to/awesome What are all these switches?  x | extract: tells tar to extract the files from the archive v | --verbose: verbose (optional), prints out as much information as it can for you z | --gzip: tells tar to decompress the archive using gzip - you can use j | --bzip2 for bzip2 C | --directory: change to directory f | --file: specifies the file of the archive you want to extract. (This must always be the last flag as it precedes the filename in the command)  Extracting specific files You don't have to extract the entire file. If you have a tar file but are only interested in a few files then grab them out of the tar file:  List the contents of the tar file tar -ztvf archive.tar.gz | grep filename and look for the file name(s) you are interested in. Extract the file tar -zxvf archive.tar.gz ./awesome.clj or directory tar --extract --file=archive.tar.gz src  Extracting wildcards If you can't use a rigid file name or directory then you can use wildcards (globbing patterns) tar -xf archive.tar --wildcards --no-anchored \"*.clj\" --wildcards tells tar to accept globbing patterns while --no-anchored tells it that the pattern applies to the member names after any / delimiter. Comparing against the file system -d, --diff, --compare finds the differences between the archive and the file system. The arguments are optional and you specify archive members to compare. If not given, the current working directory is assumed. This is handy when you want to see whether there are files in the tar file that are not yet in the local filesystem or visa versa. It also reports differences in attributes including the file size, mode, owner, modification date and contents. The following example compares the archive members 'rock', 'blues' and 'funk' in the archive 'bluesrock.tar' with files of the same name in the file system. (Note that there is no file, `funk'; tar will report an error message.) # this section and example was found at gnu.org # http://www.gnu.org/software/tar/manual/html_node/compare.html tar --compare --file=bluesrock.tar rock blues funk rock blues tar: funk not found in archive Using zip This is outside the scope of this post but I have the base commands available for in case I need them. To list the contents of the archive without unzipping it less file.zip or unzip -l file.zip. To create a new archive zip file.zip file1 file2 file3 or for a directory zip -r file.zip /path/to/archive. To exclude files from an archive being created zip -9 -r --exclude='*.zip' file.zip /path/to/archive. To unzip the archive unzip file.zip. Cheat sheet List tar -tf archive.tar.gz tar -tvf archive.tar.gz Create Archive tar -cvf archive.tar file1 file2 file3 Compressed archive tar -cvzf archive.tar.gz file1 file2 file3 Exclusions tar -czvf archive.tar.gz --exclude=\\*.gz file1 file2 file3 tar -czvf archive.tar.gz --exclude=\\*.gz --exclude=file\\* file1 file2 file3 Exclusion files except some setopt extendedglob rm -- ^*.tar.gz Update tar -cvf archive.tar /path/to/archive tar -uvf archive.tar member/director gzip archive.tar Extract Archive tar -xvf archive.tar Compressed tar -xvzf archive.tar.gz tar -xvC directory -f archive.tar Compare / Diff tar --compare --file=archive.tar file1 file2 file3 Zip less archive.zip unzip -l archive.zip zip archive.zip file1 file2 file3 zip -r archive.zip /path/to/archive zip -9 -r --exclude='*.zip' archive.zip /path/to/archive unzip archive.zip References  man tar tar --help Globbing - Zsh sourceforge 15+ tar command usages with examples - CRYBIT.com What is the difference between Tar and Gzip ? - CRYBIT.com Comparing Archive Members with the File System - gnu.org How can I update a tar.gz file? - AskUbuntu What's the difference between .tar.gz and .gz, or .tar.7z and .7z? - AskUbuntu How to Update an Archive Using '--update' - StackExchange Difference between ls -l and ll? - Unix &#x26; Linux StackExchange How do I zip/unzip on the unix command line? - Unix &#x26; Linux StackExchange Remove all files/directories except for one file - Unix &#x26; Linux StackExchange How to Compress and Extract Files Using the tar Command on Linux - How-To Geek How to Zip and Unzip in Linux: The Zip and Unzip Linux Commands - Hack Sparrow Tar Extract a Single File(s) From a Large Tarball "},{"slug":"/blog/how-to-craft-your-changes-into-small-atomic-commits-using-git/","title":"How To Craft Your Changes Into Small Atomic Commits Using Git","tags":["Technical","Git","Terminal","Cheat Sheet"],"html":"Small, atomic commits makes it easier for code reviews, browsing the history and reverting changes. Life happens and commits can touch more lines and files than I want but the changes committed should be distinct. \"Don't mix your apples with your toaster.\"  TL;DR: Use git add -i or git add -p. Stage the files you know are related. Break other mangled changes in files into smaller chunks (known as hunks) using patch mode. Stage. Commit. Do it again. Be careful.  In this post I am going to show you how to craft your changes into small atomic commits. This means that you are going to break up your changes into separate pieces of work and commit them. Let's get things straight It was brought to my attention in Reddit by WetDynamics that \"atomic commits sound nice in theory but in practice you end up with 100 commits of \"extracted foo into a method\" or \"refactored bar to make it more readable\". Does it really make your git history easier to grok than a single commit focused on a feature?\" So I wrote about it. Stop! Know what you are doing. If you make a mistake by omitting a file or leaving out a chunk of a file you will have a broken commit. Doing this is much easier when you keep your changes as small and simple as possible. Although you can scale up, the more complex your changes are, the more your brain has to work and the larger the chances are of you making a mistake. Approaches There are multiple ways to breakdown changes into smaller commits: The not so cool way  Commit the files that are related. Make a copy of the file with multiple changes, revert the other changes in the file, add the new changes to the file and commit it. Put your changes back for the next commit. No more stone age processes. üòÑ  The Git way  You can use the interactive mode approach to add the files you want and choose parts of the files you are interested in committing. You can use the patch approach directly.  Getting started git diff layout.scss will give you the diff for that file. You will notice some seriously stylish changes that I have made. Quickly check the status of the file in git status and see that it is already staged. This file must not be committed in its entirety so the file must not be staged. ‚ûú  ahoy git:master ‚úó 9cc08bf ‚ûú git status On branch master Changes to be committed:(use \"git reset HEAD &lt;file>...\" to unstage)  \trenamed:    data/ship.json -> data/ships.json \tmodified:   layout.scss \tmodified:   src/pirate.cljmodified:   components/parrot.jsx Crafting atomic changes This is the meat of what I want to share with you. I am going to show you how to stage files and parts of files to craft your commits. üòé The interactive mode way Get started with git add -i or git add --interactive See a status screen which is like git status on steroids.  To the left you have staged changes. If the file hasn't been staged yet it will display unchanged. To your right you have unstaged changes. If the file is fully staged then it will display nothing.  ‚ûú  ahoy git:master ‚úó 9cc08bf ‚ûú git add -istaged     unstaged path1:       +0/-12      nothing data/ship.json2:       +16/-0      nothing data/ships.json3:        +8/-2      nothing layout.scss4:        +4/-4      nothing src/pirate.clj5:    unchanged        +2/-2 components/parrot.jsx You are presented with a bunch of options that will aid you on your journey. Let's take a look at them: What now&gt; is the base prompt patiently awaiting your commands. Type in any of the numbers or letters below:  1 or s to see the steroid status screen again  2 or u lets you stage files. When you select it, it will show files that have not been staged. This is equivalent to git add &lt;file&gt;  If there are none you will stay in the What Now&gt; prompt. If there are files to be staged then you will enter the Update&gt;&gt; prompt. Enter the numbers of the files or the highlighted letters and press ENTER. The files are shown again. This time you will notice asterisks next to the files you have selected. They are the one's that will be staged. Rinse and repeat this process until you are happy with the files you want to stage. Press ENTER to stage the files. If you want to quit this mode, just press ENTER   3 or r will do the opposite of update. It will unstage (or revert) your changed file. This is equivalent to git rm --cached &lt;file&gt; The process is exactly the same as above except you will be in the Revert&gt;&gt; prompt. 4 or a will add any untracked files. Again, the process is the same but you will be in the Add untracked&gt;&gt; prompt. This initiates a git add &lt;file&gt; 5 or p will allow us to selectively choose parts of a file (known as hunks) and stage just that part. You will be in the Patch update&gt;&gt; prompt. Same story as before. I'll get to this in a bit. 6 or d will diff any staged file. Again it is the same above but now you will be in the Review diff&gt;&gt; prompt and you will be seeing diffs for staged files as you would in git diff --cached &lt;file&gt;  Patch update mode You are presented with hunks. The layout.scss file below only has one hunk. Uh, not ideal because I want to break it up into atomic commits. Patch update>> diff --git a/layout.scss b/layout.scss index fcc3ea4..8bdf8b6 100644 --- a/layout.scss +++ b/layout.scss @@ -1,9 +1,15 @@ +h1 { +    font-size: 3em; +}.parrot {background-color: blue; +    border: solid 1px green;}.ship { -    background-color: green; +    background-color: brown; +    font-size: 2.5em;}.pirate { -    background-color: red; +    background-color: black; +    border: solid 1px green} Stage this hunk [y,n,q,a,d,s,e,?]? Ahoy matey, there be options: y - stage this hunk n - do not stage this hunk q - quit; do not stage this hunk or any of the remaining ones a - stage this hunk and all later hunks in the file d - do not stage this hunk or any of the later hunks in the file s - split the current hunk into smaller hunks &lt;-----Booya! e - manually edit the current hunk ? - print help Press s to split that hunk into baby hunks. Now there are more options Stage this hunk [y,n,q,a,d,K,g,/,e,?]? ... g - select a hunk to go to / - search for a hunk matching the given regex K - leave this hunk undecided, see previous hunk ... Git was able to split that file into 4 hunks which you can choose to stage or not. Stage the ones that are relevant to your commit and leave the rest for now. You won't lose those changes. Hunk #1 @@ -1,2 +1,5 @@ +h1 { +    font-size: 3em; +}.parrot {background-color: blue; Hunk #2 @@ -1,4 +4,5 @@.parrot {background-color: blue; +    border: solid 1px green;}.ship { Hunk #3 @@ -3,5 +7,6 @@}.ship { -    background-color: green; +    background-color: brown; +    font-size: 2.5em;}.pirate { Hunk #4 @@ -6,4 +11,5 @@}.pirate { -    background-color: red; +    background-color: black; +    border: solid 1px green} When a hunk cannot be split you will see the following in which can you can edit the hunk. Sorry, cannot split this hunk @@ -9,4 +9,8 @@\"pirate\": \"Sailor Tom the Plank\",\"parrot\": \"Major Idea\"} +  { +    \"ship\": \"Mother Octopus\", +    \"pirate\": \"Pi\", +    \"parrot\": \"Log\"]  This @@ -1,9 +1,11 @@ line specifies the boundaries of the hunk to change. The -1,9 means the original portion of code started at line 1 in the code below and went for 9 more lines. The +1,11 means that we want to replace the original portion with the following code starting at line 1 and spanning the next 11 lines. ~ http://blog.jimbaca.com  To wrap it up, select the related files and create the related hunks. Stage them. Quit and commit. Do it again for the next change. The Git patch way You can also use git patch directly. git add -p or git add --patch will take you into patch mode.  reset files git reset --patch checkout out parts of files git checkout --patch stash parts of files git stash save --patch  References  7.2 Git Tools - Interactive Staging - git-scm.com How to undo 'git add' before commit? "},{"slug":"/blog/why-i-create-atomic-commits-in-git/","title":"Why I Create Atomic Commits In Git","tags":["Technical","Terminal","Git","CLI"],"html":"I wrote about crafting changes into small atomic commits using Git. It looked like there was some confusion. I want to share what I understand about atomic and monolithic commits and why I create atomic commits in Git.  I got a question in Reddit by WetDynamics that \"atomic commits sound nice in theory but in practice you end up with 100 commits of \"extracted foo into a method\" or \"refactored bar to make it more readable\". Does it really make your git history easier to grok than a single commit focused on a feature?\"  I think we are on the same page. I feel as though my intent was not clear in my previous post. An atomic commit Let's say I do a refactor but I also update a some features and add new ones. In an atomic commit, I will commit the refactor and each feature change separately. I don't know what the official definition is but to me an atomic commit is a commit that focuses on one context and one context alone. Granted, this is tricky. I do this to the best of my abilities but I don't always get it right.  Disclaimer: I don't intend that I commit each and every single line or function. By context I mean a single topic: a feature, bug fix, refactor, upgrade, task...  A monolithic commit Again. Let's say I do a refactor but I also update a some features and add new ones. The entire changeset gets committed in a monolithic commit. Granted, it doesn't have to be a large commit. It's a commit with changes tightly coupled into a single commit. Like a tangled or spaghetti commit. The larger the commit, the more brittle and error prone it becomes because it becomes harder to understand (even if it's well documented - I know this from my own doing), read, review and revert. Why go atomic? Atomic commits are easier to:  track - I know where they are in the history. git log --oneline shows me all commits. git log --grep &lt;pattern&gt; lets me find a commit based on a partial message. git log &lt;commit&gt; will jump to that commit and show previous commits. understand - I document each change with a commit message and elaborate with an explanation if I need to. read - it's a change focused on a single context which makes it smaller, simpler and easier to read the patch git show &lt;commit&gt; or git log &lt;commit&gt; -p review - as it's a small, focused, documented change, a reviewer should be able to follow the code changes and keep their sanity. revert - reverting git revert &lt;commit&gt; an atomic commit will not revert unrelated changes like a monolithic commit would.  What do I do?   I try working on one thing - this is not always possible, hence my previous post. This is where I use the interactive mode to my advantage. Most GUIs come with intuitive interfaces. git add -i  I try keep my changes as small as possible - this makes it easier for me to commit my changes once I am done especially when I go into an interactive mode.  I try to commit often - I amend my commits when I need to. git commit -m &quot;&lt;message&gt;&quot; --amend  I aim to be vigilant that tests pass (I get this wrong sometimes). I want failing/code tests fixed and committed as part of the context commit. Otherwise I have a \"broken\" commit.  When I end up littering my feature commits (features have commits in a random order) then I use an interactive rebase to move and squash the commits prior to pushing them. git rebase -i    The goal of creating atomic commits is not to create \"100 commits\" but rather pragmatically craft relevant changes for a better history, cognitive load and an easier means to rollback changes. "},{"slug":"/blog/create-a-symlink-for-hidden-files/","title":"Create a symlink for hidden files","tags":["Technical","Terminal","Linux"],"html":"I want to create a symlink for all hidden files excluding the hidden directories. I want to put my configuration files in my home directory into version control. I need to exclude the hidden directories because they contain binaries and what not. Using this one liner, I can create a symbolic link for every hidden file in my home directory to my working (or target) directory. for f in .*; do if [[ -f $f ]]; then ln -s /home/me/$f /home/me/working/directory/$f; fi; done I execute this from my source directory. I can verify that my symlinks exist in my target directory cd /home/me/working/directory ls -lah I should see a few lines that look like this: lrwxrwxrwx. 1 me me   26 Jan 27 10:49 .zsh_history -> /home/me/.zsh_history lrwxrwxrwx. 1 me me   20 Jan 27 10:49 .zshrc -> /home/me/.zshrc"},{"slug":"/blog/working-with-git-remotes/","title":"Working With Git Remotes","tags":["Technical","Git","Terminal","Cheat Sheet"],"html":"I have a repository with two remotes. origin is my personal repository and bitbucket is by BitBucket repository. The nugget of this post is to push to both branches in one command.  The git remote command lets you create, view, and delete connections to other repositories. Remote connections are more like bookmarks rather than direct links into other repositories. Instead of providing real-time access to another repository, they serve as convenient names that can be used to reference a not-so-convenient URL. ~ Atlassian   This post forms part of a sequence of command line references that I will be writing where I forget the command or its syntax or find it interesting enough to document it. Although it's Google-able, there are a chain of commands that I want kept together for ease of use. The commands I use should be universal but in case it's necessary, I am running Fedora release 28 (Twenty Eight) and Zsh.  Also, if you want to contribute something interesting in any of my posts, please create a pull-request or write a comment below. üòÑ   Cheat Sheet View Verbose output. Fetch and push URLs for each remote. git remote -v URLs for the remote. --all and --push switches available. git remote get-url &lt;name> example: git remote get-url --all origin git remote get-url --push origin Get information about remote. git remote show origin * remote originFetch URL: git@github.com:clarice/ahoy.gitPush  URL: git@github.com:clarice/ahoy.gitHEAD branch: masterRemote branch:master trackedLocal branch configured for 'git pull':master merges with remote masterLocal ref configured for 'git push':master pushes to master (up to date) Create Create a new remote. git remote add &lt;name> &lt;url> example: git remote add another git@another.com:clarice/ahoy.git Add a remote that tracks selected branches. git remote add -f -t &lt;branch> -m &lt;branch> origin git@another.com/clarice/ahoy.git example: git remote add -f -t &lt;branch&gt; -m &lt;branch&gt; origin git@another.com/clarice/ahoy.git Remove Remote-tracking branches and configuration settings are removed. git remote rm &lt;name> example: git remote remove another Deletes stale references associated with remote. git remote prune &lt;name> --dry-run example: git remote prune origin --dry-run Push Single remote Push local changes to a remote. git push &lt;remote> &lt;branch> example: git remote push another All remotes All branches Push local changes to all remotes. git remote | xargs -L1 git push --all Specific branch Push local changes for a specific branch to all remotes. git remote | xargs -L1 -I R git push R &lt;branch> example: git remote | xargs -L1 -I R git push R master Create an alias Create an alias to push local changes to all remotes for all branches. git config --global alias.pushall '!git remote | xargs -L1 git push --all' Edit Rename Rename remote. All remote-tracking branches and configuration settings for the remote are updated. git remote rename &lt;old-name> &lt;new-name> example: git remote rename github hub Change URLs Set a new URL for the remote. --push, --add and --delete switches are available. git remote --push set-url &lt;name> &lt;url> example: git remote set-url --push origin git@github.com:clarice/ahoy.com References  git-scm Git Syncing Able to push to all git remotes with the one command? Wallpaper "},{"slug":"/blog/set-java-home-in-linux/","title":"Set $JAVA_HOME in Linux","tags":["Technical","Terminal","Cheat sheet"],"html":"$JAVA_HOME an environment variable. It is the root path of the JRE or JDK which some applications and services use to access Java. I know that Java is installed java -version but its not in the path echo $JAVA_HOME, the output is empty. Configure for single user  Open the shell script in your favorite editor eg. vim ~/.zshrc vim ~/.bashrc Add this line to export the path the the corresponding directory export JAVA_HOME=/usr/bin/java which can be determined using which java if you are unsure. Add the path to $PATH export $PATH=$PATH:$JAVA_HOME Save the file. Source the file in your terminal eg. source ~/.zshrc or source ~/.bashrc Execute echo $JAVA_HOME to verify the output.  Configure for all users  Login a root or use sudo to execute commands. Execute bash sudo bash Edit vim /etc/bashrc or vim /etc/profile Add export JAVA_HOME=/usr/bin/java Save the file. Source source /etc/bashrc or source /etc/profile Echo echo $JAVA_HOME exit to exit the sudo bash terminal.  References  What is the purpose of .bashrc and how does it work? - UNIX StackExchange Setting JAVA_HOME - Atlassian Opsgenie How to Set JAVA_HOME / PATH variables Under Linux Bash Profile - nixCraft "},{"slug":"/blog/ssh-for-days/","title":"SSH for Days","tags":["Technical","Linux"],"html":"Mosh - the mobile shell. This remote terminal let's you roam with intermittent connectivity without breaking your SSH tunnel. The package must be installed on both the client and server and does not need to be run as a super user.  It replaces interactive SSH. Instant keystroke response, robust roaming but you'll need working UDP.  It supports intermittent connectivity:  Put your computer to sleep, wake it up and your connection is alive. Leave your connection running and it won't break the pipe. Change between networks - Wi-Fi at the coffee shop, Ethernet at the office, LTE at home - and you will stay logged in.  It provides intelligent local echo and line editing of user keystrokes. You get an instant response to typing, deleting and line editing. Mosh can run in xterm, gnome-terminal, urxvt, Terminal.app, iTerm, emacs screen or tmux. It's mostly designed from scratch and supports one character set: UTF-8. It's freely available on GNU/Linux, BSD, macOS, Solaris, Android, Chrome and iOS. Credits go to Keith Winstein, along with Anders Kaseorg, Quentin Smith, Richard Tibbetts, Keegan McAllister, and John Hood who wrote Mosh. Installation  Install Mosh on your platform.  Usage  Connect a user mosh chewbacca.norad.mil Mosh will log the user in via SSH, then start a connection on a UDP port between 60000 and 61000. Connect with a different username mosh potus@ackbar.bls.gov Connect with server binary outside path mosh potus@ackbar.bls.gov The user can specify an alternate path for the mosh-server on the remote host. The server binary can even be installed in the user's home directory. Select a Mosh UDP port mosh -p 1234 darth Useful when the server is behind a port-forwarder or NAT. Select an SSH port mosh --ssh=&quot;ssh -p 2222&quot; figrindan Add other SSH options mosh --ssh=&quot;~/bin/ssh -i ./identity&quot; fett Disable instant echo mosh --predict=never niennunb The -n switch is a synonym. By contrast, passing --predict=always or -a will enable instant local echo even on low-delay links. With a command mosh pello -- screen -dr This reattaches to a long-running screen session.  Cheat sheet Firewall Open the selected port between 60000 and 61000 if you have a firewall. Open the range if you want Mosh to decide -p 0. firewall-cmd --zone=public --permanent --add-port=60000/udp firewall-cmd --reload firewall-cmd --zone=public --list-ports Server connection Start Mosh server on port 60000 enabling 256 colors for TERM on the local interface 127.0.0.1 and print debugging information before detaching. mosh -v -i 127.0.0.1 -p 60000 -c 256 Client connection The unicorn. Connect to the server on port 60000 using a specific user. mosh -p 60000 user@awesome.sauce Ending the connection Normally, logout or exit on the remote host will close the session. Mosh accepts the escape sequence Ctrl-^ . (typically typed with Control-Shift-6, then a period) to end the connection forcibly. To send a literal Ctrl-^, type Ctrl-^ ^. Man Pages  mosh(1) mosh-client(1) mosh-server(1)  References  Getting Mosh - Mosh Technical Info - Mosh "},{"slug":"/blog/uninstall-an-app-from-the-terminal/","title":"Uninstall an app from the terminal","tags":["Technical","Linux","Terminal"],"html":"I installed an application. It misbehaved. I wanted to try out a time tracking app. It should let me track reminders and record activity spent in meetings, out-of-office and on tasks I am working on, etc. I need to be able to interact with it in the GUI but I couldn't. It appeared to be running in the background but I couldn't find it in the processes. When I wanted to uninstall it, it didn't list in Software. I tried to reinstall it but, as expected, it moaned that the application was already installed. I didn't get an option to uninstall it from that view. Now I had an app that didn't run properly with a process I couldn't find and no matter what I tried, I couldn't uninstall it. There had to be a way.  I have Fedora release 28 (Twenty Eight) installed.  I was able to grep through my dnf packages and find the package I was looking for using what I thought it's name should be. dnf list | grep &lt;the-possible-app-name> I removed the app based on the actual package name in the dnf repository. sudo dnf remove &lt;package-name> I thought something went wrong with the install so I tried it again but it didn't work so I guess I can't run it on Fedora. References  How to Uninstall Software Using the Command Line in Linux "},{"slug":"/blog/migrage-my-search-from-solr-to-elasticsearch/","title":"Migrage my search from Solr to Elasticsearch","tags":["Technical","Terminal","Cheat sheet","Linux"],"html":"An NRT (near-realtime) search platform. It's about a one second delay from the time a document is indexed until it is searchable. I have been using Solr for my search but have been wanting to migrate to Elasticsearch for experience in this technology. This is my cheat sheet to install the service on Fedora. Elasticsearch Install the service  There are a lot of ways to install Elasticsearch and on many different platforms. Pick your flavor.  Public signing key rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch Install from repository Create a file called elasticsearch.repo in the /etc/yum.repos.d/ directory: vim /etc/yum.repos.d/elasticsearch.repo [elasticsearch-6.x] name=Elasticsearch repository for 6.x packages baseurl=https://artifacts.elastic.co/packages/6.x/yum gpgcheck=1 gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch enabled=1 autorefresh=1 type=rpm-md sudo dnf install elasticsearch Run the service sudo systemctl daemon-reload sudo systemctl enable elasticsearch.service systemctl start elasticsearch.service &amp;&amp; systemctl status elasticsearch.service Checking the status of the service is not good enough. Check the logs in /var/log/elasticsearch/ The service can log information to systemd journal when you remove the --quite option from the ExecStart variable in the elasticsearch.service file. find / -name \"elasticsearch.service\" vim /usr/lib/systemd/system/elasticsearch.service ExecStart=/usr/share/elasticsearch/bin/elasticsearch -p ${PID_DIR}/elasticsearch.pid sudo journalctl -f sudo journalctl --unit elasticsearch sudo journalctl --unit elasticsearch --since  \"2016-10-30 18:17:16\" Verify it's running curl -X GET \"localhost:9200/\" {\"name\": \"Cp8oag6\",\"cluster_name\": \"elasticsearch\",\"cluster_uuid\": \"AT69_T_DTp-1qgIJlatQqA\",\"version\": {\"number\": \"6.6.0\",\"build_flavor\": \"default\",\"build_type\": \"zip\",\"build_hash\": \"f27399d\",\"build_date\": \"2016-03-30T09:51:41.449Z\",\"build_snapshot\": false,\"lucene_version\": \"7.6.0\",\"minimum_wire_compatibility_version\": \"1.2.3\",\"minimum_index_compatibility_version\": \"1.2.3\"},\"tagline\": \"You Know, for Search\" } Kibana rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch vim /etc/yum.repos.d/kibana.repo [kibana-6.x] name=Kibana repository for 6.x packages baseurl=https://artifacts.elastic.co/packages/6.x/yum gpgcheck=1 gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch enabled=1 autorefresh=1 type=rpm-md sudo dnf install kibana sudo systemctl daemon-reload sudo systemctl enable kibana.service systemctl start kibana.service &amp;&amp; systemctl status kibana.service Logs at /var/log/kibana/ curl -X HEAD -I \"http://localhost:5601/\" HTTP/1.1 302 Found location: /app/kibana kbn-name: kibana kbn-xpack-sig: b20f9c2acad91a2f8f5ab18dab784428 content-type: text/html; charset=utf-8 cache-control: no-cache content-length: 0 connection: close Date: Sun, 03 Feb 2019 07:28:09 GMT curl -X GET \"http://localhost:5601/app/kibana\" Reverse Proxy /etc/kibana/kibana.yml # The URLs of the Elasticsearch instances to use for all your queries. elasticsearch.hosts: [\"http://localhost:9200\"]  # Enables you to specify a path to mount Kibana at if you are running behind a proxy. # Use the `server.rewriteBasePath` setting to tell Kibana if it should remove the basePath # from requests it receives, and to prevent a deprecation warning at startup. # This setting cannot end in a slash. server.basePath: \"/kibana\"  # Specifies whether Kibana should rewrite requests that are prefixed with # `server.basePath` or require that they are rewritten by your reverse proxy. # This setting was effectively always `false` before Kibana 6.3 and will # default to `true` starting in Kibana 7.0. server.rewriteBasePath: false /etc/nginx/nginx.conf # For more information on configuration, see: #   * Official English Documentation: http://nginx.org/en/docs/ #   * Official Russian Documentation: http://nginx.org/ru/docs/  user nginx; worker_processes auto; error_log /var/log/nginx/error.log; pid /run/nginx.pid;  # Load dynamic modules. See /usr/share/doc/nginx/README.dynamic. include /usr/share/nginx/modules/*.conf;  events {worker_connections 1024; }  http {log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" ''$status $body_bytes_sent \"$http_referer\" ''\"$http_user_agent\" \"$http_x_forwarded_for\"';access_log  /var/log/nginx/access.log  main;sendfile            on;tcp_nopush          on;tcp_nodelay         on;keepalive_timeout   65;types_hash_max_size 2048;include             /etc/nginx/mime.types;default_type        application/octet-stream;# Load modular configuration files from the /etc/nginx/conf.d directory.# See http://nginx.org/en/docs/ngx_core_module.html#include# for more information.include /etc/nginx/conf.d/*.conf;upstream elasticsearch { \t      server      localhost:9200; \t      keepalive   15;}upstream kibana { \t      server      localhost:5601; \t      keepalive   15;}server {listen       80 default_server;listen       [::]:80 default_server;server_name  _; \t      return       301 https://$host$request_uri;}# Settings for a TLS enabled server.server {listen       443 ssl http2;listen       [::]:443 ssl http2;server_name  awesome.sauce;root         /www/public/awesome.sauce;if ($http_user_agent ~(Baiduspider|Yandex|DirBuster|libwww|\"\")) {return 403;}add_header  Strict-Transport-Security \"max-age=31536000\";access_log   /var/log/nginx/ssl-access.log  combined;ssl_certificate /etc/letsencrypt/live/awesome.sauce/fullchain.pem; # managed by Certbotssl_certificate_key /etc/letsencrypt/live/awesome.sauce/privkey.pem; # managed by Certbotinclude /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbotssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot \t      ssl_stapling \t    on; \t      ssl_stapling_verify on;# Load configuration files for the default server block.include /etc/nginx/default.d/*.conf;location / { \t        root /www/public/awesome.sauce;}location = /nginx_status {stub_status  on;access_log   off;allow        100.200.100.200;deny         all;}location ~ ^/elastic/(.*)$ { \t        proxy_pass http://elasticsearch/$1;proxy_http_version 1.1;proxy_set_header Connection \"Keep-Alive\"; \t        proxy_set_header Proxy-Connection \"Keep-Alive\"; \t        sendfile_max_chunk 512k; \t        proxy_buffering off;limit_except GET {deny  all;}}  \t      location ~ ^/kibana/(.*)$ {proxy_pass http://kibana/$1;proxy_http_version 1.1;proxy_set_header Connection \"Keep-Alive\";proxy_set_header Proxy-Connection \"Keep-Alive\";sendfile_max_chunk 512k;proxy_buffering on;limit_except GET {deny  all;}}} } Index Run on the server curl -X PUT \"localhost:9200/search\" -H 'Content-Type: application/json' -d' {\"settings\" : {\"number_of_shards\" : 1},\"mappings\" : {\"_doc\" : {\"properties\" : {\"id\" : { \"type\" : \"text\" },\"url\" : { \"type\" : \"text\" },\"title\" : { \"type\" : \"text\" },\"post\" : { \"type\" : \"text\" }}}} } ' Check out the index curl -X GET \"localhost:9200/search/_mapping/_doc\" Get rid of it? curl -X DELETE \"localhost:9200/search\" References  Installing Elasticsearch with RPM - elastic Install Kibana with RPM - elastic ELK with Nginx Gist - Dev-Dipesh @ GitHub How can I install the htpasswd utility in Red Hat / Scientific Linux? - ServerFault Learning Elastic Stack 6.0 By Pranav Shukla, Sharath Kumar December 2017  https://www.elastic.co/guide/en/kibana/current/using-kibana-with-security.html"},{"slug":"/blog/installing-elasticsearch-and-kibana/","title":"Installing Elasticsearch and Kibana","tags":["Technical","Terminal","Kibana","Elasticsearch"],"html":"An NRT (near-realtime) search platform. It's about a one second delay from the time a document is indexed until it is searchable. Elasticsearch Installation  There are a lot of ways to install Elasticsearch and on many different platforms. Pick your flavor. I installed Elasticsearch using instructions for Fedora.  Public signing key rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch Install from repository Create a file called elasticsearch.repo in the /etc/yum.repos.d/ directory: vim /etc/yum.repos.d/elasticsearch.repo [elasticsearch-6.x] name=Elasticsearch repository for 6.x packages baseurl=https://artifacts.elastic.co/packages/6.x/yum gpgcheck=1 gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch enabled=1 autorefresh=1 type=rpm-md sudo dnf install elasticsearch Run the service sudo systemctl daemon-reload sudo systemctl enable elasticsearch.service systemctl start elasticsearch.service &amp;&amp; systemctl status elasticsearch.service Checking the status of the service is not good enough. Check the logs in /var/log/elasticsearch/ The service can log information to systemd journal when you remove the --quite option from the ExecStart variable in the elasticsearch.service file. find / -name \"elasticsearch.service\" vim /usr/lib/systemd/system/elasticsearch.service ExecStart=/usr/share/elasticsearch/bin/elasticsearch -p ${PID_DIR}/elasticsearch.pid sudo journalctl -f sudo journalctl --unit elasticsearch sudo journalctl --unit elasticsearch --since  \"2016-10-30 18:17:16\" Verify the site is running curl -X GET \"localhost:9200/\" {\"name\": \"Cp8oag6\",\"cluster_name\": \"elasticsearch\",\"cluster_uuid\": \"AT69_T_DTp-1qgIJlatQqA\",\"version\": {\"number\": \"6.6.0\",\"build_flavor\": \"default\",\"build_type\": \"zip\",\"build_hash\": \"f27399d\",\"build_date\": \"2016-03-30T09:51:41.449Z\",\"build_snapshot\": false,\"lucene_version\": \"7.6.0\",\"minimum_wire_compatibility_version\": \"1.2.3\",\"minimum_index_compatibility_version\": \"1.2.3\"},\"tagline\": \"You Know, for Search\" } Kibana rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch vim /etc/yum.repos.d/kibana.repo [kibana-6.x] name=Kibana repository for 6.x packages baseurl=https://artifacts.elastic.co/packages/6.x/yum gpgcheck=1 gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch enabled=1 autorefresh=1 type=rpm-md sudo dnf install kibana sudo systemctl daemon-reload sudo systemctl enable kibana.service systemctl start kibana.service &amp;&amp; systemctl status kibana.service Logs at /var/log/kibana/ curl -X HEAD -I \"http://localhost:5601/\" HTTP/1.1 302 Found location: /app/kibana kbn-name: kibana kbn-xpack-sig: b20f9c2acad91a2f8f5ab18dab784428 content-type: text/html; charset=utf-8 cache-control: no-cache content-length: 0 connection: close Date: Sun, 03 Feb 2019 07:28:09 GMT curl -X GET \"http://localhost:5601/app/kibana\" Reverse Proxy /etc/kibana/kibana.yml # The URLs of the Elasticsearch instances to use for all your queries. elasticsearch.hosts: [\"http://localhost:9200\"]  # Enables you to specify a path to mount Kibana at if you are running behind a proxy. # Use the `server.rewriteBasePath` setting to tell Kibana if it should remove the basePath # from requests it receives, and to prevent a deprecation warning at startup. # This setting cannot end in a slash. server.basePath: \"/kibana\"  # Specifies whether Kibana should rewrite requests that are prefixed with # `server.basePath` or require that they are rewritten by your reverse proxy. # This setting was effectively always `false` before Kibana 6.3 and will # default to `true` starting in Kibana 7.0. server.rewriteBasePath: false /etc/nginx/nginx.conf # For more information on configuration, see: #   * Official English Documentation: http://nginx.org/en/docs/ #   * Official Russian Documentation: http://nginx.org/ru/docs/  user nginx; worker_processes auto; error_log /var/log/nginx/error.log; pid /run/nginx.pid;  # Load dynamic modules. See /usr/share/doc/nginx/README.dynamic. include /usr/share/nginx/modules/*.conf;  events {worker_connections 1024; }  http {log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" ''$status $body_bytes_sent \"$http_referer\" ''\"$http_user_agent\" \"$http_x_forwarded_for\"';access_log  /var/log/nginx/access.log  main;sendfile            on;tcp_nopush          on;tcp_nodelay         on;keepalive_timeout   65;types_hash_max_size 2048;include             /etc/nginx/mime.types;default_type        application/octet-stream;# Load modular configuration files from the /etc/nginx/conf.d directory.# See http://nginx.org/en/docs/ngx_core_module.html#include# for more information.include /etc/nginx/conf.d/*.conf;upstream elasticsearch { \t      server      localhost:9200; \t      keepalive   15;}upstream kibana { \t      server      localhost:5601; \t      keepalive   15;}server {listen       80 default_server;listen       [::]:80 default_server;server_name  _; \t      return       301 https://$host$request_uri;}# Settings for a TLS enabled server.server {listen       443 ssl http2;listen       [::]:443 ssl http2;server_name  awesome.sauce;root         /www/public/awesome.sauce;if ($http_user_agent ~(Baiduspider|Yandex|DirBuster|libwww|\"\")) {return 403;}add_header  Strict-Transport-Security \"max-age=31536000\";access_log   /var/log/nginx/ssl-access.log  combined;ssl_certificate /etc/letsencrypt/live/awesome.sauce/fullchain.pem; # managed by Certbotssl_certificate_key /etc/letsencrypt/live/awesome.sauce/privkey.pem; # managed by Certbotinclude /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbotssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot \t      ssl_stapling \t    on; \t      ssl_stapling_verify on;# Load configuration files for the default server block.include /etc/nginx/default.d/*.conf;location / { \t        root /www/public/awesome.sauce;}location = /nginx_status {stub_status  on;access_log   off;allow        100.200.100.200;deny         all;}location ~ ^/elastic/(.*)$ { \t        proxy_pass http://elasticsearch/$1;proxy_http_version 1.1;proxy_set_header Connection \"Keep-Alive\"; \t        proxy_set_header Proxy-Connection \"Keep-Alive\"; \t        sendfile_max_chunk 512k; \t        proxy_buffering off;limit_except GET {deny  all;}}  \t      location ~ ^/kibana/(.*)$ {proxy_pass http://kibana/$1;proxy_http_version 1.1;proxy_set_header Connection \"Keep-Alive\";proxy_set_header Proxy-Connection \"Keep-Alive\";sendfile_max_chunk 512k;proxy_buffering on;limit_except GET {deny  all;}}} } Index Run on the server curl -X PUT \"localhost:9200/search\" -H 'Content-Type: application/json' -d' {\"settings\" : {\"number_of_shards\" : 1},\"mappings\" : {\"_doc\" : {\"properties\" : {\"id\" : { \"type\" : \"text\" },\"url\" : { \"type\" : \"text\" },\"title\" : { \"type\" : \"text\" },\"post\" : { \"type\" : \"text\" }}}} } ' Check out the index curl -X GET \"localhost:9200/search/_mapping/_doc\" Get rid of it? curl -X DELETE \"localhost:9200/search\" References  Installing Elasticsearch with RPM - elastic Install Kibana with RPM - elastic ELK with Nginx Gist - Dev-Dipesh @ GitHub How can I install the htpasswd utility in Red Hat / Scientific Linux? - ServerFault Book: Learning Elastic Stack 6.0 By Pranav Shukla, Sharath Kumar December 2017 Configuring security in Kibana "},{"slug":"/blog/getting-started-with-cisco-adaptive-security-virtual-appliance-in-aws/","title":"Getting started with Cisco Adaptive Security Virtual Appliance in AWS","tags":["Technical","Networking","Terminal","Cisco"],"html":"I work with NATs and ACLs on Cisco ASA (Adaptive Security Appliance) in the terminal. I want a sandbox environment for me to go bonkers. I couldn't find an image from Cisco to download and install so I chose to go shopping on the AWS Marketplace. I found Cisco Adaptive Security Virtual Appliance (ASAv) - Standard Package. They say it brings full firewall functionality to virtualized environments to secure data center traffic and multi-tenant environments. I think that's pretty much what I need. Cisco does party hard. They charge you and it can get quite pricey. üò¢ They predefine the instances you can select which does not fall under the AWS free usage tier. As I write this, there is a 5-day trial and thereafter a charge of $0.69 per hour. I need you to brace yourself for this shopping experience. It's not very user friendly and it becomes repetitive.  WARNING! You will get an error after you have created your instance if your account has not been verified. There is an option to replay the order for your instance so your time would not have been for nothing.  Going shopping  To enter the marketplace you need to authenticate. Access the AWS Account page. Sign in. Sign up. You know best. Squeeze your way past all the tempting options by going directly to the Cisco Adaptive Security Virtual Appliance (ASAv) - Standard Package.  Proceed to the first level of checkout. There will be a few of these. Go on by clicking on the top right orange button on each page.  Continue to Subscribe gives you more information about annual licensing and the TOCs. Continue to Configuration gives you a small fulfillment form you need to verify or change. Specify the image (64xbit (x86) Amazon Machine Image (AMI)), ASAv version (9.9.2.1 (May 10, 2018)) and region (US East (N. Virginia)). I just chose the defaults. Continue to Launch shows you a screen to review your instance configuration and choose how you want to launch the software. I went with Launch through EC2.    Building your instance Now that we are done shopping and spending all our money, we shall proceed to build our Cisco instance. One does not simply build such an instance so let's take it one step at a time shall we. Okay, this statement rings true for me at least.  Default to everything. Don't get clever just yet. Let's first get something up and running. You can terminate it and create a new one later. Choose your instance type. I chose m4.large (6.5 ECUs, 2 vCPUs, 2.4 GHz, Intel Xeon E5-2676v3, 8 GiB memory, EBS only). This is the minimum requirement for Cisco ASAv. Check out the other entries then click on the blue button Preview and Launch.  You'll get warnings. Possibly two. One will be about improving your instance security because the firewall created is open so that whole world can access your instance (inbound SSH defined on 0.0.0.0/0) and the other will politely explain that your instance is not eligible for the free usage tier. Change what you want. Verify the order. Click on Launch which proceeds to another step: Select an existing key pair or create a new key. Use this key to authenticate to your instance without a password. I downloaded mine, moved it to ~/.ssh and chown 400 ~/.ssh/awesome.pem.  The name of your key is the .pem filename so I avoided special characters the second time around.  Finally, you can click on the blue Launch Instances button. If all goes according to plan, the instance will launch. Accessing your AWS instance Here is where the fun begins. Can you ping it? Copy the Public DNS IPv4 address and slap that into a ping command in your terminal. Access that under Dashboard > Running Instances > copy the Public DNS IPv4 address from the table of instances for your instance. I can't ping my AWS instance  No luck? Let's try Network &#x26; Security > Security Groups > right-click on the associated security group > Edit inbound rules > Add Rule. Type=Custom ICMP Rule - IPv4, Protocol=Echo Request, Source=Anywhere/My IP.  Can you SSH to it? On the instances page, click on the Connect button for that instance and get more information about what to do with your .pem file. It's basically what I explained above. For our instance we need to connect using the admin user and include our .pem file which we can do as follows ssh -i &quot;~/.ssh/awesome.pem&quot; admin@ec2-1-2-3-4.compute-1.amazonaws.com I can't SSH to my AWS instance  Still no luck? Let's try Network &#x26; Security > Security Groups > right-click on security group > Edit inbound rules again.   Does your firewall have a rule configured for SSH? What sources can access your instance? Any (0.0.0.0/0) or your current IP address? Is your instance using the correct security group? Can you ping your instance yet? If not, check your VPC and network interface. I had an instance configured and couldn't get a network interface to attatch. Eventually I terminated it, recreated it and it worked. If I knew where the correct settings were, I wouldn't have had to do that.  Using ASA What a journey! I am finally in. There is a ciscoasa&gt; prompt. Basic commands are permitted in this mode. See them ? Go into admin mode login admin and again press ? to see admin commands. The mode I hang around in the most is the config mode. Once logged in config t which is short for config terminal For the last time, press ? for all the commands available. WHAM! The instance works and I can get my hands dirty on my very own Cisco box."},{"slug":"/blog/cisco-asa-cheat-sheet/","title":"Cisco ASA cheat sheet","tags":["Technical","Terminal","Cisco","Cheat sheet"],"html":"Cisco Adaptive Security Appliancy is known as the Cisco ASA. It is used to protect networks and data centres. It offers firewall, VPN and facilitates dynamic routing amongst other features and capabilities. It runs on Linux using a single Executable and Linkable Format program called lina. Lina schedules processes and handles things like concurrency internally rather than using the underlying Linux capabilities. In this post I share a few of the CLI commands to query, operate and configure the device. Access privelage EXEC mode ciscoasa is the default hostname for the default ASA state. You will see that you are in EXEC mode with the ciscoasa&gt; prompt. Type enable to access privilege EXEC mode. The default password is blank. The prompt changes to ciscoasa# Lockdown access to ASA show displays sensitive data and we don't want prying eyes to see that. enable password &lt;PASSWORD&gt; show running-config enable To verify the password works, we need to exit the modes. exit config mode and then privilege EXEC. Create a local user account The highest privilege is 15 username admin password cisco privilege 15 show running-config user Get more information about the system show version show processes show file system show flash Set a hostname Change the hostname from the global configuration mode. configure terminal or config terminal or config t Notice the prompt becomes ciscoasa(config)# Enter hostname &lt;HOSTNAME&gt; and your prompt will change to that name. Set the clock for logs and what-not Timestamps are important for logs. They help administrators understand the order of events. clock set hh:mm:ss {month day | day month} year clock set 21:10:00 9 february 2019 show clock Assign a domain name domain-name ec2-1-2-3-4.compute-1.amazonaws.com show running-config domain-name Show a banner In your global configuration mode oxygen(config)# we can set banners. Below we configure the message of the day (MOTD) banner. banner motd Please be advised unauthorized access is strictly prohibited banner motd All access are recorded for security purposes banner motd This device is the property for ACME Corp. show banner Inside/Outside interfaces oxygen(congif)# show interface oxygen(config)# interface management0/0 oxygen(config-if)# nameif Inside oxygen(config-if)# security-level 100 oxygen(config-if)# ip address 192.168.2.1 255.255.255.0 oxygen(config-if)# nameif Inside oxygen(config-if)# nameif Inside References   Cisco ASA - Wikipedia Cisco Adaptive Security Appliance (ASA) Software - cisco.com Cisco ASA series part one: Intro to the Cisco ASA - nccgroup "},{"slug":"/blog/greet-users-with-the-message-of-the-day/","title":"Greet users with the message of the day","tags":["Technical","Terminal","Linux"],"html":"The message of the day is known as motd. It's used to send a message to users after logging into a shell, commonly used on hosts. find / -name \"motd\" # if you forget where to locate the file vim /etc/motd You can generate ASCII art and paste it into the motd file to spice things up.__                  _                  __/ /   ___ _   _ _ __(_) ___  _   _ ___  \\ \\| |   / __| | | | &#39;__| |/ _ \\| | | / __|  | | &lt; &lt;   | (__| |_| | |  | | (_) | |_| \\__ \\   &gt; &gt;| |   \\___|\\__,_|_|  |_|\\___/ \\__,_|___/  | |\\_\\                                     /_/ I found that patorjk.com offers a nice way to generate ascii art."},{"slug":"/blog/creating-a-clojure-solution-using-intelli-j/","title":"Creating a Clojure solution using IntelliJ","tags":["Technical","Clojure","IntelliJ"],"html":"I am creating a simple Clojure web app and API. In this post I explore how to create each with the lein command and what references I need to use. I plan to work on a monolith IntelliJ and git solution so that I don't need to maintain multiple projects and repositories. Web App lein new re-frame kashikoi-app +less +garden +10x +re-frisk +test +handler +routes  CSS +less: less - LESS CSS compiler plugin for Lein. CSS +garden: garden - Generate CSS with Clojure. Debug +re-frisk: re-frisk - A debugging dashboard for re-frame. Debug +10x: re-frame-10x - Visualize re-frame pattern data or reagent ratom data as a tree structure, watch re-frame events and export state in the debugger. Development +test: clj.test - A unit testing framework and doo - A library and lein plugin to run cljs.test on different js environments. Full-stack +handler: compojure - A consice routing library for Ring/Clojure. Routing +routes: secretary - A client-side router for ClojureScript.  API lein new app kashikoi-api Follow the instructions to create an API using Compojure (web APIs, includes Swagger) and Toucan (define application models and retrieve them from a database). IntelliJ Create a monolith solution by adding both projects to the solution. This is useful if you want to maintain a single repository instead of two.  Create a blank project Import each module using the Leiningen external module option Set resources, sources and test directories git init on solution Commit your files as desired  To access the modules dialog box again > Right-click on a project, click on Open Module Settings or File > Project Structure or Ctrl + Alt + Shift + S References  IntelliJ IDEA Developing RESTful APIs in Clojure Using Compojure-API and Toucan (Part-1) Codementor Community - Tamizhvendan S Day8 / re-frame template - Github "},{"slug":"/blog/the-silver-searcher/","title":"The Silver Searcher","tags":["Technical","Terminal"],"html":"The ack utility was designed to replace 99% of the uses of grep. As stated in the man page  Ack searches the named input FILEs (or standard input if no files are named, or the file name - is given) for lines containing a match to the given PATTERN . By default, ack prints the matching lines. Ack can also list files that would be searched, without actually searching them, to let you take advantage of ack's file-type filtering capabilities.  Silver Searcher ag is similar to ack with a focus on spead. Without ack ag would not exist. Installing macOS brew install the_silver_searcher or port install the_silver_searcher Linux   Ubuntu >= 13.10 (Saucy) or Debian >= 8 (Jessie) apt-get install silversearcher-ag   Fedora 21 and lower yum install the_silver_searcher   Fedora 22+ dnf install the_silver_searcher   RHEL7+ yum install epel-release.noarch the_silver_searcher   Gentoo emerge -a sys-apps/the_silver_searcher   Arch pacman -S the_silver_searcher   Slackware sbopkg -i the_silver_searcher   openSUSE: zypper install the_silver_searcher   CentOS: yum install the_silver_searcher  SUSE Linux Enterprise: Follow these simple instructions.  BSD   FreeBSD pkg install the_silver_searcher   OpenBSD/NetBSD pkg_add the_silver_searcher   Windows   Win32/64 Unofficial daily builds are available.   Chocolatey choco install ag   MSYS2 pacman -S mingw-w64-{i686,x86_64}-ag   Cygwin Run the relevant setup-*.exe, and select \"thesilversearcher\" in the \"Utils\" category.  "},{"slug":"/blog/look-i-have-a-mac-book-pro-now/","title":"Look, I have a MacBook Pro now","tags":["Technical","Mac"],"html":"Hooray, I now have a new MacBook Pro! I never thought the day would come where that would happen. I've always been a Microsoft junkie, hacking away at daddy's computer as a young girl while other girls were having sleep overs and pillow fights and who knows what other things young girls did for fun before they had access to the web and social media. My history of using Microsoft Windows dates back over a span 20 years so there was definitely a resistance to change. When I joined CloudAfrica I moved over to Linux. I first used Ubuntu and then I switched over to try out Fedora. It took a bit of getting used to but I figured it out. I had a lot to ramp up on though which included the scary space of Vim. I was glad it wasn't a Mac. I remember trying out Mac as an early adult and found it to be backwards. I couldn't get to my applications, the window control icons were on the \"wrong\" side of the window and other excuses I can't remember now. I paired with another developer at CloudAfrica who used a Mac so I guess I picked up a few tips and tricks subconsciously through him because now I have a MacBook Pro (when I joined Simply in August) and I took to it like a fish takes to water so now I'm like, hooray, I have a MacBook Pro. The things that make it the most appealing to me are the multi-touch gestures, it's slick interface and the kernel doesn't crash like it did on Fedora. Anyway, I don't think I'd buy a Mac because they're rather pricey so I'll just deal with it üòÜ Now that I got a MacBook, I needed to figure out how to set it up for my development environment. I'll take you through that in my next post."},{"slug":"/blog/setup-mac-os-development-environment/","title":"Setup macOS development environment","tags":["Technical","Mac"],"html":" Note: I am running macOS Mojave on a 2.8 GHz Intel Core i7 with 16 GB 2133 MHz LPDDR3 RAM. I am setting up my environment to write some awesome Clojure code.  This environment is for Clojure and NodeJS development using the Spacemacs configuration with Emacs and Vim bindings. Homebrew The missing package manager for macOS (or Linux). Wiki | brew /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" The script explains what it will do and then pauses before it does it. Read about other installation options. Install Homebrew on Linux and Windows Subsystem for Linux. Java OpenJDK OpenJDK is a free and open-source implementation of the Java SE Platform Edition. Wiki | GitHub | StackExchange brew tap AdoptOpenJDK/openjdk brew install &lt;version> Versions:  adoptopenjdk-openjdk8 adoptopenjdk-openjdk9 adoptopenjdk-openjdk10  Clojure Clojure is a modern, dynamic, and functional dialect of the Lisp programming language on the Java platform. Like other Lisps, Clojure treats code as data and has a Lisp macro system. The current development process is community-driven, overseen by Rich Hickey as its benevolent dictator for life. Wiki | Clojure.org brew install clojure Leiningen Leiningen is a build automation and dependency management tool for the simple configuration of software projects written in the Clojure programming language. Leiningen was created by Phil Hagelberg. Wiki | GitHub | Homebrew brew install leiningen Node Node.js is an open-source, cross-platform, JavaScript run-time environment that executes JavaScript code outside of a browser. Wiki | NodeSource | NodeJS sudo npm install npm --global # Update the `npm` CLI client shell iTerm2 iTerm2 is a GPL-licensed terminal emulator for macOS. It was derived from and has mostly supplanted the earlier \"iTerm\" application. iTerm2 supports operating system features such as window transparency, full-screen mode, Expos√© Tabs, Growl notifications, and standard keyboard shortcuts. Wiki | iTerm2 Zsh The Z shell (zsh) is a Unix shell that can be used as an interactive login shell and as a command interpreter for shell scripting. Zsh is an extended Bourne shell with many improvements, including some features of Bash, ksh, and tcsh. Wiki | Zsh | Installation Try zsh --version before installing it from Homebrew. If it's newer than 4.3.9 you might be OK. Preferably newer than or equal to 5.0. brew install zsh zsh-completions To set zsh as your default shell, execute the following for macOS High Sierra chsh -s /bin/zsh Assuming you have Homebrew installed. If not, most versions of macOS ship zsh by default, but it's normally an older version. Alternatively, you may also use MacPorts sudo port install zsh zsh-completions oh-my-zsh Oh My Zsh is an open source, community-driven framework for managing your zsh configuration. Ohmyz | GitHub sh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\" Powerlevel9k Powerlevel9k is a theme for ZSH which uses Powerline Fonts. It can be used with vanilla ZSH or ZSH frameworks such as Oh-My-Zsh, Prezto, Antigen, and many others. Get more out of your terminal. Be a badass. GitHub brew tap sambadevi/powerlevel9k brew install powerlevel9k git clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k ZSH_THEME=\"powerlevel9k/powerlevel9k\" #update ~/.zshrc file zsh-syntax-highlighting This package provides syntax highlighting for the shell zsh. It enables highlighting of commands whilst they are typed at a zsh prompt into an interactive terminal. This helps in reviewing commands before running them, particularly in catching syntax errors. GitHub git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting zsh-autosuggestion It suggests commands as you type based on history and completions. GitHub git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions Activate plugins in ~/.zshrc under plugins: plugins=(gitzsh-syntax-highlightingzsh-autosuggestions) Tools Git A distributed version-control system for tracking changes in source code. Atlassian | Wiki | Installation There are several ways to install Git on a Mac. The easiest is probably to install the Xcode Command Line Tools. On Mavericks (10.9) or above you can do this simply by trying to run git from the Terminal the very first time. git --version If you don‚Äôt have it installed already, it will prompt you to install it. If you want a more up to date version, you can also install it via a binary installer. A macOS Git installer is maintained and available for download at the Git website. You can also install it as part of the GitHub for macOS install. Their GUI Git tool has an option to install command line tools as well. You can download that tool from the GitHub for macOS website. vim syntax highlighting To enable the syntax coloring for vim, go to your home directory, and open or create the .vimrc file if it doesn‚Äôt already exist. Codexpedia cd ~ vim .vimrc filetype plugin indent on syntax on Toggle syntax highlighting in Vim, press Esc and then type the below and enter: :syntax &lt;on|off> Gatsby Gatsby is a React-based, GraphQL powered, static site generator. It uses powerful preconfiguration to build a website that uses only static files for incredibly fast page loads, service workers, code splitting, server-side rendering, intelligent image loading, asset optimization, and data prefetching. MediaCurrent | Gatsby npm install -g gatsby-cli Emacs Emacs is a family of text editors that are characterized by their extensibility. The manual for the most widely used variant, GNU Emacs, describes it as \"the extensible, customizable, self-documenting, real-time display editor\". Wiki | emacsformacosx Spacemacs It can take advantage of all of GNU Emacs' features, including both graphical and command-line user interfaces, and being executable under X Window System and within a Unix shell terminal. Spacemacs consists mainly of configuration files, pre-defined internal commands, and configurations for various plug-ins (called 'packages'). It has three user-selectable input modes: Emacs mode, Vim mode (based on the evil Emacs package for Vim emulation), and Hybrid mode. Wiki | Practicalli In my case, Emacs could not verify the GPG signatures of packages downloaded from elpa. I applied the following workaround: Modify the init.el in .emacs.d/initl.el, and add at or near the top of the file the following line; (setq package-check-signature nil) Then the spacemacs configuration (edit ~/.spacemacs) needs to be modified to allow the editor to download packages from elpa via unsecure channels, this is done by modifying the following settings; dotspacemacs-elpa-https nil Perhaps this will work to solve the issue instead of disabling the signature check and https. I haven't tried it yet. brew install gnupg When using helm, and helm-ag, the executable for silver surfer (ag) needs to be but onto your path so that emacs can find and use it. brew install the_silver_searcher GitHub .spacemacs config Keep a copy of your config under version control in the event something goes wrong when you change it. Gist (configuration) | Practicalli themes Press SPC T n to cycle to the next theme in the list I now use apropospriate-dark configured under themes in the .spacemacs configuration file. GitHub Treemacs layer This layer sets up a file navigation and project explorer side-window via Treemacs. Layer | Keybindings (setq-default dotspacemacs-configuration-layers '((treemacs :variablestreemacs-use-follow-mode ttreemacs-use-filewatch-mode ttreemacs-use-collapsed-directories 3treemacs-lock-width t))) Adjusting window sizes You may have a configuration where the golden ratio or zoom has been configured. Your windows won't be balanced (equal sizes when windows are split). Windows are expanded when they are focused while other windows appear smaller.  Toggle zoom SPC t g Toggle golden ratio mode SPC SPC &gt; golden-ratio-mode Balance windows area SPC w =  Am I missing something? Do you have something configured in your environment that is not in my setup? Feel free to share üòä"},{"slug":"/blog/gatsby-remark-emoji/","title":"gatsby-remark-emoji","tags":["Technical","Gatsby"],"html":"I use this plugin for emojis on my website. The reference to all possible emojis are hidden here. The current emojis include the following. You can reference an emoji by surrounding the keyword with colons such as :emoji-key: üíØ"},{"slug":"/blog/git-aliases/","title":"Git aliases","tags":["Technical","Git"],"html":"You can create Git aliases for long or repetitive commands which map to short cuts. This can make your workflow more efficient as it decreases the number of keystrokes involved. You create your alias using the Git config command which updates the Git configuration files (local or global scope). You can create them using the git config command. Your alias will not include the git command. So git checkout will be git config --global alias.co checkout git config --global alias.co checkout git config --global alias.br branch git config --global alias.ci commit git config --global alias.st status I've edited my global configuration file ~/.gitconfig and added the following aliases [alias]pp = log --graph --abbrev-commit --decorate --date=relative --allst = status --short --branchlg = log --pretty='%Cblue%h%Creset | %C(yellow)%d%Creset %s %Cgreen(%cr)%Creset %C(cyan)[%an]%Creset' --graphdp = diff --word-diff --unified=10s = statusa = addcm = commit -mpushall = !git remote | xargs -L1 git push --all  pp: pretty print the log st: short status lg: pretty log dp: pretty diff s: short for status a: short for add cm: short for commit message pushall: pushes to all remotes "},{"slug":"/blog/how-i-got-started-with-my-first-gatsby-source-remark-plugin/","title":"How I got started with my first Gatsby source & remark plugin","tags":["Technical","Gatsby"],"html":"I created my first npm package - EVER! üéâ It's a Gatsby source and transformer remark plugin called gatsby-remark-interactive-gifs. What that means is that it both extends the Gatsby GraphQL schema with what I call interactive gif data and it translates the Markdown, which I have in the form of a gif protocol, into HTML. That means that this `gif:nyancat.gif:caption=Nyanyanyanyanyanyanya` becomes üëáNyanyanyanyanyanyanya  If you like the idea of this plugin then please give it a star ‚≠ê on GitHub. Fork it to get an idea of how I developed the plugin. Try it out by installing it now üòÑ npm i -S gatsby-remark-interactive-gifs  Get started  If you are unfamiliar with Gatsby, Gatsby is a blazing fast üöÄ modern site generator for React. To dive right in, check out the Gatsby quick start guide.   Create a Gatsby project (or use your existing one). Use the default or go fancy with a Gatsby starter for a fresh copy. I used gatsby-started-default for my blog.  gatsby new my-default-starter https://github.com/gatsbyjs/gatsby-starter-default  Create a plugins directory in the root of your project with a directory of the plugin you want to create. eg. plugins/gatsby-remark-interactive-gifs There is a specific naming convention for plugins that you should take note of. Initialize the directory with git before getting started: git init Each plugin needs to have a package.json file so initialize your plugin with npm init. Add the --yes / -y flag if you wish to skip the questionnaire. Be sure to configure your package.json file with the relevant details if you intend on publishing to npm. Include relevant keywords so that your plugin is automatically detected by Gatsby's indexing. Install the packages you need for your plugin using npm or yarn and configure them accordingly. Commit your lock file! Find a place to put your tests. I put mine in a specs directory in the root of the plugin. Create a src directory in the root of your project where you will place all the files you want to create for your plugin. Read through the plugin documentation to get an idea of what you can create. Also, there are some files that Gatsby looks for in a plugin. Configure your plugin in your gatsby-config.json file in the root of your project. Write the code you want to put in your plugin. You are now able to test it locally.  Publish your package  You can create a release script that will bump the version, update the CHANGELOG.md and tag that commit for your release. I use standard-version to automate that process. To publish your plugin, login to npm through the CLI and then publish it. Be sure to bump your version on each release.  npm run release #if you have the relevant release script git push -u origin --tags npm publish  Your plugin may not be available right away. Gatsby uses Algolia to index plugins and Gatsby rebuilds their website periodically to include plugins. "}]